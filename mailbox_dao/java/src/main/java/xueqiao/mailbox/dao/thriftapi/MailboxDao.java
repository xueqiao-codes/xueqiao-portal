/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.mailbox.dao.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class MailboxDao {

  /**
   * 信箱消息系统dao
   */
  public interface Iface {

    /**
     * 提交信箱消息
     * 
     * @param platformArgs
     * @param message
     */
    public void addMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessage message) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 修改信箱消息状态
     * 
     * @param platformArgs
     * @param mbmId
     * @param status
     */
    public void modifyMBMessageStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, xueqiao.mailbox.thriftdata.mb.MStatus status) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 查询消息列表
     * 
     * @param platformArgs
     * @param queryOption
     * @param pageOption
     */
    public xueqiao.mailbox.thriftdata.req.MBMessagePage queryMBMessagePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 提交信箱消息模板
     * 
     * @param platformArgs
     * @param template
     */
    public void addMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 修改信箱消息模板
     * 
     * @param platformArgs
     * @param template
     */
    public void modifyMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 删除信箱消息模板
     * 
     * @param platformArgs
     * @param templateId
     */
    public void deleteMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long templateId) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 查询信箱消息模板列表
     * 
     * @param platformArgs
     * @param queryOption
     * @param pageOption
     */
    public xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage queryMBMessageTemplatePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 开始发送信箱消息实例
     * 生成messageJob，返回jobId
     * 
     * @param platformArgs
     * @param mbmId
     * @param isMessageCompleted
     */
    public long startSendMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, boolean isMessageCompleted) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 修改信箱消息状态
     * 
     * @param platformArgs
     * @param jobId
     * @param status
     * @param errorDescription
     */
    public void modifyMBMessageJobStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long jobId, xueqiao.mailbox.thriftdata.mb.MJStatus status, String errorDescription) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

    /**
     * 查询已发送消息列表
     * 
     * @param platformArgs
     * @param queryOption
     * @param pageOption
     */
    public xueqiao.mailbox.thriftdata.req.MBMessageJobPage queryMBMessageJobPage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException;

  }

  public interface AsyncIface {

    public void addMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessage message, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void modifyMBMessageStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, xueqiao.mailbox.thriftdata.mb.MStatus status, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void queryMBMessagePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void addMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void modifyMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void deleteMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long templateId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void queryMBMessageTemplatePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void startSendMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, boolean isMessageCompleted, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void modifyMBMessageJobStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long jobId, xueqiao.mailbox.thriftdata.mb.MJStatus status, String errorDescription, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

    public void queryMBMessageJobPage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException;

  }

  public static class Client extends org.apache.thrift.TServiceClient implements Iface {
    public static class Factory implements org.apache.thrift.TServiceClientFactory<Client> {
      public Factory() {}
      public Client getClient(org.apache.thrift.protocol.TProtocol prot) {
        return new Client(prot);
      }
      public Client getClient(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
        return new Client(iprot, oprot);
      }
    }

    public Client(org.apache.thrift.protocol.TProtocol prot)
    {
      super(prot, prot);
    }

    public Client(org.apache.thrift.protocol.TProtocol iprot, org.apache.thrift.protocol.TProtocol oprot) {
      super(iprot, oprot);
    }

    public void addMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessage message) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_addMBMessage(platformArgs, message);
      recv_addMBMessage();
    }

    public void send_addMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessage message) throws org.apache.thrift.TException
    {
      addMBMessage_args args = new addMBMessage_args();
      args.setPlatformArgs(platformArgs);
      args.setMessage(message);
      sendBase("addMBMessage", args);
    }

    public void recv_addMBMessage() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      addMBMessage_result result = new addMBMessage_result();
      receiveBase(result, "addMBMessage");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void modifyMBMessageStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, xueqiao.mailbox.thriftdata.mb.MStatus status) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_modifyMBMessageStatus(platformArgs, mbmId, status);
      recv_modifyMBMessageStatus();
    }

    public void send_modifyMBMessageStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, xueqiao.mailbox.thriftdata.mb.MStatus status) throws org.apache.thrift.TException
    {
      modifyMBMessageStatus_args args = new modifyMBMessageStatus_args();
      args.setPlatformArgs(platformArgs);
      args.setMbmId(mbmId);
      args.setStatus(status);
      sendBase("modifyMBMessageStatus", args);
    }

    public void recv_modifyMBMessageStatus() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      modifyMBMessageStatus_result result = new modifyMBMessageStatus_result();
      receiveBase(result, "modifyMBMessageStatus");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public xueqiao.mailbox.thriftdata.req.MBMessagePage queryMBMessagePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_queryMBMessagePage(platformArgs, queryOption, pageOption);
      return recv_queryMBMessagePage();
    }

    public void send_queryMBMessagePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.apache.thrift.TException
    {
      queryMBMessagePage_args args = new queryMBMessagePage_args();
      args.setPlatformArgs(platformArgs);
      args.setQueryOption(queryOption);
      args.setPageOption(pageOption);
      sendBase("queryMBMessagePage", args);
    }

    public xueqiao.mailbox.thriftdata.req.MBMessagePage recv_queryMBMessagePage() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      queryMBMessagePage_result result = new queryMBMessagePage_result();
      receiveBase(result, "queryMBMessagePage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryMBMessagePage failed: unknown result");
    }

    public void addMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_addMBMessageTemplate(platformArgs, template);
      recv_addMBMessageTemplate();
    }

    public void send_addMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) throws org.apache.thrift.TException
    {
      addMBMessageTemplate_args args = new addMBMessageTemplate_args();
      args.setPlatformArgs(platformArgs);
      args.setTemplate(template);
      sendBase("addMBMessageTemplate", args);
    }

    public void recv_addMBMessageTemplate() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      addMBMessageTemplate_result result = new addMBMessageTemplate_result();
      receiveBase(result, "addMBMessageTemplate");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void modifyMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_modifyMBMessageTemplate(platformArgs, template);
      recv_modifyMBMessageTemplate();
    }

    public void send_modifyMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) throws org.apache.thrift.TException
    {
      modifyMBMessageTemplate_args args = new modifyMBMessageTemplate_args();
      args.setPlatformArgs(platformArgs);
      args.setTemplate(template);
      sendBase("modifyMBMessageTemplate", args);
    }

    public void recv_modifyMBMessageTemplate() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      modifyMBMessageTemplate_result result = new modifyMBMessageTemplate_result();
      receiveBase(result, "modifyMBMessageTemplate");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public void deleteMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long templateId) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_deleteMBMessageTemplate(platformArgs, templateId);
      recv_deleteMBMessageTemplate();
    }

    public void send_deleteMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long templateId) throws org.apache.thrift.TException
    {
      deleteMBMessageTemplate_args args = new deleteMBMessageTemplate_args();
      args.setPlatformArgs(platformArgs);
      args.setTemplateId(templateId);
      sendBase("deleteMBMessageTemplate", args);
    }

    public void recv_deleteMBMessageTemplate() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      deleteMBMessageTemplate_result result = new deleteMBMessageTemplate_result();
      receiveBase(result, "deleteMBMessageTemplate");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage queryMBMessageTemplatePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_queryMBMessageTemplatePage(platformArgs, queryOption, pageOption);
      return recv_queryMBMessageTemplatePage();
    }

    public void send_queryMBMessageTemplatePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.apache.thrift.TException
    {
      queryMBMessageTemplatePage_args args = new queryMBMessageTemplatePage_args();
      args.setPlatformArgs(platformArgs);
      args.setQueryOption(queryOption);
      args.setPageOption(pageOption);
      sendBase("queryMBMessageTemplatePage", args);
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage recv_queryMBMessageTemplatePage() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      queryMBMessageTemplatePage_result result = new queryMBMessageTemplatePage_result();
      receiveBase(result, "queryMBMessageTemplatePage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryMBMessageTemplatePage failed: unknown result");
    }

    public long startSendMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, boolean isMessageCompleted) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_startSendMBMessage(platformArgs, mbmId, isMessageCompleted);
      return recv_startSendMBMessage();
    }

    public void send_startSendMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, boolean isMessageCompleted) throws org.apache.thrift.TException
    {
      startSendMBMessage_args args = new startSendMBMessage_args();
      args.setPlatformArgs(platformArgs);
      args.setMbmId(mbmId);
      args.setIsMessageCompleted(isMessageCompleted);
      sendBase("startSendMBMessage", args);
    }

    public long recv_startSendMBMessage() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      startSendMBMessage_result result = new startSendMBMessage_result();
      receiveBase(result, "startSendMBMessage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "startSendMBMessage failed: unknown result");
    }

    public void modifyMBMessageJobStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long jobId, xueqiao.mailbox.thriftdata.mb.MJStatus status, String errorDescription) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_modifyMBMessageJobStatus(platformArgs, jobId, status, errorDescription);
      recv_modifyMBMessageJobStatus();
    }

    public void send_modifyMBMessageJobStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long jobId, xueqiao.mailbox.thriftdata.mb.MJStatus status, String errorDescription) throws org.apache.thrift.TException
    {
      modifyMBMessageJobStatus_args args = new modifyMBMessageJobStatus_args();
      args.setPlatformArgs(platformArgs);
      args.setJobId(jobId);
      args.setStatus(status);
      args.setErrorDescription(errorDescription);
      sendBase("modifyMBMessageJobStatus", args);
    }

    public void recv_modifyMBMessageJobStatus() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      modifyMBMessageJobStatus_result result = new modifyMBMessageJobStatus_result();
      receiveBase(result, "modifyMBMessageJobStatus");
      if (result.err != null) {
        throw result.err;
      }
      return;
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageJobPage queryMBMessageJobPage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      send_queryMBMessageJobPage(platformArgs, queryOption, pageOption);
      return recv_queryMBMessageJobPage();
    }

    public void send_queryMBMessageJobPage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption) throws org.apache.thrift.TException
    {
      queryMBMessageJobPage_args args = new queryMBMessageJobPage_args();
      args.setPlatformArgs(platformArgs);
      args.setQueryOption(queryOption);
      args.setPageOption(pageOption);
      sendBase("queryMBMessageJobPage", args);
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageJobPage recv_queryMBMessageJobPage() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException
    {
      queryMBMessageJobPage_result result = new queryMBMessageJobPage_result();
      receiveBase(result, "queryMBMessageJobPage");
      if (result.isSetSuccess()) {
        return result.success;
      }
      if (result.err != null) {
        throw result.err;
      }
      throw new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.MISSING_RESULT, "queryMBMessageJobPage failed: unknown result");
    }

  }
  public static class AsyncClient extends org.apache.thrift.async.TAsyncClient implements AsyncIface {
    public static class Factory implements org.apache.thrift.async.TAsyncClientFactory<AsyncClient> {
      private org.apache.thrift.async.TAsyncClientManager clientManager;
      private org.apache.thrift.protocol.TProtocolFactory protocolFactory;
      public Factory(org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.protocol.TProtocolFactory protocolFactory) {
        this.clientManager = clientManager;
        this.protocolFactory = protocolFactory;
      }
      public AsyncClient getAsyncClient(org.apache.thrift.transport.TNonblockingTransport transport) {
        return new AsyncClient(protocolFactory, clientManager, transport);
      }
    }

    public AsyncClient(org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.async.TAsyncClientManager clientManager, org.apache.thrift.transport.TNonblockingTransport transport) {
      super(protocolFactory, clientManager, transport);
    }

    public void addMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessage message, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addMBMessage_call method_call = new addMBMessage_call(platformArgs, message, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addMBMessage_call extends org.apache.thrift.async.TAsyncMethodCall <addMBMessage_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private xueqiao.mailbox.thriftdata.mb.MBMessage message;
      public addMBMessage_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessage message, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.message = message;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addMBMessage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addMBMessage_args args = new addMBMessage_args();
        args.setPlatformArgs(platformArgs);
        args.setMessage(message);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public void getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        (new Client(prot)).recv_addMBMessage();
      }
    }

    public void modifyMBMessageStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, xueqiao.mailbox.thriftdata.mb.MStatus status, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      modifyMBMessageStatus_call method_call = new modifyMBMessageStatus_call(platformArgs, mbmId, status, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class modifyMBMessageStatus_call extends org.apache.thrift.async.TAsyncMethodCall <modifyMBMessageStatus_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private long mbmId;
      private xueqiao.mailbox.thriftdata.mb.MStatus status;
      public modifyMBMessageStatus_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, xueqiao.mailbox.thriftdata.mb.MStatus status, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.mbmId = mbmId;
        this.status = status;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("modifyMBMessageStatus", org.apache.thrift.protocol.TMessageType.CALL, 0));
        modifyMBMessageStatus_args args = new modifyMBMessageStatus_args();
        args.setPlatformArgs(platformArgs);
        args.setMbmId(mbmId);
        args.setStatus(status);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public void getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        (new Client(prot)).recv_modifyMBMessageStatus();
      }
    }

    public void queryMBMessagePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryMBMessagePage_call method_call = new queryMBMessagePage_call(platformArgs, queryOption, pageOption, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryMBMessagePage_call extends org.apache.thrift.async.TAsyncMethodCall <queryMBMessagePage_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption;
      private org.soldier.platform.page.IndexedPageOption pageOption;
      public queryMBMessagePage_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.queryOption = queryOption;
        this.pageOption = pageOption;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryMBMessagePage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryMBMessagePage_args args = new queryMBMessagePage_args();
        args.setPlatformArgs(platformArgs);
        args.setQueryOption(queryOption);
        args.setPageOption(pageOption);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public xueqiao.mailbox.thriftdata.req.MBMessagePage getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryMBMessagePage();
      }
    }

    public void addMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      addMBMessageTemplate_call method_call = new addMBMessageTemplate_call(platformArgs, template, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class addMBMessageTemplate_call extends org.apache.thrift.async.TAsyncMethodCall <addMBMessageTemplate_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template;
      public addMBMessageTemplate_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.template = template;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("addMBMessageTemplate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        addMBMessageTemplate_args args = new addMBMessageTemplate_args();
        args.setPlatformArgs(platformArgs);
        args.setTemplate(template);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public void getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        (new Client(prot)).recv_addMBMessageTemplate();
      }
    }

    public void modifyMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      modifyMBMessageTemplate_call method_call = new modifyMBMessageTemplate_call(platformArgs, template, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class modifyMBMessageTemplate_call extends org.apache.thrift.async.TAsyncMethodCall <modifyMBMessageTemplate_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template;
      public modifyMBMessageTemplate_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.template = template;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("modifyMBMessageTemplate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        modifyMBMessageTemplate_args args = new modifyMBMessageTemplate_args();
        args.setPlatformArgs(platformArgs);
        args.setTemplate(template);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public void getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        (new Client(prot)).recv_modifyMBMessageTemplate();
      }
    }

    public void deleteMBMessageTemplate(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long templateId, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      deleteMBMessageTemplate_call method_call = new deleteMBMessageTemplate_call(platformArgs, templateId, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class deleteMBMessageTemplate_call extends org.apache.thrift.async.TAsyncMethodCall <deleteMBMessageTemplate_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private long templateId;
      public deleteMBMessageTemplate_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long templateId, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.templateId = templateId;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("deleteMBMessageTemplate", org.apache.thrift.protocol.TMessageType.CALL, 0));
        deleteMBMessageTemplate_args args = new deleteMBMessageTemplate_args();
        args.setPlatformArgs(platformArgs);
        args.setTemplateId(templateId);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public void getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        (new Client(prot)).recv_deleteMBMessageTemplate();
      }
    }

    public void queryMBMessageTemplatePage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryMBMessageTemplatePage_call method_call = new queryMBMessageTemplatePage_call(platformArgs, queryOption, pageOption, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryMBMessageTemplatePage_call extends org.apache.thrift.async.TAsyncMethodCall <queryMBMessageTemplatePage_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption;
      private org.soldier.platform.page.IndexedPageOption pageOption;
      public queryMBMessageTemplatePage_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.queryOption = queryOption;
        this.pageOption = pageOption;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryMBMessageTemplatePage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryMBMessageTemplatePage_args args = new queryMBMessageTemplatePage_args();
        args.setPlatformArgs(platformArgs);
        args.setQueryOption(queryOption);
        args.setPageOption(pageOption);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryMBMessageTemplatePage();
      }
    }

    public void startSendMBMessage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, boolean isMessageCompleted, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      startSendMBMessage_call method_call = new startSendMBMessage_call(platformArgs, mbmId, isMessageCompleted, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class startSendMBMessage_call extends org.apache.thrift.async.TAsyncMethodCall <startSendMBMessage_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private long mbmId;
      private boolean isMessageCompleted;
      public startSendMBMessage_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long mbmId, boolean isMessageCompleted, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.mbmId = mbmId;
        this.isMessageCompleted = isMessageCompleted;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("startSendMBMessage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        startSendMBMessage_args args = new startSendMBMessage_args();
        args.setPlatformArgs(platformArgs);
        args.setMbmId(mbmId);
        args.setIsMessageCompleted(isMessageCompleted);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public long getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_startSendMBMessage();
      }
    }

    public void modifyMBMessageJobStatus(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long jobId, xueqiao.mailbox.thriftdata.mb.MJStatus status, String errorDescription, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      modifyMBMessageJobStatus_call method_call = new modifyMBMessageJobStatus_call(platformArgs, jobId, status, errorDescription, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class modifyMBMessageJobStatus_call extends org.apache.thrift.async.TAsyncMethodCall <modifyMBMessageJobStatus_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private long jobId;
      private xueqiao.mailbox.thriftdata.mb.MJStatus status;
      private String errorDescription;
      public modifyMBMessageJobStatus_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, long jobId, xueqiao.mailbox.thriftdata.mb.MJStatus status, String errorDescription, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.jobId = jobId;
        this.status = status;
        this.errorDescription = errorDescription;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("modifyMBMessageJobStatus", org.apache.thrift.protocol.TMessageType.CALL, 0));
        modifyMBMessageJobStatus_args args = new modifyMBMessageJobStatus_args();
        args.setPlatformArgs(platformArgs);
        args.setJobId(jobId);
        args.setStatus(status);
        args.setErrorDescription(errorDescription);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public void getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        (new Client(prot)).recv_modifyMBMessageJobStatus();
      }
    }

    public void queryMBMessageJobPage(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler) throws org.apache.thrift.TException {
      checkReady();
      queryMBMessageJobPage_call method_call = new queryMBMessageJobPage_call(platformArgs, queryOption, pageOption, resultHandler, this, ___protocolFactory, ___transport);
      this.___currentMethod = method_call;
      ___manager.call(method_call);
    }

    public static class queryMBMessageJobPage_call extends org.apache.thrift.async.TAsyncMethodCall <queryMBMessageJobPage_call>{
      private org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs;
      private xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption;
      private org.soldier.platform.page.IndexedPageOption pageOption;
      public queryMBMessageJobPage_call(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs, xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption, org.soldier.platform.page.IndexedPageOption pageOption, org.apache.thrift.async.AsyncMethodCallback resultHandler, org.apache.thrift.async.TAsyncClient client, org.apache.thrift.protocol.TProtocolFactory protocolFactory, org.apache.thrift.transport.TNonblockingTransport transport) throws org.apache.thrift.TException {
        super(client, protocolFactory, transport, resultHandler, false);
        this.platformArgs = platformArgs;
        this.queryOption = queryOption;
        this.pageOption = pageOption;
      }

      public void write_args(org.apache.thrift.protocol.TProtocol prot) throws org.apache.thrift.TException {
        prot.writeMessageBegin(new org.apache.thrift.protocol.TMessage("queryMBMessageJobPage", org.apache.thrift.protocol.TMessageType.CALL, 0));
        queryMBMessageJobPage_args args = new queryMBMessageJobPage_args();
        args.setPlatformArgs(platformArgs);
        args.setQueryOption(queryOption);
        args.setPageOption(pageOption);
        args.write(prot);
        prot.writeMessageEnd();
      }

      public xueqiao.mailbox.thriftdata.req.MBMessageJobPage getResult() throws org.soldier.platform.svr_platform.comm.ErrorInfo, org.apache.thrift.TException {
        if (getState() != org.apache.thrift.async.TAsyncMethodCall.State.RESPONSE_READ) {
          throw new IllegalStateException("Method call not finished!");
        }
        org.apache.thrift.transport.TMemoryInputTransport memoryTransport = new org.apache.thrift.transport.TMemoryInputTransport(getFrameBuffer().array());
        org.apache.thrift.protocol.TProtocol prot = client.getProtocolFactory().getProtocol(memoryTransport);
        return (new Client(prot)).recv_queryMBMessageJobPage();
      }
    }

  }

  public static class Processor<I extends Iface> extends org.apache.thrift.TBaseProcessor<I> implements org.apache.thrift.TProcessor {
    public Processor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.ProcessFunction<I, ? extends org.apache.thrift.TBase>>()));
    }

    protected Processor(I iface, Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends Iface> Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> getProcessMap(Map<String,  org.apache.thrift.ProcessFunction<I, ? extends  org.apache.thrift.TBase>> processMap) {
      processMap.put("addMBMessage", new addMBMessage());
      processMap.put("modifyMBMessageStatus", new modifyMBMessageStatus());
      processMap.put("queryMBMessagePage", new queryMBMessagePage());
      processMap.put("addMBMessageTemplate", new addMBMessageTemplate());
      processMap.put("modifyMBMessageTemplate", new modifyMBMessageTemplate());
      processMap.put("deleteMBMessageTemplate", new deleteMBMessageTemplate());
      processMap.put("queryMBMessageTemplatePage", new queryMBMessageTemplatePage());
      processMap.put("startSendMBMessage", new startSendMBMessage());
      processMap.put("modifyMBMessageJobStatus", new modifyMBMessageJobStatus());
      processMap.put("queryMBMessageJobPage", new queryMBMessageJobPage());
      return processMap;
    }

    public static class addMBMessage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addMBMessage_args> {
      public addMBMessage() {
        super("addMBMessage");
      }

      public addMBMessage_args getEmptyArgsInstance() {
        return new addMBMessage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addMBMessage_result getResult(I iface, addMBMessage_args args) throws org.apache.thrift.TException {
        addMBMessage_result result = new addMBMessage_result();
        try {
          iface.addMBMessage(args.platformArgs, args.message);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class modifyMBMessageStatus<I extends Iface> extends org.apache.thrift.ProcessFunction<I, modifyMBMessageStatus_args> {
      public modifyMBMessageStatus() {
        super("modifyMBMessageStatus");
      }

      public modifyMBMessageStatus_args getEmptyArgsInstance() {
        return new modifyMBMessageStatus_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public modifyMBMessageStatus_result getResult(I iface, modifyMBMessageStatus_args args) throws org.apache.thrift.TException {
        modifyMBMessageStatus_result result = new modifyMBMessageStatus_result();
        try {
          iface.modifyMBMessageStatus(args.platformArgs, args.mbmId, args.status);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class queryMBMessagePage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryMBMessagePage_args> {
      public queryMBMessagePage() {
        super("queryMBMessagePage");
      }

      public queryMBMessagePage_args getEmptyArgsInstance() {
        return new queryMBMessagePage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryMBMessagePage_result getResult(I iface, queryMBMessagePage_args args) throws org.apache.thrift.TException {
        queryMBMessagePage_result result = new queryMBMessagePage_result();
        try {
          result.success = iface.queryMBMessagePage(args.platformArgs, args.queryOption, args.pageOption);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class addMBMessageTemplate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, addMBMessageTemplate_args> {
      public addMBMessageTemplate() {
        super("addMBMessageTemplate");
      }

      public addMBMessageTemplate_args getEmptyArgsInstance() {
        return new addMBMessageTemplate_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public addMBMessageTemplate_result getResult(I iface, addMBMessageTemplate_args args) throws org.apache.thrift.TException {
        addMBMessageTemplate_result result = new addMBMessageTemplate_result();
        try {
          iface.addMBMessageTemplate(args.platformArgs, args.template);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class modifyMBMessageTemplate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, modifyMBMessageTemplate_args> {
      public modifyMBMessageTemplate() {
        super("modifyMBMessageTemplate");
      }

      public modifyMBMessageTemplate_args getEmptyArgsInstance() {
        return new modifyMBMessageTemplate_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public modifyMBMessageTemplate_result getResult(I iface, modifyMBMessageTemplate_args args) throws org.apache.thrift.TException {
        modifyMBMessageTemplate_result result = new modifyMBMessageTemplate_result();
        try {
          iface.modifyMBMessageTemplate(args.platformArgs, args.template);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class deleteMBMessageTemplate<I extends Iface> extends org.apache.thrift.ProcessFunction<I, deleteMBMessageTemplate_args> {
      public deleteMBMessageTemplate() {
        super("deleteMBMessageTemplate");
      }

      public deleteMBMessageTemplate_args getEmptyArgsInstance() {
        return new deleteMBMessageTemplate_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public deleteMBMessageTemplate_result getResult(I iface, deleteMBMessageTemplate_args args) throws org.apache.thrift.TException {
        deleteMBMessageTemplate_result result = new deleteMBMessageTemplate_result();
        try {
          iface.deleteMBMessageTemplate(args.platformArgs, args.templateId);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class queryMBMessageTemplatePage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryMBMessageTemplatePage_args> {
      public queryMBMessageTemplatePage() {
        super("queryMBMessageTemplatePage");
      }

      public queryMBMessageTemplatePage_args getEmptyArgsInstance() {
        return new queryMBMessageTemplatePage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryMBMessageTemplatePage_result getResult(I iface, queryMBMessageTemplatePage_args args) throws org.apache.thrift.TException {
        queryMBMessageTemplatePage_result result = new queryMBMessageTemplatePage_result();
        try {
          result.success = iface.queryMBMessageTemplatePage(args.platformArgs, args.queryOption, args.pageOption);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class startSendMBMessage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, startSendMBMessage_args> {
      public startSendMBMessage() {
        super("startSendMBMessage");
      }

      public startSendMBMessage_args getEmptyArgsInstance() {
        return new startSendMBMessage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public startSendMBMessage_result getResult(I iface, startSendMBMessage_args args) throws org.apache.thrift.TException {
        startSendMBMessage_result result = new startSendMBMessage_result();
        try {
          result.success = iface.startSendMBMessage(args.platformArgs, args.mbmId, args.isMessageCompleted);
          result.setSuccessIsSet(true);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class modifyMBMessageJobStatus<I extends Iface> extends org.apache.thrift.ProcessFunction<I, modifyMBMessageJobStatus_args> {
      public modifyMBMessageJobStatus() {
        super("modifyMBMessageJobStatus");
      }

      public modifyMBMessageJobStatus_args getEmptyArgsInstance() {
        return new modifyMBMessageJobStatus_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public modifyMBMessageJobStatus_result getResult(I iface, modifyMBMessageJobStatus_args args) throws org.apache.thrift.TException {
        modifyMBMessageJobStatus_result result = new modifyMBMessageJobStatus_result();
        try {
          iface.modifyMBMessageJobStatus(args.platformArgs, args.jobId, args.status, args.errorDescription);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

    public static class queryMBMessageJobPage<I extends Iface> extends org.apache.thrift.ProcessFunction<I, queryMBMessageJobPage_args> {
      public queryMBMessageJobPage() {
        super("queryMBMessageJobPage");
      }

      public queryMBMessageJobPage_args getEmptyArgsInstance() {
        return new queryMBMessageJobPage_args();
      }

      protected boolean isOneway() {
        return false;
      }

      public queryMBMessageJobPage_result getResult(I iface, queryMBMessageJobPage_args args) throws org.apache.thrift.TException {
        queryMBMessageJobPage_result result = new queryMBMessageJobPage_result();
        try {
          result.success = iface.queryMBMessageJobPage(args.platformArgs, args.queryOption, args.pageOption);
        } catch (org.soldier.platform.svr_platform.comm.ErrorInfo err) {
          result.err = err;
        }
        return result;
      }
    }

  }

  public static class AsyncProcessor<I extends AsyncIface> extends org.apache.thrift.TBaseAsyncProcessor<I> {
    private static final Logger LOGGER = LoggerFactory.getLogger(AsyncProcessor.class.getName());
    public AsyncProcessor(I iface) {
      super(iface, getProcessMap(new HashMap<String, org.apache.thrift.AsyncProcessFunction<I, ? extends org.apache.thrift.TBase, ?>>()));
    }

    protected AsyncProcessor(I iface, Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      super(iface, getProcessMap(processMap));
    }

    private static <I extends AsyncIface> Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase,?>> getProcessMap(Map<String,  org.apache.thrift.AsyncProcessFunction<I, ? extends  org.apache.thrift.TBase, ?>> processMap) {
      processMap.put("addMBMessage", new addMBMessage());
      processMap.put("modifyMBMessageStatus", new modifyMBMessageStatus());
      processMap.put("queryMBMessagePage", new queryMBMessagePage());
      processMap.put("addMBMessageTemplate", new addMBMessageTemplate());
      processMap.put("modifyMBMessageTemplate", new modifyMBMessageTemplate());
      processMap.put("deleteMBMessageTemplate", new deleteMBMessageTemplate());
      processMap.put("queryMBMessageTemplatePage", new queryMBMessageTemplatePage());
      processMap.put("startSendMBMessage", new startSendMBMessage());
      processMap.put("modifyMBMessageJobStatus", new modifyMBMessageJobStatus());
      processMap.put("queryMBMessageJobPage", new queryMBMessageJobPage());
      return processMap;
    }

    public static class addMBMessage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addMBMessage_args, Void> {
      public addMBMessage() {
        super("addMBMessage");
      }

      public addMBMessage_args getEmptyArgsInstance() {
        return new addMBMessage_args();
      }

      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            addMBMessage_result result = new addMBMessage_result();
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addMBMessage_result result = new addMBMessage_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addMBMessage_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {
        iface.addMBMessage(args.platformArgs, args.message,resultHandler);
      }
    }

    public static class modifyMBMessageStatus<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, modifyMBMessageStatus_args, Void> {
      public modifyMBMessageStatus() {
        super("modifyMBMessageStatus");
      }

      public modifyMBMessageStatus_args getEmptyArgsInstance() {
        return new modifyMBMessageStatus_args();
      }

      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            modifyMBMessageStatus_result result = new modifyMBMessageStatus_result();
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            modifyMBMessageStatus_result result = new modifyMBMessageStatus_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, modifyMBMessageStatus_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {
        iface.modifyMBMessageStatus(args.platformArgs, args.mbmId, args.status,resultHandler);
      }
    }

    public static class queryMBMessagePage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryMBMessagePage_args, xueqiao.mailbox.thriftdata.req.MBMessagePage> {
      public queryMBMessagePage() {
        super("queryMBMessagePage");
      }

      public queryMBMessagePage_args getEmptyArgsInstance() {
        return new queryMBMessagePage_args();
      }

      public AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessagePage> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessagePage>() { 
          public void onComplete(xueqiao.mailbox.thriftdata.req.MBMessagePage o) {
            queryMBMessagePage_result result = new queryMBMessagePage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            queryMBMessagePage_result result = new queryMBMessagePage_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryMBMessagePage_args args, org.apache.thrift.async.AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessagePage> resultHandler) throws TException {
        iface.queryMBMessagePage(args.platformArgs, args.queryOption, args.pageOption,resultHandler);
      }
    }

    public static class addMBMessageTemplate<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, addMBMessageTemplate_args, Void> {
      public addMBMessageTemplate() {
        super("addMBMessageTemplate");
      }

      public addMBMessageTemplate_args getEmptyArgsInstance() {
        return new addMBMessageTemplate_args();
      }

      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            addMBMessageTemplate_result result = new addMBMessageTemplate_result();
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            addMBMessageTemplate_result result = new addMBMessageTemplate_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, addMBMessageTemplate_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {
        iface.addMBMessageTemplate(args.platformArgs, args.template,resultHandler);
      }
    }

    public static class modifyMBMessageTemplate<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, modifyMBMessageTemplate_args, Void> {
      public modifyMBMessageTemplate() {
        super("modifyMBMessageTemplate");
      }

      public modifyMBMessageTemplate_args getEmptyArgsInstance() {
        return new modifyMBMessageTemplate_args();
      }

      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            modifyMBMessageTemplate_result result = new modifyMBMessageTemplate_result();
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            modifyMBMessageTemplate_result result = new modifyMBMessageTemplate_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, modifyMBMessageTemplate_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {
        iface.modifyMBMessageTemplate(args.platformArgs, args.template,resultHandler);
      }
    }

    public static class deleteMBMessageTemplate<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, deleteMBMessageTemplate_args, Void> {
      public deleteMBMessageTemplate() {
        super("deleteMBMessageTemplate");
      }

      public deleteMBMessageTemplate_args getEmptyArgsInstance() {
        return new deleteMBMessageTemplate_args();
      }

      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            deleteMBMessageTemplate_result result = new deleteMBMessageTemplate_result();
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            deleteMBMessageTemplate_result result = new deleteMBMessageTemplate_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, deleteMBMessageTemplate_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {
        iface.deleteMBMessageTemplate(args.platformArgs, args.templateId,resultHandler);
      }
    }

    public static class queryMBMessageTemplatePage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryMBMessageTemplatePage_args, xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage> {
      public queryMBMessageTemplatePage() {
        super("queryMBMessageTemplatePage");
      }

      public queryMBMessageTemplatePage_args getEmptyArgsInstance() {
        return new queryMBMessageTemplatePage_args();
      }

      public AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage>() { 
          public void onComplete(xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage o) {
            queryMBMessageTemplatePage_result result = new queryMBMessageTemplatePage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            queryMBMessageTemplatePage_result result = new queryMBMessageTemplatePage_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryMBMessageTemplatePage_args args, org.apache.thrift.async.AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage> resultHandler) throws TException {
        iface.queryMBMessageTemplatePage(args.platformArgs, args.queryOption, args.pageOption,resultHandler);
      }
    }

    public static class startSendMBMessage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, startSendMBMessage_args, Long> {
      public startSendMBMessage() {
        super("startSendMBMessage");
      }

      public startSendMBMessage_args getEmptyArgsInstance() {
        return new startSendMBMessage_args();
      }

      public AsyncMethodCallback<Long> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Long>() { 
          public void onComplete(Long o) {
            startSendMBMessage_result result = new startSendMBMessage_result();
            result.success = o;
            result.setSuccessIsSet(true);
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            startSendMBMessage_result result = new startSendMBMessage_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, startSendMBMessage_args args, org.apache.thrift.async.AsyncMethodCallback<Long> resultHandler) throws TException {
        iface.startSendMBMessage(args.platformArgs, args.mbmId, args.isMessageCompleted,resultHandler);
      }
    }

    public static class modifyMBMessageJobStatus<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, modifyMBMessageJobStatus_args, Void> {
      public modifyMBMessageJobStatus() {
        super("modifyMBMessageJobStatus");
      }

      public modifyMBMessageJobStatus_args getEmptyArgsInstance() {
        return new modifyMBMessageJobStatus_args();
      }

      public AsyncMethodCallback<Void> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<Void>() { 
          public void onComplete(Void o) {
            modifyMBMessageJobStatus_result result = new modifyMBMessageJobStatus_result();
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            modifyMBMessageJobStatus_result result = new modifyMBMessageJobStatus_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, modifyMBMessageJobStatus_args args, org.apache.thrift.async.AsyncMethodCallback<Void> resultHandler) throws TException {
        iface.modifyMBMessageJobStatus(args.platformArgs, args.jobId, args.status, args.errorDescription,resultHandler);
      }
    }

    public static class queryMBMessageJobPage<I extends AsyncIface> extends org.apache.thrift.AsyncProcessFunction<I, queryMBMessageJobPage_args, xueqiao.mailbox.thriftdata.req.MBMessageJobPage> {
      public queryMBMessageJobPage() {
        super("queryMBMessageJobPage");
      }

      public queryMBMessageJobPage_args getEmptyArgsInstance() {
        return new queryMBMessageJobPage_args();
      }

      public AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessageJobPage> getResultHandler(final AsyncFrameBuffer fb, final int seqid) {
        final org.apache.thrift.AsyncProcessFunction fcall = this;
        return new AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessageJobPage>() { 
          public void onComplete(xueqiao.mailbox.thriftdata.req.MBMessageJobPage o) {
            queryMBMessageJobPage_result result = new queryMBMessageJobPage_result();
            result.success = o;
            try {
              fcall.sendResponse(fb,result, org.apache.thrift.protocol.TMessageType.REPLY,seqid);
              return;
            } catch (Exception e) {
              LOGGER.error("Exception writing to internal frame buffer", e);
            }
            fb.close();
          }
          public void onError(Exception e) {
            byte msgType = org.apache.thrift.protocol.TMessageType.REPLY;
            org.apache.thrift.TBase msg;
            queryMBMessageJobPage_result result = new queryMBMessageJobPage_result();
            if (e instanceof org.soldier.platform.svr_platform.comm.ErrorInfo) {
                        result.err = (org.soldier.platform.svr_platform.comm.ErrorInfo) e;
                        result.setErrIsSet(true);
                        msg = result;
            }
             else 
            {
              msgType = org.apache.thrift.protocol.TMessageType.EXCEPTION;
              msg = (org.apache.thrift.TBase)new org.apache.thrift.TApplicationException(org.apache.thrift.TApplicationException.INTERNAL_ERROR, e.getMessage());
            }
            try {
              fcall.sendResponse(fb,msg,msgType,seqid);
              return;
            } catch (Exception ex) {
              LOGGER.error("Exception writing to internal frame buffer", ex);
            }
            fb.close();
          }
        };
      }

      protected boolean isOneway() {
        return false;
      }

      public void start(I iface, queryMBMessageJobPage_args args, org.apache.thrift.async.AsyncMethodCallback<xueqiao.mailbox.thriftdata.req.MBMessageJobPage> resultHandler) throws TException {
        iface.queryMBMessageJobPage(args.platformArgs, args.queryOption, args.pageOption,resultHandler);
      }
    }

  }

  public static class addMBMessage_args implements org.apache.thrift.TBase<addMBMessage_args, addMBMessage_args._Fields>, java.io.Serializable, Cloneable, Comparable<addMBMessage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addMBMessage_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("message", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addMBMessage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addMBMessage_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public xueqiao.mailbox.thriftdata.mb.MBMessage message; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      MESSAGE((short)2, "message");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // MESSAGE
            return MESSAGE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("message", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.mb.MBMessage.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addMBMessage_args.class, metaDataMap);
    }

    public addMBMessage_args() {
    }

    public addMBMessage_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      xueqiao.mailbox.thriftdata.mb.MBMessage message)
    {
      this();
      this.platformArgs = platformArgs;
      this.message = message;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addMBMessage_args(addMBMessage_args other) {
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      if (other.isSetMessage()) {
        this.message = new xueqiao.mailbox.thriftdata.mb.MBMessage(other.message);
      }
    }

    public addMBMessage_args deepCopy() {
      return new addMBMessage_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      this.message = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public addMBMessage_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public xueqiao.mailbox.thriftdata.mb.MBMessage getMessage() {
      return this.message;
    }

    public addMBMessage_args setMessage(xueqiao.mailbox.thriftdata.mb.MBMessage message) {
      this.message = message;
      return this;
    }

    public void unsetMessage() {
      this.message = null;
    }

    /** Returns true if field message is set (has been assigned a value) and false otherwise */
    public boolean isSetMessage() {
      return this.message != null;
    }

    public void setMessageIsSet(boolean value) {
      if (!value) {
        this.message = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case MESSAGE:
        if (value == null) {
          unsetMessage();
        } else {
          setMessage((xueqiao.mailbox.thriftdata.mb.MBMessage)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case MESSAGE:
        return getMessage();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case MESSAGE:
        return isSetMessage();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addMBMessage_args)
        return this.equals((addMBMessage_args)that);
      return false;
    }

    public boolean equals(addMBMessage_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_message = true && this.isSetMessage();
      boolean that_present_message = true && that.isSetMessage();
      if (this_present_message || that_present_message) {
        if (!(this_present_message && that_present_message))
          return false;
        if (!this.message.equals(that.message))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(addMBMessage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetMessage()).compareTo(other.isSetMessage());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetMessage()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.message, other.message);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addMBMessage_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("message:");
      if (this.message == null) {
        sb.append("null");
      } else {
        sb.append(this.message);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
      if (message != null) {
        message.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addMBMessage_argsStandardSchemeFactory implements SchemeFactory {
      public addMBMessage_argsStandardScheme getScheme() {
        return new addMBMessage_argsStandardScheme();
      }
    }

    private static class addMBMessage_argsStandardScheme extends StandardScheme<addMBMessage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addMBMessage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // MESSAGE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.message = new xueqiao.mailbox.thriftdata.mb.MBMessage();
                struct.message.read(iprot);
                struct.setMessageIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addMBMessage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.message != null) {
          oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
          struct.message.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addMBMessage_argsTupleSchemeFactory implements SchemeFactory {
      public addMBMessage_argsTupleScheme getScheme() {
        return new addMBMessage_argsTupleScheme();
      }
    }

    private static class addMBMessage_argsTupleScheme extends TupleScheme<addMBMessage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addMBMessage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetMessage()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetMessage()) {
          struct.message.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addMBMessage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.message = new xueqiao.mailbox.thriftdata.mb.MBMessage();
          struct.message.read(iprot);
          struct.setMessageIsSet(true);
        }
      }
    }

  }

  public static class addMBMessage_result implements org.apache.thrift.TBase<addMBMessage_result, addMBMessage_result._Fields>, java.io.Serializable, Cloneable, Comparable<addMBMessage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addMBMessage_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addMBMessage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addMBMessage_resultTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addMBMessage_result.class, metaDataMap);
    }

    public addMBMessage_result() {
    }

    public addMBMessage_result(
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addMBMessage_result(addMBMessage_result other) {
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public addMBMessage_result deepCopy() {
      return new addMBMessage_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public addMBMessage_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addMBMessage_result)
        return this.equals((addMBMessage_result)that);
      return false;
    }

    public boolean equals(addMBMessage_result that) {
      if (that == null)
        return false;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(addMBMessage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addMBMessage_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addMBMessage_resultStandardSchemeFactory implements SchemeFactory {
      public addMBMessage_resultStandardScheme getScheme() {
        return new addMBMessage_resultStandardScheme();
      }
    }

    private static class addMBMessage_resultStandardScheme extends StandardScheme<addMBMessage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addMBMessage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addMBMessage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addMBMessage_resultTupleSchemeFactory implements SchemeFactory {
      public addMBMessage_resultTupleScheme getScheme() {
        return new addMBMessage_resultTupleScheme();
      }
    }

    private static class addMBMessage_resultTupleScheme extends TupleScheme<addMBMessage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addMBMessage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addMBMessage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class modifyMBMessageStatus_args implements org.apache.thrift.TBase<modifyMBMessageStatus_args, modifyMBMessageStatus_args._Fields>, java.io.Serializable, Cloneable, Comparable<modifyMBMessageStatus_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modifyMBMessageStatus_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField MBM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("mbmId", org.apache.thrift.protocol.TType.I64, (short)2);
    private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new modifyMBMessageStatus_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new modifyMBMessageStatus_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public long mbmId; // required
    /**
     * 
     * @see xueqiao.mailbox.thriftdata.mb.MStatus
     */
    public xueqiao.mailbox.thriftdata.mb.MStatus status; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      MBM_ID((short)2, "mbmId"),
      /**
       * 
       * @see xueqiao.mailbox.thriftdata.mb.MStatus
       */
      STATUS((short)3, "status");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // MBM_ID
            return MBM_ID;
          case 3: // STATUS
            return STATUS;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __MBMID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.MBM_ID, new org.apache.thrift.meta_data.FieldMetaData("mbmId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.mailbox.thriftdata.mb.MStatus.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modifyMBMessageStatus_args.class, metaDataMap);
    }

    public modifyMBMessageStatus_args() {
    }

    public modifyMBMessageStatus_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      long mbmId,
      xueqiao.mailbox.thriftdata.mb.MStatus status)
    {
      this();
      this.platformArgs = platformArgs;
      this.mbmId = mbmId;
      setMbmIdIsSet(true);
      this.status = status;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modifyMBMessageStatus_args(modifyMBMessageStatus_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      this.mbmId = other.mbmId;
      if (other.isSetStatus()) {
        this.status = other.status;
      }
    }

    public modifyMBMessageStatus_args deepCopy() {
      return new modifyMBMessageStatus_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      setMbmIdIsSet(false);
      this.mbmId = 0;
      this.status = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public modifyMBMessageStatus_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public long getMbmId() {
      return this.mbmId;
    }

    public modifyMBMessageStatus_args setMbmId(long mbmId) {
      this.mbmId = mbmId;
      setMbmIdIsSet(true);
      return this;
    }

    public void unsetMbmId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MBMID_ISSET_ID);
    }

    /** Returns true if field mbmId is set (has been assigned a value) and false otherwise */
    public boolean isSetMbmId() {
      return EncodingUtils.testBit(__isset_bitfield, __MBMID_ISSET_ID);
    }

    public void setMbmIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MBMID_ISSET_ID, value);
    }

    /**
     * 
     * @see xueqiao.mailbox.thriftdata.mb.MStatus
     */
    public xueqiao.mailbox.thriftdata.mb.MStatus getStatus() {
      return this.status;
    }

    /**
     * 
     * @see xueqiao.mailbox.thriftdata.mb.MStatus
     */
    public modifyMBMessageStatus_args setStatus(xueqiao.mailbox.thriftdata.mb.MStatus status) {
      this.status = status;
      return this;
    }

    public void unsetStatus() {
      this.status = null;
    }

    /** Returns true if field status is set (has been assigned a value) and false otherwise */
    public boolean isSetStatus() {
      return this.status != null;
    }

    public void setStatusIsSet(boolean value) {
      if (!value) {
        this.status = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case MBM_ID:
        if (value == null) {
          unsetMbmId();
        } else {
          setMbmId((Long)value);
        }
        break;

      case STATUS:
        if (value == null) {
          unsetStatus();
        } else {
          setStatus((xueqiao.mailbox.thriftdata.mb.MStatus)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case MBM_ID:
        return Long.valueOf(getMbmId());

      case STATUS:
        return getStatus();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case MBM_ID:
        return isSetMbmId();
      case STATUS:
        return isSetStatus();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof modifyMBMessageStatus_args)
        return this.equals((modifyMBMessageStatus_args)that);
      return false;
    }

    public boolean equals(modifyMBMessageStatus_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_mbmId = true;
      boolean that_present_mbmId = true;
      if (this_present_mbmId || that_present_mbmId) {
        if (!(this_present_mbmId && that_present_mbmId))
          return false;
        if (this.mbmId != that.mbmId)
          return false;
      }

      boolean this_present_status = true && this.isSetStatus();
      boolean that_present_status = true && that.isSetStatus();
      if (this_present_status || that_present_status) {
        if (!(this_present_status && that_present_status))
          return false;
        if (!this.status.equals(that.status))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(modifyMBMessageStatus_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetMbmId()).compareTo(other.isSetMbmId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetMbmId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mbmId, other.mbmId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetStatus()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("modifyMBMessageStatus_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("mbmId:");
      sb.append(this.mbmId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("status:");
      if (this.status == null) {
        sb.append("null");
      } else {
        sb.append(this.status);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modifyMBMessageStatus_argsStandardSchemeFactory implements SchemeFactory {
      public modifyMBMessageStatus_argsStandardScheme getScheme() {
        return new modifyMBMessageStatus_argsStandardScheme();
      }
    }

    private static class modifyMBMessageStatus_argsStandardScheme extends StandardScheme<modifyMBMessageStatus_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modifyMBMessageStatus_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // MBM_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.mbmId = iprot.readI64();
                struct.setMbmIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // STATUS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.status = xueqiao.mailbox.thriftdata.mb.MStatus.findByValue(iprot.readI32());
                struct.setStatusIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modifyMBMessageStatus_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(MBM_ID_FIELD_DESC);
        oprot.writeI64(struct.mbmId);
        oprot.writeFieldEnd();
        if (struct.status != null) {
          oprot.writeFieldBegin(STATUS_FIELD_DESC);
          oprot.writeI32(struct.status.getValue());
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modifyMBMessageStatus_argsTupleSchemeFactory implements SchemeFactory {
      public modifyMBMessageStatus_argsTupleScheme getScheme() {
        return new modifyMBMessageStatus_argsTupleScheme();
      }
    }

    private static class modifyMBMessageStatus_argsTupleScheme extends TupleScheme<modifyMBMessageStatus_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageStatus_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetMbmId()) {
          optionals.set(1);
        }
        if (struct.isSetStatus()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetMbmId()) {
          oprot.writeI64(struct.mbmId);
        }
        if (struct.isSetStatus()) {
          oprot.writeI32(struct.status.getValue());
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageStatus_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.mbmId = iprot.readI64();
          struct.setMbmIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.status = xueqiao.mailbox.thriftdata.mb.MStatus.findByValue(iprot.readI32());
          struct.setStatusIsSet(true);
        }
      }
    }

  }

  public static class modifyMBMessageStatus_result implements org.apache.thrift.TBase<modifyMBMessageStatus_result, modifyMBMessageStatus_result._Fields>, java.io.Serializable, Cloneable, Comparable<modifyMBMessageStatus_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modifyMBMessageStatus_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new modifyMBMessageStatus_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new modifyMBMessageStatus_resultTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modifyMBMessageStatus_result.class, metaDataMap);
    }

    public modifyMBMessageStatus_result() {
    }

    public modifyMBMessageStatus_result(
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modifyMBMessageStatus_result(modifyMBMessageStatus_result other) {
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public modifyMBMessageStatus_result deepCopy() {
      return new modifyMBMessageStatus_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public modifyMBMessageStatus_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof modifyMBMessageStatus_result)
        return this.equals((modifyMBMessageStatus_result)that);
      return false;
    }

    public boolean equals(modifyMBMessageStatus_result that) {
      if (that == null)
        return false;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(modifyMBMessageStatus_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("modifyMBMessageStatus_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modifyMBMessageStatus_resultStandardSchemeFactory implements SchemeFactory {
      public modifyMBMessageStatus_resultStandardScheme getScheme() {
        return new modifyMBMessageStatus_resultStandardScheme();
      }
    }

    private static class modifyMBMessageStatus_resultStandardScheme extends StandardScheme<modifyMBMessageStatus_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modifyMBMessageStatus_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modifyMBMessageStatus_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modifyMBMessageStatus_resultTupleSchemeFactory implements SchemeFactory {
      public modifyMBMessageStatus_resultTupleScheme getScheme() {
        return new modifyMBMessageStatus_resultTupleScheme();
      }
    }

    private static class modifyMBMessageStatus_resultTupleScheme extends TupleScheme<modifyMBMessageStatus_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageStatus_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageStatus_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class queryMBMessagePage_args implements org.apache.thrift.TBase<queryMBMessagePage_args, queryMBMessagePage_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryMBMessagePage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryMBMessagePage_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField QUERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("queryOption", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField PAGE_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("pageOption", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryMBMessagePage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryMBMessagePage_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption; // required
    public org.soldier.platform.page.IndexedPageOption pageOption; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      QUERY_OPTION((short)2, "queryOption"),
      PAGE_OPTION((short)3, "pageOption");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // QUERY_OPTION
            return QUERY_OPTION;
          case 3: // PAGE_OPTION
            return PAGE_OPTION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.QUERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("queryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.req.QueryMBMessageOption.class)));
      tmpMap.put(_Fields.PAGE_OPTION, new org.apache.thrift.meta_data.FieldMetaData("pageOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.page.IndexedPageOption.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryMBMessagePage_args.class, metaDataMap);
    }

    public queryMBMessagePage_args() {
    }

    public queryMBMessagePage_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption,
      org.soldier.platform.page.IndexedPageOption pageOption)
    {
      this();
      this.platformArgs = platformArgs;
      this.queryOption = queryOption;
      this.pageOption = pageOption;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryMBMessagePage_args(queryMBMessagePage_args other) {
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      if (other.isSetQueryOption()) {
        this.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageOption(other.queryOption);
      }
      if (other.isSetPageOption()) {
        this.pageOption = new org.soldier.platform.page.IndexedPageOption(other.pageOption);
      }
    }

    public queryMBMessagePage_args deepCopy() {
      return new queryMBMessagePage_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      this.queryOption = null;
      this.pageOption = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public queryMBMessagePage_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public xueqiao.mailbox.thriftdata.req.QueryMBMessageOption getQueryOption() {
      return this.queryOption;
    }

    public queryMBMessagePage_args setQueryOption(xueqiao.mailbox.thriftdata.req.QueryMBMessageOption queryOption) {
      this.queryOption = queryOption;
      return this;
    }

    public void unsetQueryOption() {
      this.queryOption = null;
    }

    /** Returns true if field queryOption is set (has been assigned a value) and false otherwise */
    public boolean isSetQueryOption() {
      return this.queryOption != null;
    }

    public void setQueryOptionIsSet(boolean value) {
      if (!value) {
        this.queryOption = null;
      }
    }

    public org.soldier.platform.page.IndexedPageOption getPageOption() {
      return this.pageOption;
    }

    public queryMBMessagePage_args setPageOption(org.soldier.platform.page.IndexedPageOption pageOption) {
      this.pageOption = pageOption;
      return this;
    }

    public void unsetPageOption() {
      this.pageOption = null;
    }

    /** Returns true if field pageOption is set (has been assigned a value) and false otherwise */
    public boolean isSetPageOption() {
      return this.pageOption != null;
    }

    public void setPageOptionIsSet(boolean value) {
      if (!value) {
        this.pageOption = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case QUERY_OPTION:
        if (value == null) {
          unsetQueryOption();
        } else {
          setQueryOption((xueqiao.mailbox.thriftdata.req.QueryMBMessageOption)value);
        }
        break;

      case PAGE_OPTION:
        if (value == null) {
          unsetPageOption();
        } else {
          setPageOption((org.soldier.platform.page.IndexedPageOption)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case QUERY_OPTION:
        return getQueryOption();

      case PAGE_OPTION:
        return getPageOption();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case QUERY_OPTION:
        return isSetQueryOption();
      case PAGE_OPTION:
        return isSetPageOption();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryMBMessagePage_args)
        return this.equals((queryMBMessagePage_args)that);
      return false;
    }

    public boolean equals(queryMBMessagePage_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_queryOption = true && this.isSetQueryOption();
      boolean that_present_queryOption = true && that.isSetQueryOption();
      if (this_present_queryOption || that_present_queryOption) {
        if (!(this_present_queryOption && that_present_queryOption))
          return false;
        if (!this.queryOption.equals(that.queryOption))
          return false;
      }

      boolean this_present_pageOption = true && this.isSetPageOption();
      boolean that_present_pageOption = true && that.isSetPageOption();
      if (this_present_pageOption || that_present_pageOption) {
        if (!(this_present_pageOption && that_present_pageOption))
          return false;
        if (!this.pageOption.equals(that.pageOption))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(queryMBMessagePage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetQueryOption()).compareTo(other.isSetQueryOption());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQueryOption()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOption, other.queryOption);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPageOption()).compareTo(other.isSetPageOption());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageOption()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageOption, other.pageOption);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryMBMessagePage_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("queryOption:");
      if (this.queryOption == null) {
        sb.append("null");
      } else {
        sb.append(this.queryOption);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageOption:");
      if (this.pageOption == null) {
        sb.append("null");
      } else {
        sb.append(this.pageOption);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
      if (queryOption != null) {
        queryOption.validate();
      }
      if (pageOption != null) {
        pageOption.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryMBMessagePage_argsStandardSchemeFactory implements SchemeFactory {
      public queryMBMessagePage_argsStandardScheme getScheme() {
        return new queryMBMessagePage_argsStandardScheme();
      }
    }

    private static class queryMBMessagePage_argsStandardScheme extends StandardScheme<queryMBMessagePage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryMBMessagePage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // QUERY_OPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageOption();
                struct.queryOption.read(iprot);
                struct.setQueryOptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PAGE_OPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
                struct.pageOption.read(iprot);
                struct.setPageOptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryMBMessagePage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.queryOption != null) {
          oprot.writeFieldBegin(QUERY_OPTION_FIELD_DESC);
          struct.queryOption.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.pageOption != null) {
          oprot.writeFieldBegin(PAGE_OPTION_FIELD_DESC);
          struct.pageOption.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryMBMessagePage_argsTupleSchemeFactory implements SchemeFactory {
      public queryMBMessagePage_argsTupleScheme getScheme() {
        return new queryMBMessagePage_argsTupleScheme();
      }
    }

    private static class queryMBMessagePage_argsTupleScheme extends TupleScheme<queryMBMessagePage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryMBMessagePage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetQueryOption()) {
          optionals.set(1);
        }
        if (struct.isSetPageOption()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetQueryOption()) {
          struct.queryOption.write(oprot);
        }
        if (struct.isSetPageOption()) {
          struct.pageOption.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryMBMessagePage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageOption();
          struct.queryOption.read(iprot);
          struct.setQueryOptionIsSet(true);
        }
        if (incoming.get(2)) {
          struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
          struct.pageOption.read(iprot);
          struct.setPageOptionIsSet(true);
        }
      }
    }

  }

  public static class queryMBMessagePage_result implements org.apache.thrift.TBase<queryMBMessagePage_result, queryMBMessagePage_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryMBMessagePage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryMBMessagePage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryMBMessagePage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryMBMessagePage_resultTupleSchemeFactory());
    }

    public xueqiao.mailbox.thriftdata.req.MBMessagePage success; // required
    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.req.MBMessagePage.class)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryMBMessagePage_result.class, metaDataMap);
    }

    public queryMBMessagePage_result() {
    }

    public queryMBMessagePage_result(
      xueqiao.mailbox.thriftdata.req.MBMessagePage success,
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryMBMessagePage_result(queryMBMessagePage_result other) {
      if (other.isSetSuccess()) {
        this.success = new xueqiao.mailbox.thriftdata.req.MBMessagePage(other.success);
      }
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public queryMBMessagePage_result deepCopy() {
      return new queryMBMessagePage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public xueqiao.mailbox.thriftdata.req.MBMessagePage getSuccess() {
      return this.success;
    }

    public queryMBMessagePage_result setSuccess(xueqiao.mailbox.thriftdata.req.MBMessagePage success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public queryMBMessagePage_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((xueqiao.mailbox.thriftdata.req.MBMessagePage)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryMBMessagePage_result)
        return this.equals((queryMBMessagePage_result)that);
      return false;
    }

    public boolean equals(queryMBMessagePage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(queryMBMessagePage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryMBMessagePage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryMBMessagePage_resultStandardSchemeFactory implements SchemeFactory {
      public queryMBMessagePage_resultStandardScheme getScheme() {
        return new queryMBMessagePage_resultStandardScheme();
      }
    }

    private static class queryMBMessagePage_resultStandardScheme extends StandardScheme<queryMBMessagePage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryMBMessagePage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new xueqiao.mailbox.thriftdata.req.MBMessagePage();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryMBMessagePage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryMBMessagePage_resultTupleSchemeFactory implements SchemeFactory {
      public queryMBMessagePage_resultTupleScheme getScheme() {
        return new queryMBMessagePage_resultTupleScheme();
      }
    }

    private static class queryMBMessagePage_resultTupleScheme extends TupleScheme<queryMBMessagePage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryMBMessagePage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryMBMessagePage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new xueqiao.mailbox.thriftdata.req.MBMessagePage();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class addMBMessageTemplate_args implements org.apache.thrift.TBase<addMBMessageTemplate_args, addMBMessageTemplate_args._Fields>, java.io.Serializable, Cloneable, Comparable<addMBMessageTemplate_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addMBMessageTemplate_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField TEMPLATE_FIELD_DESC = new org.apache.thrift.protocol.TField("template", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addMBMessageTemplate_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addMBMessageTemplate_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      TEMPLATE((short)2, "template");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // TEMPLATE
            return TEMPLATE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.TEMPLATE, new org.apache.thrift.meta_data.FieldMetaData("template", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addMBMessageTemplate_args.class, metaDataMap);
    }

    public addMBMessageTemplate_args() {
    }

    public addMBMessageTemplate_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template)
    {
      this();
      this.platformArgs = platformArgs;
      this.template = template;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addMBMessageTemplate_args(addMBMessageTemplate_args other) {
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      if (other.isSetTemplate()) {
        this.template = new xueqiao.mailbox.thriftdata.mb.MBMessageTemplate(other.template);
      }
    }

    public addMBMessageTemplate_args deepCopy() {
      return new addMBMessageTemplate_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      this.template = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public addMBMessageTemplate_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public xueqiao.mailbox.thriftdata.mb.MBMessageTemplate getTemplate() {
      return this.template;
    }

    public addMBMessageTemplate_args setTemplate(xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) {
      this.template = template;
      return this;
    }

    public void unsetTemplate() {
      this.template = null;
    }

    /** Returns true if field template is set (has been assigned a value) and false otherwise */
    public boolean isSetTemplate() {
      return this.template != null;
    }

    public void setTemplateIsSet(boolean value) {
      if (!value) {
        this.template = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case TEMPLATE:
        if (value == null) {
          unsetTemplate();
        } else {
          setTemplate((xueqiao.mailbox.thriftdata.mb.MBMessageTemplate)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case TEMPLATE:
        return getTemplate();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case TEMPLATE:
        return isSetTemplate();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addMBMessageTemplate_args)
        return this.equals((addMBMessageTemplate_args)that);
      return false;
    }

    public boolean equals(addMBMessageTemplate_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_template = true && this.isSetTemplate();
      boolean that_present_template = true && that.isSetTemplate();
      if (this_present_template || that_present_template) {
        if (!(this_present_template && that_present_template))
          return false;
        if (!this.template.equals(that.template))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(addMBMessageTemplate_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetTemplate()).compareTo(other.isSetTemplate());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTemplate()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.template, other.template);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addMBMessageTemplate_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("template:");
      if (this.template == null) {
        sb.append("null");
      } else {
        sb.append(this.template);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
      if (template != null) {
        template.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addMBMessageTemplate_argsStandardSchemeFactory implements SchemeFactory {
      public addMBMessageTemplate_argsStandardScheme getScheme() {
        return new addMBMessageTemplate_argsStandardScheme();
      }
    }

    private static class addMBMessageTemplate_argsStandardScheme extends StandardScheme<addMBMessageTemplate_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TEMPLATE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.template = new xueqiao.mailbox.thriftdata.mb.MBMessageTemplate();
                struct.template.read(iprot);
                struct.setTemplateIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.template != null) {
          oprot.writeFieldBegin(TEMPLATE_FIELD_DESC);
          struct.template.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addMBMessageTemplate_argsTupleSchemeFactory implements SchemeFactory {
      public addMBMessageTemplate_argsTupleScheme getScheme() {
        return new addMBMessageTemplate_argsTupleScheme();
      }
    }

    private static class addMBMessageTemplate_argsTupleScheme extends TupleScheme<addMBMessageTemplate_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetTemplate()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetTemplate()) {
          struct.template.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.template = new xueqiao.mailbox.thriftdata.mb.MBMessageTemplate();
          struct.template.read(iprot);
          struct.setTemplateIsSet(true);
        }
      }
    }

  }

  public static class addMBMessageTemplate_result implements org.apache.thrift.TBase<addMBMessageTemplate_result, addMBMessageTemplate_result._Fields>, java.io.Serializable, Cloneable, Comparable<addMBMessageTemplate_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("addMBMessageTemplate_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new addMBMessageTemplate_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new addMBMessageTemplate_resultTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(addMBMessageTemplate_result.class, metaDataMap);
    }

    public addMBMessageTemplate_result() {
    }

    public addMBMessageTemplate_result(
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public addMBMessageTemplate_result(addMBMessageTemplate_result other) {
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public addMBMessageTemplate_result deepCopy() {
      return new addMBMessageTemplate_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public addMBMessageTemplate_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof addMBMessageTemplate_result)
        return this.equals((addMBMessageTemplate_result)that);
      return false;
    }

    public boolean equals(addMBMessageTemplate_result that) {
      if (that == null)
        return false;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(addMBMessageTemplate_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("addMBMessageTemplate_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class addMBMessageTemplate_resultStandardSchemeFactory implements SchemeFactory {
      public addMBMessageTemplate_resultStandardScheme getScheme() {
        return new addMBMessageTemplate_resultStandardScheme();
      }
    }

    private static class addMBMessageTemplate_resultStandardScheme extends StandardScheme<addMBMessageTemplate_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, addMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, addMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class addMBMessageTemplate_resultTupleSchemeFactory implements SchemeFactory {
      public addMBMessageTemplate_resultTupleScheme getScheme() {
        return new addMBMessageTemplate_resultTupleScheme();
      }
    }

    private static class addMBMessageTemplate_resultTupleScheme extends TupleScheme<addMBMessageTemplate_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, addMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, addMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class modifyMBMessageTemplate_args implements org.apache.thrift.TBase<modifyMBMessageTemplate_args, modifyMBMessageTemplate_args._Fields>, java.io.Serializable, Cloneable, Comparable<modifyMBMessageTemplate_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modifyMBMessageTemplate_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField TEMPLATE_FIELD_DESC = new org.apache.thrift.protocol.TField("template", org.apache.thrift.protocol.TType.STRUCT, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new modifyMBMessageTemplate_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new modifyMBMessageTemplate_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      TEMPLATE((short)2, "template");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // TEMPLATE
            return TEMPLATE;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.TEMPLATE, new org.apache.thrift.meta_data.FieldMetaData("template", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.mb.MBMessageTemplate.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modifyMBMessageTemplate_args.class, metaDataMap);
    }

    public modifyMBMessageTemplate_args() {
    }

    public modifyMBMessageTemplate_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template)
    {
      this();
      this.platformArgs = platformArgs;
      this.template = template;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modifyMBMessageTemplate_args(modifyMBMessageTemplate_args other) {
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      if (other.isSetTemplate()) {
        this.template = new xueqiao.mailbox.thriftdata.mb.MBMessageTemplate(other.template);
      }
    }

    public modifyMBMessageTemplate_args deepCopy() {
      return new modifyMBMessageTemplate_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      this.template = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public modifyMBMessageTemplate_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public xueqiao.mailbox.thriftdata.mb.MBMessageTemplate getTemplate() {
      return this.template;
    }

    public modifyMBMessageTemplate_args setTemplate(xueqiao.mailbox.thriftdata.mb.MBMessageTemplate template) {
      this.template = template;
      return this;
    }

    public void unsetTemplate() {
      this.template = null;
    }

    /** Returns true if field template is set (has been assigned a value) and false otherwise */
    public boolean isSetTemplate() {
      return this.template != null;
    }

    public void setTemplateIsSet(boolean value) {
      if (!value) {
        this.template = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case TEMPLATE:
        if (value == null) {
          unsetTemplate();
        } else {
          setTemplate((xueqiao.mailbox.thriftdata.mb.MBMessageTemplate)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case TEMPLATE:
        return getTemplate();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case TEMPLATE:
        return isSetTemplate();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof modifyMBMessageTemplate_args)
        return this.equals((modifyMBMessageTemplate_args)that);
      return false;
    }

    public boolean equals(modifyMBMessageTemplate_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_template = true && this.isSetTemplate();
      boolean that_present_template = true && that.isSetTemplate();
      if (this_present_template || that_present_template) {
        if (!(this_present_template && that_present_template))
          return false;
        if (!this.template.equals(that.template))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(modifyMBMessageTemplate_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetTemplate()).compareTo(other.isSetTemplate());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTemplate()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.template, other.template);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("modifyMBMessageTemplate_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("template:");
      if (this.template == null) {
        sb.append("null");
      } else {
        sb.append(this.template);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
      if (template != null) {
        template.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modifyMBMessageTemplate_argsStandardSchemeFactory implements SchemeFactory {
      public modifyMBMessageTemplate_argsStandardScheme getScheme() {
        return new modifyMBMessageTemplate_argsStandardScheme();
      }
    }

    private static class modifyMBMessageTemplate_argsStandardScheme extends StandardScheme<modifyMBMessageTemplate_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modifyMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TEMPLATE
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.template = new xueqiao.mailbox.thriftdata.mb.MBMessageTemplate();
                struct.template.read(iprot);
                struct.setTemplateIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modifyMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.template != null) {
          oprot.writeFieldBegin(TEMPLATE_FIELD_DESC);
          struct.template.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modifyMBMessageTemplate_argsTupleSchemeFactory implements SchemeFactory {
      public modifyMBMessageTemplate_argsTupleScheme getScheme() {
        return new modifyMBMessageTemplate_argsTupleScheme();
      }
    }

    private static class modifyMBMessageTemplate_argsTupleScheme extends TupleScheme<modifyMBMessageTemplate_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetTemplate()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetTemplate()) {
          struct.template.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.template = new xueqiao.mailbox.thriftdata.mb.MBMessageTemplate();
          struct.template.read(iprot);
          struct.setTemplateIsSet(true);
        }
      }
    }

  }

  public static class modifyMBMessageTemplate_result implements org.apache.thrift.TBase<modifyMBMessageTemplate_result, modifyMBMessageTemplate_result._Fields>, java.io.Serializable, Cloneable, Comparable<modifyMBMessageTemplate_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modifyMBMessageTemplate_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new modifyMBMessageTemplate_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new modifyMBMessageTemplate_resultTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modifyMBMessageTemplate_result.class, metaDataMap);
    }

    public modifyMBMessageTemplate_result() {
    }

    public modifyMBMessageTemplate_result(
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modifyMBMessageTemplate_result(modifyMBMessageTemplate_result other) {
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public modifyMBMessageTemplate_result deepCopy() {
      return new modifyMBMessageTemplate_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public modifyMBMessageTemplate_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof modifyMBMessageTemplate_result)
        return this.equals((modifyMBMessageTemplate_result)that);
      return false;
    }

    public boolean equals(modifyMBMessageTemplate_result that) {
      if (that == null)
        return false;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(modifyMBMessageTemplate_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("modifyMBMessageTemplate_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modifyMBMessageTemplate_resultStandardSchemeFactory implements SchemeFactory {
      public modifyMBMessageTemplate_resultStandardScheme getScheme() {
        return new modifyMBMessageTemplate_resultStandardScheme();
      }
    }

    private static class modifyMBMessageTemplate_resultStandardScheme extends StandardScheme<modifyMBMessageTemplate_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modifyMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modifyMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modifyMBMessageTemplate_resultTupleSchemeFactory implements SchemeFactory {
      public modifyMBMessageTemplate_resultTupleScheme getScheme() {
        return new modifyMBMessageTemplate_resultTupleScheme();
      }
    }

    private static class modifyMBMessageTemplate_resultTupleScheme extends TupleScheme<modifyMBMessageTemplate_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class deleteMBMessageTemplate_args implements org.apache.thrift.TBase<deleteMBMessageTemplate_args, deleteMBMessageTemplate_args._Fields>, java.io.Serializable, Cloneable, Comparable<deleteMBMessageTemplate_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteMBMessageTemplate_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField TEMPLATE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("templateId", org.apache.thrift.protocol.TType.I64, (short)2);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteMBMessageTemplate_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteMBMessageTemplate_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public long templateId; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      TEMPLATE_ID((short)2, "templateId");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // TEMPLATE_ID
            return TEMPLATE_ID;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __TEMPLATEID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.TEMPLATE_ID, new org.apache.thrift.meta_data.FieldMetaData("templateId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteMBMessageTemplate_args.class, metaDataMap);
    }

    public deleteMBMessageTemplate_args() {
    }

    public deleteMBMessageTemplate_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      long templateId)
    {
      this();
      this.platformArgs = platformArgs;
      this.templateId = templateId;
      setTemplateIdIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteMBMessageTemplate_args(deleteMBMessageTemplate_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      this.templateId = other.templateId;
    }

    public deleteMBMessageTemplate_args deepCopy() {
      return new deleteMBMessageTemplate_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      setTemplateIdIsSet(false);
      this.templateId = 0;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public deleteMBMessageTemplate_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public long getTemplateId() {
      return this.templateId;
    }

    public deleteMBMessageTemplate_args setTemplateId(long templateId) {
      this.templateId = templateId;
      setTemplateIdIsSet(true);
      return this;
    }

    public void unsetTemplateId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TEMPLATEID_ISSET_ID);
    }

    /** Returns true if field templateId is set (has been assigned a value) and false otherwise */
    public boolean isSetTemplateId() {
      return EncodingUtils.testBit(__isset_bitfield, __TEMPLATEID_ISSET_ID);
    }

    public void setTemplateIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TEMPLATEID_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case TEMPLATE_ID:
        if (value == null) {
          unsetTemplateId();
        } else {
          setTemplateId((Long)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case TEMPLATE_ID:
        return Long.valueOf(getTemplateId());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case TEMPLATE_ID:
        return isSetTemplateId();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteMBMessageTemplate_args)
        return this.equals((deleteMBMessageTemplate_args)that);
      return false;
    }

    public boolean equals(deleteMBMessageTemplate_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_templateId = true;
      boolean that_present_templateId = true;
      if (this_present_templateId || that_present_templateId) {
        if (!(this_present_templateId && that_present_templateId))
          return false;
        if (this.templateId != that.templateId)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(deleteMBMessageTemplate_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetTemplateId()).compareTo(other.isSetTemplateId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetTemplateId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.templateId, other.templateId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteMBMessageTemplate_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("templateId:");
      sb.append(this.templateId);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteMBMessageTemplate_argsStandardSchemeFactory implements SchemeFactory {
      public deleteMBMessageTemplate_argsStandardScheme getScheme() {
        return new deleteMBMessageTemplate_argsStandardScheme();
      }
    }

    private static class deleteMBMessageTemplate_argsStandardScheme extends StandardScheme<deleteMBMessageTemplate_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // TEMPLATE_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.templateId = iprot.readI64();
                struct.setTemplateIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(TEMPLATE_ID_FIELD_DESC);
        oprot.writeI64(struct.templateId);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteMBMessageTemplate_argsTupleSchemeFactory implements SchemeFactory {
      public deleteMBMessageTemplate_argsTupleScheme getScheme() {
        return new deleteMBMessageTemplate_argsTupleScheme();
      }
    }

    private static class deleteMBMessageTemplate_argsTupleScheme extends TupleScheme<deleteMBMessageTemplate_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetTemplateId()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetTemplateId()) {
          oprot.writeI64(struct.templateId);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteMBMessageTemplate_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.templateId = iprot.readI64();
          struct.setTemplateIdIsSet(true);
        }
      }
    }

  }

  public static class deleteMBMessageTemplate_result implements org.apache.thrift.TBase<deleteMBMessageTemplate_result, deleteMBMessageTemplate_result._Fields>, java.io.Serializable, Cloneable, Comparable<deleteMBMessageTemplate_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("deleteMBMessageTemplate_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new deleteMBMessageTemplate_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new deleteMBMessageTemplate_resultTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(deleteMBMessageTemplate_result.class, metaDataMap);
    }

    public deleteMBMessageTemplate_result() {
    }

    public deleteMBMessageTemplate_result(
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public deleteMBMessageTemplate_result(deleteMBMessageTemplate_result other) {
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public deleteMBMessageTemplate_result deepCopy() {
      return new deleteMBMessageTemplate_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public deleteMBMessageTemplate_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteMBMessageTemplate_result)
        return this.equals((deleteMBMessageTemplate_result)that);
      return false;
    }

    public boolean equals(deleteMBMessageTemplate_result that) {
      if (that == null)
        return false;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(deleteMBMessageTemplate_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("deleteMBMessageTemplate_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class deleteMBMessageTemplate_resultStandardSchemeFactory implements SchemeFactory {
      public deleteMBMessageTemplate_resultStandardScheme getScheme() {
        return new deleteMBMessageTemplate_resultStandardScheme();
      }
    }

    private static class deleteMBMessageTemplate_resultStandardScheme extends StandardScheme<deleteMBMessageTemplate_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, deleteMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, deleteMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class deleteMBMessageTemplate_resultTupleSchemeFactory implements SchemeFactory {
      public deleteMBMessageTemplate_resultTupleScheme getScheme() {
        return new deleteMBMessageTemplate_resultTupleScheme();
      }
    }

    private static class deleteMBMessageTemplate_resultTupleScheme extends TupleScheme<deleteMBMessageTemplate_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, deleteMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, deleteMBMessageTemplate_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class queryMBMessageTemplatePage_args implements org.apache.thrift.TBase<queryMBMessageTemplatePage_args, queryMBMessageTemplatePage_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryMBMessageTemplatePage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryMBMessageTemplatePage_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField QUERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("queryOption", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField PAGE_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("pageOption", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryMBMessageTemplatePage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryMBMessageTemplatePage_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption; // required
    public org.soldier.platform.page.IndexedPageOption pageOption; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      QUERY_OPTION((short)2, "queryOption"),
      PAGE_OPTION((short)3, "pageOption");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // QUERY_OPTION
            return QUERY_OPTION;
          case 3: // PAGE_OPTION
            return PAGE_OPTION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.QUERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("queryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption.class)));
      tmpMap.put(_Fields.PAGE_OPTION, new org.apache.thrift.meta_data.FieldMetaData("pageOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.page.IndexedPageOption.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryMBMessageTemplatePage_args.class, metaDataMap);
    }

    public queryMBMessageTemplatePage_args() {
    }

    public queryMBMessageTemplatePage_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption,
      org.soldier.platform.page.IndexedPageOption pageOption)
    {
      this();
      this.platformArgs = platformArgs;
      this.queryOption = queryOption;
      this.pageOption = pageOption;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryMBMessageTemplatePage_args(queryMBMessageTemplatePage_args other) {
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      if (other.isSetQueryOption()) {
        this.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption(other.queryOption);
      }
      if (other.isSetPageOption()) {
        this.pageOption = new org.soldier.platform.page.IndexedPageOption(other.pageOption);
      }
    }

    public queryMBMessageTemplatePage_args deepCopy() {
      return new queryMBMessageTemplatePage_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      this.queryOption = null;
      this.pageOption = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public queryMBMessageTemplatePage_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption getQueryOption() {
      return this.queryOption;
    }

    public queryMBMessageTemplatePage_args setQueryOption(xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption queryOption) {
      this.queryOption = queryOption;
      return this;
    }

    public void unsetQueryOption() {
      this.queryOption = null;
    }

    /** Returns true if field queryOption is set (has been assigned a value) and false otherwise */
    public boolean isSetQueryOption() {
      return this.queryOption != null;
    }

    public void setQueryOptionIsSet(boolean value) {
      if (!value) {
        this.queryOption = null;
      }
    }

    public org.soldier.platform.page.IndexedPageOption getPageOption() {
      return this.pageOption;
    }

    public queryMBMessageTemplatePage_args setPageOption(org.soldier.platform.page.IndexedPageOption pageOption) {
      this.pageOption = pageOption;
      return this;
    }

    public void unsetPageOption() {
      this.pageOption = null;
    }

    /** Returns true if field pageOption is set (has been assigned a value) and false otherwise */
    public boolean isSetPageOption() {
      return this.pageOption != null;
    }

    public void setPageOptionIsSet(boolean value) {
      if (!value) {
        this.pageOption = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case QUERY_OPTION:
        if (value == null) {
          unsetQueryOption();
        } else {
          setQueryOption((xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption)value);
        }
        break;

      case PAGE_OPTION:
        if (value == null) {
          unsetPageOption();
        } else {
          setPageOption((org.soldier.platform.page.IndexedPageOption)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case QUERY_OPTION:
        return getQueryOption();

      case PAGE_OPTION:
        return getPageOption();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case QUERY_OPTION:
        return isSetQueryOption();
      case PAGE_OPTION:
        return isSetPageOption();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryMBMessageTemplatePage_args)
        return this.equals((queryMBMessageTemplatePage_args)that);
      return false;
    }

    public boolean equals(queryMBMessageTemplatePage_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_queryOption = true && this.isSetQueryOption();
      boolean that_present_queryOption = true && that.isSetQueryOption();
      if (this_present_queryOption || that_present_queryOption) {
        if (!(this_present_queryOption && that_present_queryOption))
          return false;
        if (!this.queryOption.equals(that.queryOption))
          return false;
      }

      boolean this_present_pageOption = true && this.isSetPageOption();
      boolean that_present_pageOption = true && that.isSetPageOption();
      if (this_present_pageOption || that_present_pageOption) {
        if (!(this_present_pageOption && that_present_pageOption))
          return false;
        if (!this.pageOption.equals(that.pageOption))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(queryMBMessageTemplatePage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetQueryOption()).compareTo(other.isSetQueryOption());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQueryOption()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOption, other.queryOption);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPageOption()).compareTo(other.isSetPageOption());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageOption()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageOption, other.pageOption);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryMBMessageTemplatePage_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("queryOption:");
      if (this.queryOption == null) {
        sb.append("null");
      } else {
        sb.append(this.queryOption);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageOption:");
      if (this.pageOption == null) {
        sb.append("null");
      } else {
        sb.append(this.pageOption);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
      if (queryOption != null) {
        queryOption.validate();
      }
      if (pageOption != null) {
        pageOption.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryMBMessageTemplatePage_argsStandardSchemeFactory implements SchemeFactory {
      public queryMBMessageTemplatePage_argsStandardScheme getScheme() {
        return new queryMBMessageTemplatePage_argsStandardScheme();
      }
    }

    private static class queryMBMessageTemplatePage_argsStandardScheme extends StandardScheme<queryMBMessageTemplatePage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryMBMessageTemplatePage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // QUERY_OPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption();
                struct.queryOption.read(iprot);
                struct.setQueryOptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PAGE_OPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
                struct.pageOption.read(iprot);
                struct.setPageOptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryMBMessageTemplatePage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.queryOption != null) {
          oprot.writeFieldBegin(QUERY_OPTION_FIELD_DESC);
          struct.queryOption.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.pageOption != null) {
          oprot.writeFieldBegin(PAGE_OPTION_FIELD_DESC);
          struct.pageOption.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryMBMessageTemplatePage_argsTupleSchemeFactory implements SchemeFactory {
      public queryMBMessageTemplatePage_argsTupleScheme getScheme() {
        return new queryMBMessageTemplatePage_argsTupleScheme();
      }
    }

    private static class queryMBMessageTemplatePage_argsTupleScheme extends TupleScheme<queryMBMessageTemplatePage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryMBMessageTemplatePage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetQueryOption()) {
          optionals.set(1);
        }
        if (struct.isSetPageOption()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetQueryOption()) {
          struct.queryOption.write(oprot);
        }
        if (struct.isSetPageOption()) {
          struct.pageOption.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryMBMessageTemplatePage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageTemplateOption();
          struct.queryOption.read(iprot);
          struct.setQueryOptionIsSet(true);
        }
        if (incoming.get(2)) {
          struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
          struct.pageOption.read(iprot);
          struct.setPageOptionIsSet(true);
        }
      }
    }

  }

  public static class queryMBMessageTemplatePage_result implements org.apache.thrift.TBase<queryMBMessageTemplatePage_result, queryMBMessageTemplatePage_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryMBMessageTemplatePage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryMBMessageTemplatePage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryMBMessageTemplatePage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryMBMessageTemplatePage_resultTupleSchemeFactory());
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage success; // required
    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage.class)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryMBMessageTemplatePage_result.class, metaDataMap);
    }

    public queryMBMessageTemplatePage_result() {
    }

    public queryMBMessageTemplatePage_result(
      xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage success,
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryMBMessageTemplatePage_result(queryMBMessageTemplatePage_result other) {
      if (other.isSetSuccess()) {
        this.success = new xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage(other.success);
      }
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public queryMBMessageTemplatePage_result deepCopy() {
      return new queryMBMessageTemplatePage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage getSuccess() {
      return this.success;
    }

    public queryMBMessageTemplatePage_result setSuccess(xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public queryMBMessageTemplatePage_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryMBMessageTemplatePage_result)
        return this.equals((queryMBMessageTemplatePage_result)that);
      return false;
    }

    public boolean equals(queryMBMessageTemplatePage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(queryMBMessageTemplatePage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryMBMessageTemplatePage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryMBMessageTemplatePage_resultStandardSchemeFactory implements SchemeFactory {
      public queryMBMessageTemplatePage_resultStandardScheme getScheme() {
        return new queryMBMessageTemplatePage_resultStandardScheme();
      }
    }

    private static class queryMBMessageTemplatePage_resultStandardScheme extends StandardScheme<queryMBMessageTemplatePage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryMBMessageTemplatePage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryMBMessageTemplatePage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryMBMessageTemplatePage_resultTupleSchemeFactory implements SchemeFactory {
      public queryMBMessageTemplatePage_resultTupleScheme getScheme() {
        return new queryMBMessageTemplatePage_resultTupleScheme();
      }
    }

    private static class queryMBMessageTemplatePage_resultTupleScheme extends TupleScheme<queryMBMessageTemplatePage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryMBMessageTemplatePage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryMBMessageTemplatePage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new xueqiao.mailbox.thriftdata.req.MBMessageTemplatePage();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class startSendMBMessage_args implements org.apache.thrift.TBase<startSendMBMessage_args, startSendMBMessage_args._Fields>, java.io.Serializable, Cloneable, Comparable<startSendMBMessage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("startSendMBMessage_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField MBM_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("mbmId", org.apache.thrift.protocol.TType.I64, (short)2);
    private static final org.apache.thrift.protocol.TField IS_MESSAGE_COMPLETED_FIELD_DESC = new org.apache.thrift.protocol.TField("isMessageCompleted", org.apache.thrift.protocol.TType.BOOL, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new startSendMBMessage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new startSendMBMessage_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public long mbmId; // required
    public boolean isMessageCompleted; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      MBM_ID((short)2, "mbmId"),
      IS_MESSAGE_COMPLETED((short)3, "isMessageCompleted");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // MBM_ID
            return MBM_ID;
          case 3: // IS_MESSAGE_COMPLETED
            return IS_MESSAGE_COMPLETED;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __MBMID_ISSET_ID = 0;
    private static final int __ISMESSAGECOMPLETED_ISSET_ID = 1;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.MBM_ID, new org.apache.thrift.meta_data.FieldMetaData("mbmId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.IS_MESSAGE_COMPLETED, new org.apache.thrift.meta_data.FieldMetaData("isMessageCompleted", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(startSendMBMessage_args.class, metaDataMap);
    }

    public startSendMBMessage_args() {
    }

    public startSendMBMessage_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      long mbmId,
      boolean isMessageCompleted)
    {
      this();
      this.platformArgs = platformArgs;
      this.mbmId = mbmId;
      setMbmIdIsSet(true);
      this.isMessageCompleted = isMessageCompleted;
      setIsMessageCompletedIsSet(true);
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public startSendMBMessage_args(startSendMBMessage_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      this.mbmId = other.mbmId;
      this.isMessageCompleted = other.isMessageCompleted;
    }

    public startSendMBMessage_args deepCopy() {
      return new startSendMBMessage_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      setMbmIdIsSet(false);
      this.mbmId = 0;
      setIsMessageCompletedIsSet(false);
      this.isMessageCompleted = false;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public startSendMBMessage_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public long getMbmId() {
      return this.mbmId;
    }

    public startSendMBMessage_args setMbmId(long mbmId) {
      this.mbmId = mbmId;
      setMbmIdIsSet(true);
      return this;
    }

    public void unsetMbmId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MBMID_ISSET_ID);
    }

    /** Returns true if field mbmId is set (has been assigned a value) and false otherwise */
    public boolean isSetMbmId() {
      return EncodingUtils.testBit(__isset_bitfield, __MBMID_ISSET_ID);
    }

    public void setMbmIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MBMID_ISSET_ID, value);
    }

    public boolean isIsMessageCompleted() {
      return this.isMessageCompleted;
    }

    public startSendMBMessage_args setIsMessageCompleted(boolean isMessageCompleted) {
      this.isMessageCompleted = isMessageCompleted;
      setIsMessageCompletedIsSet(true);
      return this;
    }

    public void unsetIsMessageCompleted() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ISMESSAGECOMPLETED_ISSET_ID);
    }

    /** Returns true if field isMessageCompleted is set (has been assigned a value) and false otherwise */
    public boolean isSetIsMessageCompleted() {
      return EncodingUtils.testBit(__isset_bitfield, __ISMESSAGECOMPLETED_ISSET_ID);
    }

    public void setIsMessageCompletedIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ISMESSAGECOMPLETED_ISSET_ID, value);
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case MBM_ID:
        if (value == null) {
          unsetMbmId();
        } else {
          setMbmId((Long)value);
        }
        break;

      case IS_MESSAGE_COMPLETED:
        if (value == null) {
          unsetIsMessageCompleted();
        } else {
          setIsMessageCompleted((Boolean)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case MBM_ID:
        return Long.valueOf(getMbmId());

      case IS_MESSAGE_COMPLETED:
        return Boolean.valueOf(isIsMessageCompleted());

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case MBM_ID:
        return isSetMbmId();
      case IS_MESSAGE_COMPLETED:
        return isSetIsMessageCompleted();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof startSendMBMessage_args)
        return this.equals((startSendMBMessage_args)that);
      return false;
    }

    public boolean equals(startSendMBMessage_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_mbmId = true;
      boolean that_present_mbmId = true;
      if (this_present_mbmId || that_present_mbmId) {
        if (!(this_present_mbmId && that_present_mbmId))
          return false;
        if (this.mbmId != that.mbmId)
          return false;
      }

      boolean this_present_isMessageCompleted = true;
      boolean that_present_isMessageCompleted = true;
      if (this_present_isMessageCompleted || that_present_isMessageCompleted) {
        if (!(this_present_isMessageCompleted && that_present_isMessageCompleted))
          return false;
        if (this.isMessageCompleted != that.isMessageCompleted)
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(startSendMBMessage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetMbmId()).compareTo(other.isSetMbmId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetMbmId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.mbmId, other.mbmId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetIsMessageCompleted()).compareTo(other.isSetIsMessageCompleted());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetIsMessageCompleted()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.isMessageCompleted, other.isMessageCompleted);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("startSendMBMessage_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("mbmId:");
      sb.append(this.mbmId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("isMessageCompleted:");
      sb.append(this.isMessageCompleted);
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class startSendMBMessage_argsStandardSchemeFactory implements SchemeFactory {
      public startSendMBMessage_argsStandardScheme getScheme() {
        return new startSendMBMessage_argsStandardScheme();
      }
    }

    private static class startSendMBMessage_argsStandardScheme extends StandardScheme<startSendMBMessage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, startSendMBMessage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // MBM_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.mbmId = iprot.readI64();
                struct.setMbmIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // IS_MESSAGE_COMPLETED
              if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
                struct.isMessageCompleted = iprot.readBool();
                struct.setIsMessageCompletedIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, startSendMBMessage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(MBM_ID_FIELD_DESC);
        oprot.writeI64(struct.mbmId);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(IS_MESSAGE_COMPLETED_FIELD_DESC);
        oprot.writeBool(struct.isMessageCompleted);
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class startSendMBMessage_argsTupleSchemeFactory implements SchemeFactory {
      public startSendMBMessage_argsTupleScheme getScheme() {
        return new startSendMBMessage_argsTupleScheme();
      }
    }

    private static class startSendMBMessage_argsTupleScheme extends TupleScheme<startSendMBMessage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, startSendMBMessage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetMbmId()) {
          optionals.set(1);
        }
        if (struct.isSetIsMessageCompleted()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetMbmId()) {
          oprot.writeI64(struct.mbmId);
        }
        if (struct.isSetIsMessageCompleted()) {
          oprot.writeBool(struct.isMessageCompleted);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, startSendMBMessage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.mbmId = iprot.readI64();
          struct.setMbmIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.isMessageCompleted = iprot.readBool();
          struct.setIsMessageCompletedIsSet(true);
        }
      }
    }

  }

  public static class startSendMBMessage_result implements org.apache.thrift.TBase<startSendMBMessage_result, startSendMBMessage_result._Fields>, java.io.Serializable, Cloneable, Comparable<startSendMBMessage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("startSendMBMessage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.I64, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new startSendMBMessage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new startSendMBMessage_resultTupleSchemeFactory());
    }

    public long success; // required
    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __SUCCESS_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(startSendMBMessage_result.class, metaDataMap);
    }

    public startSendMBMessage_result() {
    }

    public startSendMBMessage_result(
      long success,
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.success = success;
      setSuccessIsSet(true);
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public startSendMBMessage_result(startSendMBMessage_result other) {
      __isset_bitfield = other.__isset_bitfield;
      this.success = other.success;
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public startSendMBMessage_result deepCopy() {
      return new startSendMBMessage_result(this);
    }

    @Override
    public void clear() {
      setSuccessIsSet(false);
      this.success = 0;
      this.err = null;
    }

    public long getSuccess() {
      return this.success;
    }

    public startSendMBMessage_result setSuccess(long success) {
      this.success = success;
      setSuccessIsSet(true);
      return this;
    }

    public void unsetSuccess() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return EncodingUtils.testBit(__isset_bitfield, __SUCCESS_ISSET_ID);
    }

    public void setSuccessIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SUCCESS_ISSET_ID, value);
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public startSendMBMessage_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((Long)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return Long.valueOf(getSuccess());

      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof startSendMBMessage_result)
        return this.equals((startSendMBMessage_result)that);
      return false;
    }

    public boolean equals(startSendMBMessage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(startSendMBMessage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("startSendMBMessage_result(");
      boolean first = true;

      sb.append("success:");
      sb.append(this.success);
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class startSendMBMessage_resultStandardSchemeFactory implements SchemeFactory {
      public startSendMBMessage_resultStandardScheme getScheme() {
        return new startSendMBMessage_resultStandardScheme();
      }
    }

    private static class startSendMBMessage_resultStandardScheme extends StandardScheme<startSendMBMessage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, startSendMBMessage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.success = iprot.readI64();
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, startSendMBMessage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.isSetSuccess()) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          oprot.writeI64(struct.success);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class startSendMBMessage_resultTupleSchemeFactory implements SchemeFactory {
      public startSendMBMessage_resultTupleScheme getScheme() {
        return new startSendMBMessage_resultTupleScheme();
      }
    }

    private static class startSendMBMessage_resultTupleScheme extends TupleScheme<startSendMBMessage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, startSendMBMessage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          oprot.writeI64(struct.success);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, startSendMBMessage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = iprot.readI64();
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class modifyMBMessageJobStatus_args implements org.apache.thrift.TBase<modifyMBMessageJobStatus_args, modifyMBMessageJobStatus_args._Fields>, java.io.Serializable, Cloneable, Comparable<modifyMBMessageJobStatus_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modifyMBMessageJobStatus_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField JOB_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("jobId", org.apache.thrift.protocol.TType.I64, (short)2);
    private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)3);
    private static final org.apache.thrift.protocol.TField ERROR_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("errorDescription", org.apache.thrift.protocol.TType.STRING, (short)4);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new modifyMBMessageJobStatus_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new modifyMBMessageJobStatus_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public long jobId; // required
    /**
     * 
     * @see xueqiao.mailbox.thriftdata.mb.MJStatus
     */
    public xueqiao.mailbox.thriftdata.mb.MJStatus status; // required
    public String errorDescription; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      JOB_ID((short)2, "jobId"),
      /**
       * 
       * @see xueqiao.mailbox.thriftdata.mb.MJStatus
       */
      STATUS((short)3, "status"),
      ERROR_DESCRIPTION((short)4, "errorDescription");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // JOB_ID
            return JOB_ID;
          case 3: // STATUS
            return STATUS;
          case 4: // ERROR_DESCRIPTION
            return ERROR_DESCRIPTION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    private static final int __JOBID_ISSET_ID = 0;
    private byte __isset_bitfield = 0;
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.JOB_ID, new org.apache.thrift.meta_data.FieldMetaData("jobId", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
      tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.mailbox.thriftdata.mb.MJStatus.class)));
      tmpMap.put(_Fields.ERROR_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("errorDescription", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modifyMBMessageJobStatus_args.class, metaDataMap);
    }

    public modifyMBMessageJobStatus_args() {
    }

    public modifyMBMessageJobStatus_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      long jobId,
      xueqiao.mailbox.thriftdata.mb.MJStatus status,
      String errorDescription)
    {
      this();
      this.platformArgs = platformArgs;
      this.jobId = jobId;
      setJobIdIsSet(true);
      this.status = status;
      this.errorDescription = errorDescription;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modifyMBMessageJobStatus_args(modifyMBMessageJobStatus_args other) {
      __isset_bitfield = other.__isset_bitfield;
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      this.jobId = other.jobId;
      if (other.isSetStatus()) {
        this.status = other.status;
      }
      if (other.isSetErrorDescription()) {
        this.errorDescription = other.errorDescription;
      }
    }

    public modifyMBMessageJobStatus_args deepCopy() {
      return new modifyMBMessageJobStatus_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      setJobIdIsSet(false);
      this.jobId = 0;
      this.status = null;
      this.errorDescription = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public modifyMBMessageJobStatus_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public long getJobId() {
      return this.jobId;
    }

    public modifyMBMessageJobStatus_args setJobId(long jobId) {
      this.jobId = jobId;
      setJobIdIsSet(true);
      return this;
    }

    public void unsetJobId() {
      __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __JOBID_ISSET_ID);
    }

    /** Returns true if field jobId is set (has been assigned a value) and false otherwise */
    public boolean isSetJobId() {
      return EncodingUtils.testBit(__isset_bitfield, __JOBID_ISSET_ID);
    }

    public void setJobIdIsSet(boolean value) {
      __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __JOBID_ISSET_ID, value);
    }

    /**
     * 
     * @see xueqiao.mailbox.thriftdata.mb.MJStatus
     */
    public xueqiao.mailbox.thriftdata.mb.MJStatus getStatus() {
      return this.status;
    }

    /**
     * 
     * @see xueqiao.mailbox.thriftdata.mb.MJStatus
     */
    public modifyMBMessageJobStatus_args setStatus(xueqiao.mailbox.thriftdata.mb.MJStatus status) {
      this.status = status;
      return this;
    }

    public void unsetStatus() {
      this.status = null;
    }

    /** Returns true if field status is set (has been assigned a value) and false otherwise */
    public boolean isSetStatus() {
      return this.status != null;
    }

    public void setStatusIsSet(boolean value) {
      if (!value) {
        this.status = null;
      }
    }

    public String getErrorDescription() {
      return this.errorDescription;
    }

    public modifyMBMessageJobStatus_args setErrorDescription(String errorDescription) {
      this.errorDescription = errorDescription;
      return this;
    }

    public void unsetErrorDescription() {
      this.errorDescription = null;
    }

    /** Returns true if field errorDescription is set (has been assigned a value) and false otherwise */
    public boolean isSetErrorDescription() {
      return this.errorDescription != null;
    }

    public void setErrorDescriptionIsSet(boolean value) {
      if (!value) {
        this.errorDescription = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case JOB_ID:
        if (value == null) {
          unsetJobId();
        } else {
          setJobId((Long)value);
        }
        break;

      case STATUS:
        if (value == null) {
          unsetStatus();
        } else {
          setStatus((xueqiao.mailbox.thriftdata.mb.MJStatus)value);
        }
        break;

      case ERROR_DESCRIPTION:
        if (value == null) {
          unsetErrorDescription();
        } else {
          setErrorDescription((String)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case JOB_ID:
        return Long.valueOf(getJobId());

      case STATUS:
        return getStatus();

      case ERROR_DESCRIPTION:
        return getErrorDescription();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case JOB_ID:
        return isSetJobId();
      case STATUS:
        return isSetStatus();
      case ERROR_DESCRIPTION:
        return isSetErrorDescription();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof modifyMBMessageJobStatus_args)
        return this.equals((modifyMBMessageJobStatus_args)that);
      return false;
    }

    public boolean equals(modifyMBMessageJobStatus_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_jobId = true;
      boolean that_present_jobId = true;
      if (this_present_jobId || that_present_jobId) {
        if (!(this_present_jobId && that_present_jobId))
          return false;
        if (this.jobId != that.jobId)
          return false;
      }

      boolean this_present_status = true && this.isSetStatus();
      boolean that_present_status = true && that.isSetStatus();
      if (this_present_status || that_present_status) {
        if (!(this_present_status && that_present_status))
          return false;
        if (!this.status.equals(that.status))
          return false;
      }

      boolean this_present_errorDescription = true && this.isSetErrorDescription();
      boolean that_present_errorDescription = true && that.isSetErrorDescription();
      if (this_present_errorDescription || that_present_errorDescription) {
        if (!(this_present_errorDescription && that_present_errorDescription))
          return false;
        if (!this.errorDescription.equals(that.errorDescription))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(modifyMBMessageJobStatus_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetJobId()).compareTo(other.isSetJobId());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetJobId()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobId, other.jobId);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetStatus()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetErrorDescription()).compareTo(other.isSetErrorDescription());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErrorDescription()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.errorDescription, other.errorDescription);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("modifyMBMessageJobStatus_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("jobId:");
      sb.append(this.jobId);
      first = false;
      if (!first) sb.append(", ");
      sb.append("status:");
      if (this.status == null) {
        sb.append("null");
      } else {
        sb.append(this.status);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("errorDescription:");
      if (this.errorDescription == null) {
        sb.append("null");
      } else {
        sb.append(this.errorDescription);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
        __isset_bitfield = 0;
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modifyMBMessageJobStatus_argsStandardSchemeFactory implements SchemeFactory {
      public modifyMBMessageJobStatus_argsStandardScheme getScheme() {
        return new modifyMBMessageJobStatus_argsStandardScheme();
      }
    }

    private static class modifyMBMessageJobStatus_argsStandardScheme extends StandardScheme<modifyMBMessageJobStatus_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modifyMBMessageJobStatus_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // JOB_ID
              if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
                struct.jobId = iprot.readI64();
                struct.setJobIdIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // STATUS
              if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
                struct.status = xueqiao.mailbox.thriftdata.mb.MJStatus.findByValue(iprot.readI32());
                struct.setStatusIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 4: // ERROR_DESCRIPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
                struct.errorDescription = iprot.readString();
                struct.setErrorDescriptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modifyMBMessageJobStatus_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldBegin(JOB_ID_FIELD_DESC);
        oprot.writeI64(struct.jobId);
        oprot.writeFieldEnd();
        if (struct.status != null) {
          oprot.writeFieldBegin(STATUS_FIELD_DESC);
          oprot.writeI32(struct.status.getValue());
          oprot.writeFieldEnd();
        }
        if (struct.errorDescription != null) {
          oprot.writeFieldBegin(ERROR_DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.errorDescription);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modifyMBMessageJobStatus_argsTupleSchemeFactory implements SchemeFactory {
      public modifyMBMessageJobStatus_argsTupleScheme getScheme() {
        return new modifyMBMessageJobStatus_argsTupleScheme();
      }
    }

    private static class modifyMBMessageJobStatus_argsTupleScheme extends TupleScheme<modifyMBMessageJobStatus_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageJobStatus_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetJobId()) {
          optionals.set(1);
        }
        if (struct.isSetStatus()) {
          optionals.set(2);
        }
        if (struct.isSetErrorDescription()) {
          optionals.set(3);
        }
        oprot.writeBitSet(optionals, 4);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetJobId()) {
          oprot.writeI64(struct.jobId);
        }
        if (struct.isSetStatus()) {
          oprot.writeI32(struct.status.getValue());
        }
        if (struct.isSetErrorDescription()) {
          oprot.writeString(struct.errorDescription);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageJobStatus_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(4);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.jobId = iprot.readI64();
          struct.setJobIdIsSet(true);
        }
        if (incoming.get(2)) {
          struct.status = xueqiao.mailbox.thriftdata.mb.MJStatus.findByValue(iprot.readI32());
          struct.setStatusIsSet(true);
        }
        if (incoming.get(3)) {
          struct.errorDescription = iprot.readString();
          struct.setErrorDescriptionIsSet(true);
        }
      }
    }

  }

  public static class modifyMBMessageJobStatus_result implements org.apache.thrift.TBase<modifyMBMessageJobStatus_result, modifyMBMessageJobStatus_result._Fields>, java.io.Serializable, Cloneable, Comparable<modifyMBMessageJobStatus_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("modifyMBMessageJobStatus_result");

    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new modifyMBMessageJobStatus_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new modifyMBMessageJobStatus_resultTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(modifyMBMessageJobStatus_result.class, metaDataMap);
    }

    public modifyMBMessageJobStatus_result() {
    }

    public modifyMBMessageJobStatus_result(
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public modifyMBMessageJobStatus_result(modifyMBMessageJobStatus_result other) {
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public modifyMBMessageJobStatus_result deepCopy() {
      return new modifyMBMessageJobStatus_result(this);
    }

    @Override
    public void clear() {
      this.err = null;
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public modifyMBMessageJobStatus_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof modifyMBMessageJobStatus_result)
        return this.equals((modifyMBMessageJobStatus_result)that);
      return false;
    }

    public boolean equals(modifyMBMessageJobStatus_result that) {
      if (that == null)
        return false;

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(modifyMBMessageJobStatus_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("modifyMBMessageJobStatus_result(");
      boolean first = true;

      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class modifyMBMessageJobStatus_resultStandardSchemeFactory implements SchemeFactory {
      public modifyMBMessageJobStatus_resultStandardScheme getScheme() {
        return new modifyMBMessageJobStatus_resultStandardScheme();
      }
    }

    private static class modifyMBMessageJobStatus_resultStandardScheme extends StandardScheme<modifyMBMessageJobStatus_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, modifyMBMessageJobStatus_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, modifyMBMessageJobStatus_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class modifyMBMessageJobStatus_resultTupleSchemeFactory implements SchemeFactory {
      public modifyMBMessageJobStatus_resultTupleScheme getScheme() {
        return new modifyMBMessageJobStatus_resultTupleScheme();
      }
    }

    private static class modifyMBMessageJobStatus_resultTupleScheme extends TupleScheme<modifyMBMessageJobStatus_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageJobStatus_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetErr()) {
          optionals.set(0);
        }
        oprot.writeBitSet(optionals, 1);
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, modifyMBMessageJobStatus_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(1);
        if (incoming.get(0)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

  public static class queryMBMessageJobPage_args implements org.apache.thrift.TBase<queryMBMessageJobPage_args, queryMBMessageJobPage_args._Fields>, java.io.Serializable, Cloneable, Comparable<queryMBMessageJobPage_args>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryMBMessageJobPage_args");

    private static final org.apache.thrift.protocol.TField PLATFORM_ARGS_FIELD_DESC = new org.apache.thrift.protocol.TField("platformArgs", org.apache.thrift.protocol.TType.STRUCT, (short)1);
    private static final org.apache.thrift.protocol.TField QUERY_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("queryOption", org.apache.thrift.protocol.TType.STRUCT, (short)2);
    private static final org.apache.thrift.protocol.TField PAGE_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("pageOption", org.apache.thrift.protocol.TType.STRUCT, (short)3);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryMBMessageJobPage_argsStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryMBMessageJobPage_argsTupleSchemeFactory());
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs; // required
    public xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption; // required
    public org.soldier.platform.page.IndexedPageOption pageOption; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      PLATFORM_ARGS((short)1, "platformArgs"),
      QUERY_OPTION((short)2, "queryOption"),
      PAGE_OPTION((short)3, "pageOption");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 1: // PLATFORM_ARGS
            return PLATFORM_ARGS;
          case 2: // QUERY_OPTION
            return QUERY_OPTION;
          case 3: // PAGE_OPTION
            return PAGE_OPTION;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.PLATFORM_ARGS, new org.apache.thrift.meta_data.FieldMetaData("platformArgs", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.svr_platform.comm.PlatformArgs.class)));
      tmpMap.put(_Fields.QUERY_OPTION, new org.apache.thrift.meta_data.FieldMetaData("queryOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption.class)));
      tmpMap.put(_Fields.PAGE_OPTION, new org.apache.thrift.meta_data.FieldMetaData("pageOption", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.page.IndexedPageOption.class)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryMBMessageJobPage_args.class, metaDataMap);
    }

    public queryMBMessageJobPage_args() {
    }

    public queryMBMessageJobPage_args(
      org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs,
      xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption,
      org.soldier.platform.page.IndexedPageOption pageOption)
    {
      this();
      this.platformArgs = platformArgs;
      this.queryOption = queryOption;
      this.pageOption = pageOption;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryMBMessageJobPage_args(queryMBMessageJobPage_args other) {
      if (other.isSetPlatformArgs()) {
        this.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs(other.platformArgs);
      }
      if (other.isSetQueryOption()) {
        this.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption(other.queryOption);
      }
      if (other.isSetPageOption()) {
        this.pageOption = new org.soldier.platform.page.IndexedPageOption(other.pageOption);
      }
    }

    public queryMBMessageJobPage_args deepCopy() {
      return new queryMBMessageJobPage_args(this);
    }

    @Override
    public void clear() {
      this.platformArgs = null;
      this.queryOption = null;
      this.pageOption = null;
    }

    public org.soldier.platform.svr_platform.comm.PlatformArgs getPlatformArgs() {
      return this.platformArgs;
    }

    public queryMBMessageJobPage_args setPlatformArgs(org.soldier.platform.svr_platform.comm.PlatformArgs platformArgs) {
      this.platformArgs = platformArgs;
      return this;
    }

    public void unsetPlatformArgs() {
      this.platformArgs = null;
    }

    /** Returns true if field platformArgs is set (has been assigned a value) and false otherwise */
    public boolean isSetPlatformArgs() {
      return this.platformArgs != null;
    }

    public void setPlatformArgsIsSet(boolean value) {
      if (!value) {
        this.platformArgs = null;
      }
    }

    public xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption getQueryOption() {
      return this.queryOption;
    }

    public queryMBMessageJobPage_args setQueryOption(xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption queryOption) {
      this.queryOption = queryOption;
      return this;
    }

    public void unsetQueryOption() {
      this.queryOption = null;
    }

    /** Returns true if field queryOption is set (has been assigned a value) and false otherwise */
    public boolean isSetQueryOption() {
      return this.queryOption != null;
    }

    public void setQueryOptionIsSet(boolean value) {
      if (!value) {
        this.queryOption = null;
      }
    }

    public org.soldier.platform.page.IndexedPageOption getPageOption() {
      return this.pageOption;
    }

    public queryMBMessageJobPage_args setPageOption(org.soldier.platform.page.IndexedPageOption pageOption) {
      this.pageOption = pageOption;
      return this;
    }

    public void unsetPageOption() {
      this.pageOption = null;
    }

    /** Returns true if field pageOption is set (has been assigned a value) and false otherwise */
    public boolean isSetPageOption() {
      return this.pageOption != null;
    }

    public void setPageOptionIsSet(boolean value) {
      if (!value) {
        this.pageOption = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case PLATFORM_ARGS:
        if (value == null) {
          unsetPlatformArgs();
        } else {
          setPlatformArgs((org.soldier.platform.svr_platform.comm.PlatformArgs)value);
        }
        break;

      case QUERY_OPTION:
        if (value == null) {
          unsetQueryOption();
        } else {
          setQueryOption((xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption)value);
        }
        break;

      case PAGE_OPTION:
        if (value == null) {
          unsetPageOption();
        } else {
          setPageOption((org.soldier.platform.page.IndexedPageOption)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case PLATFORM_ARGS:
        return getPlatformArgs();

      case QUERY_OPTION:
        return getQueryOption();

      case PAGE_OPTION:
        return getPageOption();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case PLATFORM_ARGS:
        return isSetPlatformArgs();
      case QUERY_OPTION:
        return isSetQueryOption();
      case PAGE_OPTION:
        return isSetPageOption();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryMBMessageJobPage_args)
        return this.equals((queryMBMessageJobPage_args)that);
      return false;
    }

    public boolean equals(queryMBMessageJobPage_args that) {
      if (that == null)
        return false;

      boolean this_present_platformArgs = true && this.isSetPlatformArgs();
      boolean that_present_platformArgs = true && that.isSetPlatformArgs();
      if (this_present_platformArgs || that_present_platformArgs) {
        if (!(this_present_platformArgs && that_present_platformArgs))
          return false;
        if (!this.platformArgs.equals(that.platformArgs))
          return false;
      }

      boolean this_present_queryOption = true && this.isSetQueryOption();
      boolean that_present_queryOption = true && that.isSetQueryOption();
      if (this_present_queryOption || that_present_queryOption) {
        if (!(this_present_queryOption && that_present_queryOption))
          return false;
        if (!this.queryOption.equals(that.queryOption))
          return false;
      }

      boolean this_present_pageOption = true && this.isSetPageOption();
      boolean that_present_pageOption = true && that.isSetPageOption();
      if (this_present_pageOption || that_present_pageOption) {
        if (!(this_present_pageOption && that_present_pageOption))
          return false;
        if (!this.pageOption.equals(that.pageOption))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(queryMBMessageJobPage_args other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetPlatformArgs()).compareTo(other.isSetPlatformArgs());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPlatformArgs()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformArgs, other.platformArgs);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetQueryOption()).compareTo(other.isSetQueryOption());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetQueryOption()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryOption, other.queryOption);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetPageOption()).compareTo(other.isSetPageOption());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetPageOption()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageOption, other.pageOption);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
    }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryMBMessageJobPage_args(");
      boolean first = true;

      sb.append("platformArgs:");
      if (this.platformArgs == null) {
        sb.append("null");
      } else {
        sb.append(this.platformArgs);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("queryOption:");
      if (this.queryOption == null) {
        sb.append("null");
      } else {
        sb.append(this.queryOption);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("pageOption:");
      if (this.pageOption == null) {
        sb.append("null");
      } else {
        sb.append(this.pageOption);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (platformArgs != null) {
        platformArgs.validate();
      }
      if (queryOption != null) {
        queryOption.validate();
      }
      if (pageOption != null) {
        pageOption.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryMBMessageJobPage_argsStandardSchemeFactory implements SchemeFactory {
      public queryMBMessageJobPage_argsStandardScheme getScheme() {
        return new queryMBMessageJobPage_argsStandardScheme();
      }
    }

    private static class queryMBMessageJobPage_argsStandardScheme extends StandardScheme<queryMBMessageJobPage_args> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryMBMessageJobPage_args struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 1: // PLATFORM_ARGS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
                struct.platformArgs.read(iprot);
                struct.setPlatformArgsIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 2: // QUERY_OPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption();
                struct.queryOption.read(iprot);
                struct.setQueryOptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 3: // PAGE_OPTION
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
                struct.pageOption.read(iprot);
                struct.setPageOptionIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryMBMessageJobPage_args struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.platformArgs != null) {
          oprot.writeFieldBegin(PLATFORM_ARGS_FIELD_DESC);
          struct.platformArgs.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.queryOption != null) {
          oprot.writeFieldBegin(QUERY_OPTION_FIELD_DESC);
          struct.queryOption.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.pageOption != null) {
          oprot.writeFieldBegin(PAGE_OPTION_FIELD_DESC);
          struct.pageOption.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryMBMessageJobPage_argsTupleSchemeFactory implements SchemeFactory {
      public queryMBMessageJobPage_argsTupleScheme getScheme() {
        return new queryMBMessageJobPage_argsTupleScheme();
      }
    }

    private static class queryMBMessageJobPage_argsTupleScheme extends TupleScheme<queryMBMessageJobPage_args> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryMBMessageJobPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetPlatformArgs()) {
          optionals.set(0);
        }
        if (struct.isSetQueryOption()) {
          optionals.set(1);
        }
        if (struct.isSetPageOption()) {
          optionals.set(2);
        }
        oprot.writeBitSet(optionals, 3);
        if (struct.isSetPlatformArgs()) {
          struct.platformArgs.write(oprot);
        }
        if (struct.isSetQueryOption()) {
          struct.queryOption.write(oprot);
        }
        if (struct.isSetPageOption()) {
          struct.pageOption.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryMBMessageJobPage_args struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(3);
        if (incoming.get(0)) {
          struct.platformArgs = new org.soldier.platform.svr_platform.comm.PlatformArgs();
          struct.platformArgs.read(iprot);
          struct.setPlatformArgsIsSet(true);
        }
        if (incoming.get(1)) {
          struct.queryOption = new xueqiao.mailbox.thriftdata.req.QueryMBMessageJobOption();
          struct.queryOption.read(iprot);
          struct.setQueryOptionIsSet(true);
        }
        if (incoming.get(2)) {
          struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
          struct.pageOption.read(iprot);
          struct.setPageOptionIsSet(true);
        }
      }
    }

  }

  public static class queryMBMessageJobPage_result implements org.apache.thrift.TBase<queryMBMessageJobPage_result, queryMBMessageJobPage_result._Fields>, java.io.Serializable, Cloneable, Comparable<queryMBMessageJobPage_result>   {
    private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("queryMBMessageJobPage_result");

    private static final org.apache.thrift.protocol.TField SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("success", org.apache.thrift.protocol.TType.STRUCT, (short)0);
    private static final org.apache.thrift.protocol.TField ERR_FIELD_DESC = new org.apache.thrift.protocol.TField("err", org.apache.thrift.protocol.TType.STRUCT, (short)1);

    private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
    static {
      schemes.put(StandardScheme.class, new queryMBMessageJobPage_resultStandardSchemeFactory());
      schemes.put(TupleScheme.class, new queryMBMessageJobPage_resultTupleSchemeFactory());
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageJobPage success; // required
    public org.soldier.platform.svr_platform.comm.ErrorInfo err; // required

    /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
    public enum _Fields implements org.apache.thrift.TFieldIdEnum {
      SUCCESS((short)0, "success"),
      ERR((short)1, "err");

      private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

      static {
        for (_Fields field : EnumSet.allOf(_Fields.class)) {
          byName.put(field.getFieldName(), field);
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, or null if its not found.
       */
      public static _Fields findByThriftId(int fieldId) {
        switch(fieldId) {
          case 0: // SUCCESS
            return SUCCESS;
          case 1: // ERR
            return ERR;
          default:
            return null;
        }
      }

      /**
       * Find the _Fields constant that matches fieldId, throwing an exception
       * if it is not found.
       */
      public static _Fields findByThriftIdOrThrow(int fieldId) {
        _Fields fields = findByThriftId(fieldId);
        if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
        return fields;
      }

      /**
       * Find the _Fields constant that matches name, or null if its not found.
       */
      public static _Fields findByName(String name) {
        return byName.get(name);
      }

      private final short _thriftId;
      private final String _fieldName;

      _Fields(short thriftId, String fieldName) {
        _thriftId = thriftId;
        _fieldName = fieldName;
      }

      public short getThriftFieldId() {
        return _thriftId;
      }

      public String getFieldName() {
        return _fieldName;
      }
    }

    // isset id assignments
    public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
    static {
      Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
      tmpMap.put(_Fields.SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("success", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, xueqiao.mailbox.thriftdata.req.MBMessageJobPage.class)));
      tmpMap.put(_Fields.ERR, new org.apache.thrift.meta_data.FieldMetaData("err", org.apache.thrift.TFieldRequirementType.DEFAULT, 
          new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRUCT)));
      metaDataMap = Collections.unmodifiableMap(tmpMap);
      org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(queryMBMessageJobPage_result.class, metaDataMap);
    }

    public queryMBMessageJobPage_result() {
    }

    public queryMBMessageJobPage_result(
      xueqiao.mailbox.thriftdata.req.MBMessageJobPage success,
      org.soldier.platform.svr_platform.comm.ErrorInfo err)
    {
      this();
      this.success = success;
      this.err = err;
    }

    /**
     * Performs a deep copy on <i>other</i>.
     */
    public queryMBMessageJobPage_result(queryMBMessageJobPage_result other) {
      if (other.isSetSuccess()) {
        this.success = new xueqiao.mailbox.thriftdata.req.MBMessageJobPage(other.success);
      }
      if (other.isSetErr()) {
        this.err = new org.soldier.platform.svr_platform.comm.ErrorInfo(other.err);
      }
    }

    public queryMBMessageJobPage_result deepCopy() {
      return new queryMBMessageJobPage_result(this);
    }

    @Override
    public void clear() {
      this.success = null;
      this.err = null;
    }

    public xueqiao.mailbox.thriftdata.req.MBMessageJobPage getSuccess() {
      return this.success;
    }

    public queryMBMessageJobPage_result setSuccess(xueqiao.mailbox.thriftdata.req.MBMessageJobPage success) {
      this.success = success;
      return this;
    }

    public void unsetSuccess() {
      this.success = null;
    }

    /** Returns true if field success is set (has been assigned a value) and false otherwise */
    public boolean isSetSuccess() {
      return this.success != null;
    }

    public void setSuccessIsSet(boolean value) {
      if (!value) {
        this.success = null;
      }
    }

    public org.soldier.platform.svr_platform.comm.ErrorInfo getErr() {
      return this.err;
    }

    public queryMBMessageJobPage_result setErr(org.soldier.platform.svr_platform.comm.ErrorInfo err) {
      this.err = err;
      return this;
    }

    public void unsetErr() {
      this.err = null;
    }

    /** Returns true if field err is set (has been assigned a value) and false otherwise */
    public boolean isSetErr() {
      return this.err != null;
    }

    public void setErrIsSet(boolean value) {
      if (!value) {
        this.err = null;
      }
    }

    public void setFieldValue(_Fields field, Object value) {
      switch (field) {
      case SUCCESS:
        if (value == null) {
          unsetSuccess();
        } else {
          setSuccess((xueqiao.mailbox.thriftdata.req.MBMessageJobPage)value);
        }
        break;

      case ERR:
        if (value == null) {
          unsetErr();
        } else {
          setErr((org.soldier.platform.svr_platform.comm.ErrorInfo)value);
        }
        break;

      }
    }

    public Object getFieldValue(_Fields field) {
      switch (field) {
      case SUCCESS:
        return getSuccess();

      case ERR:
        return getErr();

      }
      throw new IllegalStateException();
    }

    /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
    public boolean isSet(_Fields field) {
      if (field == null) {
        throw new IllegalArgumentException();
      }

      switch (field) {
      case SUCCESS:
        return isSetSuccess();
      case ERR:
        return isSetErr();
      }
      throw new IllegalStateException();
    }

    @Override
    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof queryMBMessageJobPage_result)
        return this.equals((queryMBMessageJobPage_result)that);
      return false;
    }

    public boolean equals(queryMBMessageJobPage_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && this.isSetSuccess();
      boolean that_present_success = true && that.isSetSuccess();
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_err = true && this.isSetErr();
      boolean that_present_err = true && that.isSetErr();
      if (this_present_err || that_present_err) {
        if (!(this_present_err && that_present_err))
          return false;
        if (!this.err.equals(that.err))
          return false;
      }

      return true;
    }

    @Override
    public int hashCode() {
      return 0;
    }

    @Override
    public int compareTo(queryMBMessageJobPage_result other) {
      if (!getClass().equals(other.getClass())) {
        return getClass().getName().compareTo(other.getClass().getName());
      }

      int lastComparison = 0;

      lastComparison = Boolean.valueOf(isSetSuccess()).compareTo(other.isSetSuccess());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetSuccess()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.success, other.success);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      lastComparison = Boolean.valueOf(isSetErr()).compareTo(other.isSetErr());
      if (lastComparison != 0) {
        return lastComparison;
      }
      if (isSetErr()) {
        lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.err, other.err);
        if (lastComparison != 0) {
          return lastComparison;
        }
      }
      return 0;
    }

    public _Fields fieldForId(int fieldId) {
      return _Fields.findByThriftId(fieldId);
    }

    public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
      schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
      schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
      }

    @Override
    public String toString() {
      StringBuilder sb = new StringBuilder("queryMBMessageJobPage_result(");
      boolean first = true;

      sb.append("success:");
      if (this.success == null) {
        sb.append("null");
      } else {
        sb.append(this.success);
      }
      first = false;
      if (!first) sb.append(", ");
      sb.append("err:");
      if (this.err == null) {
        sb.append("null");
      } else {
        sb.append(this.err);
      }
      first = false;
      sb.append(")");
      return sb.toString();
    }

    public void validate() throws org.apache.thrift.TException {
      // check for required fields
      // check for sub-struct validity
      if (success != null) {
        success.validate();
      }
    }

    private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
      try {
        write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
      try {
        read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
      } catch (org.apache.thrift.TException te) {
        throw new java.io.IOException(te);
      }
    }

    private static class queryMBMessageJobPage_resultStandardSchemeFactory implements SchemeFactory {
      public queryMBMessageJobPage_resultStandardScheme getScheme() {
        return new queryMBMessageJobPage_resultStandardScheme();
      }
    }

    private static class queryMBMessageJobPage_resultStandardScheme extends StandardScheme<queryMBMessageJobPage_result> {

      public void read(org.apache.thrift.protocol.TProtocol iprot, queryMBMessageJobPage_result struct) throws org.apache.thrift.TException {
        org.apache.thrift.protocol.TField schemeField;
        iprot.readStructBegin();
        while (true)
        {
          schemeField = iprot.readFieldBegin();
          if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
            break;
          }
          switch (schemeField.id) {
            case 0: // SUCCESS
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.success = new xueqiao.mailbox.thriftdata.req.MBMessageJobPage();
                struct.success.read(iprot);
                struct.setSuccessIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            case 1: // ERR
              if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
                struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
                struct.err.read(iprot);
                struct.setErrIsSet(true);
              } else { 
                org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
              }
              break;
            default:
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
          }
          iprot.readFieldEnd();
        }
        iprot.readStructEnd();

        // check for required fields of primitive type, which can't be checked in the validate method
        struct.validate();
      }

      public void write(org.apache.thrift.protocol.TProtocol oprot, queryMBMessageJobPage_result struct) throws org.apache.thrift.TException {
        struct.validate();

        oprot.writeStructBegin(STRUCT_DESC);
        if (struct.success != null) {
          oprot.writeFieldBegin(SUCCESS_FIELD_DESC);
          struct.success.write(oprot);
          oprot.writeFieldEnd();
        }
        if (struct.err != null) {
          oprot.writeFieldBegin(ERR_FIELD_DESC);
          struct.err.write(oprot);
          oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
      }

    }

    private static class queryMBMessageJobPage_resultTupleSchemeFactory implements SchemeFactory {
      public queryMBMessageJobPage_resultTupleScheme getScheme() {
        return new queryMBMessageJobPage_resultTupleScheme();
      }
    }

    private static class queryMBMessageJobPage_resultTupleScheme extends TupleScheme<queryMBMessageJobPage_result> {

      @Override
      public void write(org.apache.thrift.protocol.TProtocol prot, queryMBMessageJobPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol oprot = (TTupleProtocol) prot;
        BitSet optionals = new BitSet();
        if (struct.isSetSuccess()) {
          optionals.set(0);
        }
        if (struct.isSetErr()) {
          optionals.set(1);
        }
        oprot.writeBitSet(optionals, 2);
        if (struct.isSetSuccess()) {
          struct.success.write(oprot);
        }
        if (struct.isSetErr()) {
          struct.err.write(oprot);
        }
      }

      @Override
      public void read(org.apache.thrift.protocol.TProtocol prot, queryMBMessageJobPage_result struct) throws org.apache.thrift.TException {
        TTupleProtocol iprot = (TTupleProtocol) prot;
        BitSet incoming = iprot.readBitSet(2);
        if (incoming.get(0)) {
          struct.success = new xueqiao.mailbox.thriftdata.req.MBMessageJobPage();
          struct.success.read(iprot);
          struct.setSuccessIsSet(true);
        }
        if (incoming.get(1)) {
          struct.err = new org.soldier.platform.svr_platform.comm.ErrorInfo();
          struct.err.read(iprot);
          struct.setErrIsSet(true);
        }
      }
    }

  }

}
