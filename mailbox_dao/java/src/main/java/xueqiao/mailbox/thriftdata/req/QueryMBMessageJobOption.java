/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.mailbox.thriftdata.req;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 查询信箱消息实例条件
 */
public class QueryMBMessageJobOption implements org.apache.thrift.TBase<QueryMBMessageJobOption, QueryMBMessageJobOption._Fields>, java.io.Serializable, Cloneable, Comparable<QueryMBMessageJobOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QueryMBMessageJobOption");

  private static final org.apache.thrift.protocol.TField JOB_ID_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("jobIdSet", org.apache.thrift.protocol.TType.SET, (short)1);
  private static final org.apache.thrift.protocol.TField CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("channel", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("type", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("level", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField QUERY_START_CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("queryStartCreateTimestamp", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField QUERY_END_CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("queryEndCreateTimestamp", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField STATUS_SET_FIELD_DESC = new org.apache.thrift.protocol.TField("statusSet", org.apache.thrift.protocol.TType.SET, (short)7);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QueryMBMessageJobOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QueryMBMessageJobOptionTupleSchemeFactory());
  }

  public Set<Long> jobIdSet; // optional
  /**
   * 
   * @see xueqiao.mailbox.thriftdata.mb.MSendingChannel
   */
  public xueqiao.mailbox.thriftdata.mb.MSendingChannel channel; // optional
  /**
   * 
   * @see xueqiao.mailbox.thriftdata.message.MType
   */
  public xueqiao.mailbox.thriftdata.message.MType type; // optional
  /**
   * 
   * @see xueqiao.mailbox.thriftdata.message.MLevel
   */
  public xueqiao.mailbox.thriftdata.message.MLevel level; // optional
  public long queryStartCreateTimestamp; // optional
  public long queryEndCreateTimestamp; // optional
  public Set<xueqiao.mailbox.thriftdata.mb.MJStatus> statusSet; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    JOB_ID_SET((short)1, "jobIdSet"),
    /**
     * 
     * @see xueqiao.mailbox.thriftdata.mb.MSendingChannel
     */
    CHANNEL((short)2, "channel"),
    /**
     * 
     * @see xueqiao.mailbox.thriftdata.message.MType
     */
    TYPE((short)3, "type"),
    /**
     * 
     * @see xueqiao.mailbox.thriftdata.message.MLevel
     */
    LEVEL((short)4, "level"),
    QUERY_START_CREATE_TIMESTAMP((short)5, "queryStartCreateTimestamp"),
    QUERY_END_CREATE_TIMESTAMP((short)6, "queryEndCreateTimestamp"),
    STATUS_SET((short)7, "statusSet");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // JOB_ID_SET
          return JOB_ID_SET;
        case 2: // CHANNEL
          return CHANNEL;
        case 3: // TYPE
          return TYPE;
        case 4: // LEVEL
          return LEVEL;
        case 5: // QUERY_START_CREATE_TIMESTAMP
          return QUERY_START_CREATE_TIMESTAMP;
        case 6: // QUERY_END_CREATE_TIMESTAMP
          return QUERY_END_CREATE_TIMESTAMP;
        case 7: // STATUS_SET
          return STATUS_SET;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __QUERYSTARTCREATETIMESTAMP_ISSET_ID = 0;
  private static final int __QUERYENDCREATETIMESTAMP_ISSET_ID = 1;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.JOB_ID_SET,_Fields.CHANNEL,_Fields.TYPE,_Fields.LEVEL,_Fields.QUERY_START_CREATE_TIMESTAMP,_Fields.QUERY_END_CREATE_TIMESTAMP,_Fields.STATUS_SET};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.JOB_ID_SET, new org.apache.thrift.meta_data.FieldMetaData("jobIdSet", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64))));
    tmpMap.put(_Fields.CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("channel", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.mailbox.thriftdata.mb.MSendingChannel.class)));
    tmpMap.put(_Fields.TYPE, new org.apache.thrift.meta_data.FieldMetaData("type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.mailbox.thriftdata.message.MType.class)));
    tmpMap.put(_Fields.LEVEL, new org.apache.thrift.meta_data.FieldMetaData("level", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.mailbox.thriftdata.message.MLevel.class)));
    tmpMap.put(_Fields.QUERY_START_CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("queryStartCreateTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.QUERY_END_CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("queryEndCreateTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATUS_SET, new org.apache.thrift.meta_data.FieldMetaData("statusSet", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, xueqiao.mailbox.thriftdata.mb.MJStatus.class))));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QueryMBMessageJobOption.class, metaDataMap);
  }

  public QueryMBMessageJobOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QueryMBMessageJobOption(QueryMBMessageJobOption other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetJobIdSet()) {
      Set<Long> __this__jobIdSet = new HashSet<Long>(other.jobIdSet);
      this.jobIdSet = __this__jobIdSet;
    }
    if (other.isSetChannel()) {
      this.channel = other.channel;
    }
    if (other.isSetType()) {
      this.type = other.type;
    }
    if (other.isSetLevel()) {
      this.level = other.level;
    }
    this.queryStartCreateTimestamp = other.queryStartCreateTimestamp;
    this.queryEndCreateTimestamp = other.queryEndCreateTimestamp;
    if (other.isSetStatusSet()) {
      Set<xueqiao.mailbox.thriftdata.mb.MJStatus> __this__statusSet = new HashSet<xueqiao.mailbox.thriftdata.mb.MJStatus>(other.statusSet.size());
      for (xueqiao.mailbox.thriftdata.mb.MJStatus other_element : other.statusSet) {
        __this__statusSet.add(other_element);
      }
      this.statusSet = __this__statusSet;
    }
  }

  public QueryMBMessageJobOption deepCopy() {
    return new QueryMBMessageJobOption(this);
  }

  @Override
  public void clear() {
    this.jobIdSet = null;
    this.channel = null;
    this.type = null;
    this.level = null;
    setQueryStartCreateTimestampIsSet(false);
    this.queryStartCreateTimestamp = 0;
    setQueryEndCreateTimestampIsSet(false);
    this.queryEndCreateTimestamp = 0;
    this.statusSet = null;
  }

  public int getJobIdSetSize() {
    return (this.jobIdSet == null) ? 0 : this.jobIdSet.size();
  }

  public java.util.Iterator<Long> getJobIdSetIterator() {
    return (this.jobIdSet == null) ? null : this.jobIdSet.iterator();
  }

  public void addToJobIdSet(long elem) {
    if (this.jobIdSet == null) {
      this.jobIdSet = new HashSet<Long>();
    }
    this.jobIdSet.add(elem);
  }

  public Set<Long> getJobIdSet() {
    return this.jobIdSet;
  }

  public QueryMBMessageJobOption setJobIdSet(Set<Long> jobIdSet) {
    this.jobIdSet = jobIdSet;
    return this;
  }

  public void unsetJobIdSet() {
    this.jobIdSet = null;
  }

  /** Returns true if field jobIdSet is set (has been assigned a value) and false otherwise */
  public boolean isSetJobIdSet() {
    return this.jobIdSet != null;
  }

  public void setJobIdSetIsSet(boolean value) {
    if (!value) {
      this.jobIdSet = null;
    }
  }

  /**
   * 
   * @see xueqiao.mailbox.thriftdata.mb.MSendingChannel
   */
  public xueqiao.mailbox.thriftdata.mb.MSendingChannel getChannel() {
    return this.channel;
  }

  /**
   * 
   * @see xueqiao.mailbox.thriftdata.mb.MSendingChannel
   */
  public QueryMBMessageJobOption setChannel(xueqiao.mailbox.thriftdata.mb.MSendingChannel channel) {
    this.channel = channel;
    return this;
  }

  public void unsetChannel() {
    this.channel = null;
  }

  /** Returns true if field channel is set (has been assigned a value) and false otherwise */
  public boolean isSetChannel() {
    return this.channel != null;
  }

  public void setChannelIsSet(boolean value) {
    if (!value) {
      this.channel = null;
    }
  }

  /**
   * 
   * @see xueqiao.mailbox.thriftdata.message.MType
   */
  public xueqiao.mailbox.thriftdata.message.MType getType() {
    return this.type;
  }

  /**
   * 
   * @see xueqiao.mailbox.thriftdata.message.MType
   */
  public QueryMBMessageJobOption setType(xueqiao.mailbox.thriftdata.message.MType type) {
    this.type = type;
    return this;
  }

  public void unsetType() {
    this.type = null;
  }

  /** Returns true if field type is set (has been assigned a value) and false otherwise */
  public boolean isSetType() {
    return this.type != null;
  }

  public void setTypeIsSet(boolean value) {
    if (!value) {
      this.type = null;
    }
  }

  /**
   * 
   * @see xueqiao.mailbox.thriftdata.message.MLevel
   */
  public xueqiao.mailbox.thriftdata.message.MLevel getLevel() {
    return this.level;
  }

  /**
   * 
   * @see xueqiao.mailbox.thriftdata.message.MLevel
   */
  public QueryMBMessageJobOption setLevel(xueqiao.mailbox.thriftdata.message.MLevel level) {
    this.level = level;
    return this;
  }

  public void unsetLevel() {
    this.level = null;
  }

  /** Returns true if field level is set (has been assigned a value) and false otherwise */
  public boolean isSetLevel() {
    return this.level != null;
  }

  public void setLevelIsSet(boolean value) {
    if (!value) {
      this.level = null;
    }
  }

  public long getQueryStartCreateTimestamp() {
    return this.queryStartCreateTimestamp;
  }

  public QueryMBMessageJobOption setQueryStartCreateTimestamp(long queryStartCreateTimestamp) {
    this.queryStartCreateTimestamp = queryStartCreateTimestamp;
    setQueryStartCreateTimestampIsSet(true);
    return this;
  }

  public void unsetQueryStartCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __QUERYSTARTCREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field queryStartCreateTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetQueryStartCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __QUERYSTARTCREATETIMESTAMP_ISSET_ID);
  }

  public void setQueryStartCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __QUERYSTARTCREATETIMESTAMP_ISSET_ID, value);
  }

  public long getQueryEndCreateTimestamp() {
    return this.queryEndCreateTimestamp;
  }

  public QueryMBMessageJobOption setQueryEndCreateTimestamp(long queryEndCreateTimestamp) {
    this.queryEndCreateTimestamp = queryEndCreateTimestamp;
    setQueryEndCreateTimestampIsSet(true);
    return this;
  }

  public void unsetQueryEndCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __QUERYENDCREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field queryEndCreateTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetQueryEndCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __QUERYENDCREATETIMESTAMP_ISSET_ID);
  }

  public void setQueryEndCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __QUERYENDCREATETIMESTAMP_ISSET_ID, value);
  }

  public int getStatusSetSize() {
    return (this.statusSet == null) ? 0 : this.statusSet.size();
  }

  public java.util.Iterator<xueqiao.mailbox.thriftdata.mb.MJStatus> getStatusSetIterator() {
    return (this.statusSet == null) ? null : this.statusSet.iterator();
  }

  public void addToStatusSet(xueqiao.mailbox.thriftdata.mb.MJStatus elem) {
    if (this.statusSet == null) {
      this.statusSet = new HashSet<xueqiao.mailbox.thriftdata.mb.MJStatus>();
    }
    this.statusSet.add(elem);
  }

  public Set<xueqiao.mailbox.thriftdata.mb.MJStatus> getStatusSet() {
    return this.statusSet;
  }

  public QueryMBMessageJobOption setStatusSet(Set<xueqiao.mailbox.thriftdata.mb.MJStatus> statusSet) {
    this.statusSet = statusSet;
    return this;
  }

  public void unsetStatusSet() {
    this.statusSet = null;
  }

  /** Returns true if field statusSet is set (has been assigned a value) and false otherwise */
  public boolean isSetStatusSet() {
    return this.statusSet != null;
  }

  public void setStatusSetIsSet(boolean value) {
    if (!value) {
      this.statusSet = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case JOB_ID_SET:
      if (value == null) {
        unsetJobIdSet();
      } else {
        setJobIdSet((Set<Long>)value);
      }
      break;

    case CHANNEL:
      if (value == null) {
        unsetChannel();
      } else {
        setChannel((xueqiao.mailbox.thriftdata.mb.MSendingChannel)value);
      }
      break;

    case TYPE:
      if (value == null) {
        unsetType();
      } else {
        setType((xueqiao.mailbox.thriftdata.message.MType)value);
      }
      break;

    case LEVEL:
      if (value == null) {
        unsetLevel();
      } else {
        setLevel((xueqiao.mailbox.thriftdata.message.MLevel)value);
      }
      break;

    case QUERY_START_CREATE_TIMESTAMP:
      if (value == null) {
        unsetQueryStartCreateTimestamp();
      } else {
        setQueryStartCreateTimestamp((Long)value);
      }
      break;

    case QUERY_END_CREATE_TIMESTAMP:
      if (value == null) {
        unsetQueryEndCreateTimestamp();
      } else {
        setQueryEndCreateTimestamp((Long)value);
      }
      break;

    case STATUS_SET:
      if (value == null) {
        unsetStatusSet();
      } else {
        setStatusSet((Set<xueqiao.mailbox.thriftdata.mb.MJStatus>)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case JOB_ID_SET:
      return getJobIdSet();

    case CHANNEL:
      return getChannel();

    case TYPE:
      return getType();

    case LEVEL:
      return getLevel();

    case QUERY_START_CREATE_TIMESTAMP:
      return Long.valueOf(getQueryStartCreateTimestamp());

    case QUERY_END_CREATE_TIMESTAMP:
      return Long.valueOf(getQueryEndCreateTimestamp());

    case STATUS_SET:
      return getStatusSet();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case JOB_ID_SET:
      return isSetJobIdSet();
    case CHANNEL:
      return isSetChannel();
    case TYPE:
      return isSetType();
    case LEVEL:
      return isSetLevel();
    case QUERY_START_CREATE_TIMESTAMP:
      return isSetQueryStartCreateTimestamp();
    case QUERY_END_CREATE_TIMESTAMP:
      return isSetQueryEndCreateTimestamp();
    case STATUS_SET:
      return isSetStatusSet();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QueryMBMessageJobOption)
      return this.equals((QueryMBMessageJobOption)that);
    return false;
  }

  public boolean equals(QueryMBMessageJobOption that) {
    if (that == null)
      return false;

    boolean this_present_jobIdSet = true && this.isSetJobIdSet();
    boolean that_present_jobIdSet = true && that.isSetJobIdSet();
    if (this_present_jobIdSet || that_present_jobIdSet) {
      if (!(this_present_jobIdSet && that_present_jobIdSet))
        return false;
      if (!this.jobIdSet.equals(that.jobIdSet))
        return false;
    }

    boolean this_present_channel = true && this.isSetChannel();
    boolean that_present_channel = true && that.isSetChannel();
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (!this.channel.equals(that.channel))
        return false;
    }

    boolean this_present_type = true && this.isSetType();
    boolean that_present_type = true && that.isSetType();
    if (this_present_type || that_present_type) {
      if (!(this_present_type && that_present_type))
        return false;
      if (!this.type.equals(that.type))
        return false;
    }

    boolean this_present_level = true && this.isSetLevel();
    boolean that_present_level = true && that.isSetLevel();
    if (this_present_level || that_present_level) {
      if (!(this_present_level && that_present_level))
        return false;
      if (!this.level.equals(that.level))
        return false;
    }

    boolean this_present_queryStartCreateTimestamp = true && this.isSetQueryStartCreateTimestamp();
    boolean that_present_queryStartCreateTimestamp = true && that.isSetQueryStartCreateTimestamp();
    if (this_present_queryStartCreateTimestamp || that_present_queryStartCreateTimestamp) {
      if (!(this_present_queryStartCreateTimestamp && that_present_queryStartCreateTimestamp))
        return false;
      if (this.queryStartCreateTimestamp != that.queryStartCreateTimestamp)
        return false;
    }

    boolean this_present_queryEndCreateTimestamp = true && this.isSetQueryEndCreateTimestamp();
    boolean that_present_queryEndCreateTimestamp = true && that.isSetQueryEndCreateTimestamp();
    if (this_present_queryEndCreateTimestamp || that_present_queryEndCreateTimestamp) {
      if (!(this_present_queryEndCreateTimestamp && that_present_queryEndCreateTimestamp))
        return false;
      if (this.queryEndCreateTimestamp != that.queryEndCreateTimestamp)
        return false;
    }

    boolean this_present_statusSet = true && this.isSetStatusSet();
    boolean that_present_statusSet = true && that.isSetStatusSet();
    if (this_present_statusSet || that_present_statusSet) {
      if (!(this_present_statusSet && that_present_statusSet))
        return false;
      if (!this.statusSet.equals(that.statusSet))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(QueryMBMessageJobOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetJobIdSet()).compareTo(other.isSetJobIdSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJobIdSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.jobIdSet, other.jobIdSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannel()).compareTo(other.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channel, other.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetType()).compareTo(other.isSetType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.type, other.type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLevel()).compareTo(other.isSetLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level, other.level);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQueryStartCreateTimestamp()).compareTo(other.isSetQueryStartCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueryStartCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryStartCreateTimestamp, other.queryStartCreateTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetQueryEndCreateTimestamp()).compareTo(other.isSetQueryEndCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueryEndCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queryEndCreateTimestamp, other.queryEndCreateTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatusSet()).compareTo(other.isSetStatusSet());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatusSet()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.statusSet, other.statusSet);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QueryMBMessageJobOption(");
    boolean first = true;

    if (isSetJobIdSet()) {
      sb.append("jobIdSet:");
      if (this.jobIdSet == null) {
        sb.append("null");
      } else {
        sb.append(this.jobIdSet);
      }
      first = false;
    }
    if (isSetChannel()) {
      if (!first) sb.append(", ");
      sb.append("channel:");
      if (this.channel == null) {
        sb.append("null");
      } else {
        sb.append(this.channel);
      }
      first = false;
    }
    if (isSetType()) {
      if (!first) sb.append(", ");
      sb.append("type:");
      if (this.type == null) {
        sb.append("null");
      } else {
        sb.append(this.type);
      }
      first = false;
    }
    if (isSetLevel()) {
      if (!first) sb.append(", ");
      sb.append("level:");
      if (this.level == null) {
        sb.append("null");
      } else {
        sb.append(this.level);
      }
      first = false;
    }
    if (isSetQueryStartCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("queryStartCreateTimestamp:");
      sb.append(this.queryStartCreateTimestamp);
      first = false;
    }
    if (isSetQueryEndCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("queryEndCreateTimestamp:");
      sb.append(this.queryEndCreateTimestamp);
      first = false;
    }
    if (isSetStatusSet()) {
      if (!first) sb.append(", ");
      sb.append("statusSet:");
      if (this.statusSet == null) {
        sb.append("null");
      } else {
        sb.append(this.statusSet);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QueryMBMessageJobOptionStandardSchemeFactory implements SchemeFactory {
    public QueryMBMessageJobOptionStandardScheme getScheme() {
      return new QueryMBMessageJobOptionStandardScheme();
    }
  }

  private static class QueryMBMessageJobOptionStandardScheme extends StandardScheme<QueryMBMessageJobOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QueryMBMessageJobOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // JOB_ID_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set112 = iprot.readSetBegin();
                struct.jobIdSet = new HashSet<Long>(2*_set112.size);
                for (int _i113 = 0; _i113 < _set112.size; ++_i113)
                {
                  long _elem114;
                  _elem114 = iprot.readI64();
                  struct.jobIdSet.add(_elem114);
                }
                iprot.readSetEnd();
              }
              struct.setJobIdSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.channel = xueqiao.mailbox.thriftdata.mb.MSendingChannel.findByValue(iprot.readI32());
              struct.setChannelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.type = xueqiao.mailbox.thriftdata.message.MType.findByValue(iprot.readI32());
              struct.setTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.level = xueqiao.mailbox.thriftdata.message.MLevel.findByValue(iprot.readI32());
              struct.setLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // QUERY_START_CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.queryStartCreateTimestamp = iprot.readI64();
              struct.setQueryStartCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // QUERY_END_CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.queryEndCreateTimestamp = iprot.readI64();
              struct.setQueryEndCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STATUS_SET
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set115 = iprot.readSetBegin();
                struct.statusSet = new HashSet<xueqiao.mailbox.thriftdata.mb.MJStatus>(2*_set115.size);
                for (int _i116 = 0; _i116 < _set115.size; ++_i116)
                {
                  xueqiao.mailbox.thriftdata.mb.MJStatus _elem117;
                  _elem117 = xueqiao.mailbox.thriftdata.mb.MJStatus.findByValue(iprot.readI32());
                  struct.statusSet.add(_elem117);
                }
                iprot.readSetEnd();
              }
              struct.setStatusSetIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QueryMBMessageJobOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.jobIdSet != null) {
        if (struct.isSetJobIdSet()) {
          oprot.writeFieldBegin(JOB_ID_SET_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, struct.jobIdSet.size()));
            for (long _iter118 : struct.jobIdSet)
            {
              oprot.writeI64(_iter118);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.channel != null) {
        if (struct.isSetChannel()) {
          oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
          oprot.writeI32(struct.channel.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.type != null) {
        if (struct.isSetType()) {
          oprot.writeFieldBegin(TYPE_FIELD_DESC);
          oprot.writeI32(struct.type.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.level != null) {
        if (struct.isSetLevel()) {
          oprot.writeFieldBegin(LEVEL_FIELD_DESC);
          oprot.writeI32(struct.level.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetQueryStartCreateTimestamp()) {
        oprot.writeFieldBegin(QUERY_START_CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.queryStartCreateTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetQueryEndCreateTimestamp()) {
        oprot.writeFieldBegin(QUERY_END_CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.queryEndCreateTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.statusSet != null) {
        if (struct.isSetStatusSet()) {
          oprot.writeFieldBegin(STATUS_SET_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.statusSet.size()));
            for (xueqiao.mailbox.thriftdata.mb.MJStatus _iter119 : struct.statusSet)
            {
              oprot.writeI32(_iter119.getValue());
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QueryMBMessageJobOptionTupleSchemeFactory implements SchemeFactory {
    public QueryMBMessageJobOptionTupleScheme getScheme() {
      return new QueryMBMessageJobOptionTupleScheme();
    }
  }

  private static class QueryMBMessageJobOptionTupleScheme extends TupleScheme<QueryMBMessageJobOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QueryMBMessageJobOption struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetJobIdSet()) {
        optionals.set(0);
      }
      if (struct.isSetChannel()) {
        optionals.set(1);
      }
      if (struct.isSetType()) {
        optionals.set(2);
      }
      if (struct.isSetLevel()) {
        optionals.set(3);
      }
      if (struct.isSetQueryStartCreateTimestamp()) {
        optionals.set(4);
      }
      if (struct.isSetQueryEndCreateTimestamp()) {
        optionals.set(5);
      }
      if (struct.isSetStatusSet()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetJobIdSet()) {
        {
          oprot.writeI32(struct.jobIdSet.size());
          for (long _iter120 : struct.jobIdSet)
          {
            oprot.writeI64(_iter120);
          }
        }
      }
      if (struct.isSetChannel()) {
        oprot.writeI32(struct.channel.getValue());
      }
      if (struct.isSetType()) {
        oprot.writeI32(struct.type.getValue());
      }
      if (struct.isSetLevel()) {
        oprot.writeI32(struct.level.getValue());
      }
      if (struct.isSetQueryStartCreateTimestamp()) {
        oprot.writeI64(struct.queryStartCreateTimestamp);
      }
      if (struct.isSetQueryEndCreateTimestamp()) {
        oprot.writeI64(struct.queryEndCreateTimestamp);
      }
      if (struct.isSetStatusSet()) {
        {
          oprot.writeI32(struct.statusSet.size());
          for (xueqiao.mailbox.thriftdata.mb.MJStatus _iter121 : struct.statusSet)
          {
            oprot.writeI32(_iter121.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QueryMBMessageJobOption struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TSet _set122 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I64, iprot.readI32());
          struct.jobIdSet = new HashSet<Long>(2*_set122.size);
          for (int _i123 = 0; _i123 < _set122.size; ++_i123)
          {
            long _elem124;
            _elem124 = iprot.readI64();
            struct.jobIdSet.add(_elem124);
          }
        }
        struct.setJobIdSetIsSet(true);
      }
      if (incoming.get(1)) {
        struct.channel = xueqiao.mailbox.thriftdata.mb.MSendingChannel.findByValue(iprot.readI32());
        struct.setChannelIsSet(true);
      }
      if (incoming.get(2)) {
        struct.type = xueqiao.mailbox.thriftdata.message.MType.findByValue(iprot.readI32());
        struct.setTypeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.level = xueqiao.mailbox.thriftdata.message.MLevel.findByValue(iprot.readI32());
        struct.setLevelIsSet(true);
      }
      if (incoming.get(4)) {
        struct.queryStartCreateTimestamp = iprot.readI64();
        struct.setQueryStartCreateTimestampIsSet(true);
      }
      if (incoming.get(5)) {
        struct.queryEndCreateTimestamp = iprot.readI64();
        struct.setQueryEndCreateTimestampIsSet(true);
      }
      if (incoming.get(6)) {
        {
          org.apache.thrift.protocol.TSet _set125 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.statusSet = new HashSet<xueqiao.mailbox.thriftdata.mb.MJStatus>(2*_set125.size);
          for (int _i126 = 0; _i126 < _set125.size; ++_i126)
          {
            xueqiao.mailbox.thriftdata.mb.MJStatus _elem127;
            _elem127 = xueqiao.mailbox.thriftdata.mb.MJStatus.findByValue(iprot.readI32());
            struct.statusSet.add(_elem127);
          }
        }
        struct.setStatusSetIsSet(true);
      }
    }
  }

}

