//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

QuotationAdminWebApi_reqCommodityActiveConfig_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
QuotationAdminWebApi_reqCommodityActiveConfig_args.prototype = {};
QuotationAdminWebApi_reqCommodityActiveConfig_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new ReqCommodityActiveConfigOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityActiveConfig_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityActiveConfig_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityActiveConfig_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqCommodityActiveConfig_result.prototype = {};
QuotationAdminWebApi_reqCommodityActiveConfig_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommodityActiveConfigPage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityActiveConfig_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityActiveConfig_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityActiveConfig_args = function(args) {
  this.platformArgs = null;
  this.activeConfig = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.activeConfig !== undefined) {
      this.activeConfig = args.activeConfig;
    }
  }
};
QuotationAdminWebApi_updateCommodityActiveConfig_args.prototype = {};
QuotationAdminWebApi_updateCommodityActiveConfig_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.activeConfig = new CommodityActiveConfig();
        this.activeConfig.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityActiveConfig_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_updateCommodityActiveConfig_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.activeConfig !== null && this.activeConfig !== undefined) {
    output.writeFieldBegin('activeConfig', Thrift.Type.STRUCT, 2);
    this.activeConfig.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityActiveConfig_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_updateCommodityActiveConfig_result.prototype = {};
QuotationAdminWebApi_updateCommodityActiveConfig_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommodityActiveConfig();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityActiveConfig_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_updateCommodityActiveConfig_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityActiveConfig_args = function(args) {
  this.platformArgs = null;
  this.activeConfig = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.activeConfig !== undefined) {
      this.activeConfig = args.activeConfig;
    }
  }
};
QuotationAdminWebApi_addCommodityActiveConfig_args.prototype = {};
QuotationAdminWebApi_addCommodityActiveConfig_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.activeConfig = new CommodityActiveConfig();
        this.activeConfig.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityActiveConfig_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_addCommodityActiveConfig_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.activeConfig !== null && this.activeConfig !== undefined) {
    output.writeFieldBegin('activeConfig', Thrift.Type.STRUCT, 2);
    this.activeConfig.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityActiveConfig_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_addCommodityActiveConfig_result.prototype = {};
QuotationAdminWebApi_addCommodityActiveConfig_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommodityActiveConfig();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityActiveConfig_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_addCommodityActiveConfig_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityActiveConfig_args = function(args) {
  this.platformArgs = null;
  this.sledCommodityId = null;
  this.activeType = null;
  this.fixedCode = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.sledCommodityId !== undefined) {
      this.sledCommodityId = args.sledCommodityId;
    }
    if (args.activeType !== undefined) {
      this.activeType = args.activeType;
    }
    if (args.fixedCode !== undefined) {
      this.fixedCode = args.fixedCode;
    }
  }
};
QuotationAdminWebApi_deleteCommodityActiveConfig_args.prototype = {};
QuotationAdminWebApi_deleteCommodityActiveConfig_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.sledCommodityId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.activeType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.STRING) {
        this.fixedCode = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityActiveConfig_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteCommodityActiveConfig_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.sledCommodityId !== null && this.sledCommodityId !== undefined) {
    output.writeFieldBegin('sledCommodityId', Thrift.Type.I32, 2);
    output.writeI32(this.sledCommodityId);
    output.writeFieldEnd();
  }
  if (this.activeType !== null && this.activeType !== undefined) {
    output.writeFieldBegin('activeType', Thrift.Type.I32, 3);
    output.writeI32(this.activeType);
    output.writeFieldEnd();
  }
  if (this.fixedCode !== null && this.fixedCode !== undefined) {
    output.writeFieldBegin('fixedCode', Thrift.Type.STRING, 4);
    output.writeString(this.fixedCode);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityActiveConfig_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_deleteCommodityActiveConfig_result.prototype = {};
QuotationAdminWebApi_deleteCommodityActiveConfig_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityActiveConfig_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteCommodityActiveConfig_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityRegister_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
QuotationAdminWebApi_reqCommodityRegister_args.prototype = {};
QuotationAdminWebApi_reqCommodityRegister_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new ReqCommodityRegisterOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityRegister_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityRegister_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityRegister_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqCommodityRegister_result.prototype = {};
QuotationAdminWebApi_reqCommodityRegister_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommodityRegisterPage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityRegister_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityRegister_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityRegister_args = function(args) {
  this.platformArgs = null;
  this.commodityRegister = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.commodityRegister !== undefined) {
      this.commodityRegister = args.commodityRegister;
    }
  }
};
QuotationAdminWebApi_updateCommodityRegister_args.prototype = {};
QuotationAdminWebApi_updateCommodityRegister_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.commodityRegister = new CommodityRegister();
        this.commodityRegister.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityRegister_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_updateCommodityRegister_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.commodityRegister !== null && this.commodityRegister !== undefined) {
    output.writeFieldBegin('commodityRegister', Thrift.Type.STRUCT, 2);
    this.commodityRegister.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityRegister_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_updateCommodityRegister_result.prototype = {};
QuotationAdminWebApi_updateCommodityRegister_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommodityRegister();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_updateCommodityRegister_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_updateCommodityRegister_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityRegister_args = function(args) {
  this.platformArgs = null;
  this.commodityRegister = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.commodityRegister !== undefined) {
      this.commodityRegister = args.commodityRegister;
    }
  }
};
QuotationAdminWebApi_addCommodityRegister_args.prototype = {};
QuotationAdminWebApi_addCommodityRegister_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.commodityRegister = new CommodityRegister();
        this.commodityRegister.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityRegister_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_addCommodityRegister_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.commodityRegister !== null && this.commodityRegister !== undefined) {
    output.writeFieldBegin('commodityRegister', Thrift.Type.STRUCT, 2);
    this.commodityRegister.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityRegister_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_addCommodityRegister_result.prototype = {};
QuotationAdminWebApi_addCommodityRegister_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new CommodityRegister();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_addCommodityRegister_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_addCommodityRegister_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityRegister_args = function(args) {
  this.platformArgs = null;
  this.sledCommodityId = null;
  this.platformEnv = null;
  this.activeType = null;
  this.fixedCode = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.sledCommodityId !== undefined) {
      this.sledCommodityId = args.sledCommodityId;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
    if (args.activeType !== undefined) {
      this.activeType = args.activeType;
    }
    if (args.fixedCode !== undefined) {
      this.fixedCode = args.fixedCode;
    }
  }
};
QuotationAdminWebApi_deleteCommodityRegister_args.prototype = {};
QuotationAdminWebApi_deleteCommodityRegister_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.sledCommodityId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.activeType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.STRING) {
        this.fixedCode = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityRegister_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteCommodityRegister_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.sledCommodityId !== null && this.sledCommodityId !== undefined) {
    output.writeFieldBegin('sledCommodityId', Thrift.Type.I32, 2);
    output.writeI32(this.sledCommodityId);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 3);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  if (this.activeType !== null && this.activeType !== undefined) {
    output.writeFieldBegin('activeType', Thrift.Type.I32, 4);
    output.writeI32(this.activeType);
    output.writeFieldEnd();
  }
  if (this.fixedCode !== null && this.fixedCode !== undefined) {
    output.writeFieldBegin('fixedCode', Thrift.Type.STRING, 5);
    output.writeString(this.fixedCode);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityRegister_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_deleteCommodityRegister_result.prototype = {};
QuotationAdminWebApi_deleteCommodityRegister_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteCommodityRegister_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteCommodityRegister_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_setCommodityRegisterOrderIndex_args = function(args) {
  this.platformArgs = null;
  this.sledCommodityId = null;
  this.platformEnv = null;
  this.orderIndex = null;
  this.activeType = null;
  this.fixedCode = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.sledCommodityId !== undefined) {
      this.sledCommodityId = args.sledCommodityId;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
    if (args.orderIndex !== undefined) {
      this.orderIndex = args.orderIndex;
    }
    if (args.activeType !== undefined) {
      this.activeType = args.activeType;
    }
    if (args.fixedCode !== undefined) {
      this.fixedCode = args.fixedCode;
    }
  }
};
QuotationAdminWebApi_setCommodityRegisterOrderIndex_args.prototype = {};
QuotationAdminWebApi_setCommodityRegisterOrderIndex_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.sledCommodityId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.orderIndex = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 5:
      if (ftype == Thrift.Type.I32) {
        this.activeType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 6:
      if (ftype == Thrift.Type.STRING) {
        this.fixedCode = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_setCommodityRegisterOrderIndex_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_setCommodityRegisterOrderIndex_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.sledCommodityId !== null && this.sledCommodityId !== undefined) {
    output.writeFieldBegin('sledCommodityId', Thrift.Type.I32, 2);
    output.writeI32(this.sledCommodityId);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 3);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  if (this.orderIndex !== null && this.orderIndex !== undefined) {
    output.writeFieldBegin('orderIndex', Thrift.Type.I32, 4);
    output.writeI32(this.orderIndex);
    output.writeFieldEnd();
  }
  if (this.activeType !== null && this.activeType !== undefined) {
    output.writeFieldBegin('activeType', Thrift.Type.I32, 5);
    output.writeI32(this.activeType);
    output.writeFieldEnd();
  }
  if (this.fixedCode !== null && this.fixedCode !== undefined) {
    output.writeFieldBegin('fixedCode', Thrift.Type.STRING, 6);
    output.writeString(this.fixedCode);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_setCommodityRegisterOrderIndex_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_setCommodityRegisterOrderIndex_result.prototype = {};
QuotationAdminWebApi_setCommodityRegisterOrderIndex_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_setCommodityRegisterOrderIndex_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_setCommodityRegisterOrderIndex_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqQuotationAccountInfo_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
QuotationAdminWebApi_reqQuotationAccountInfo_args.prototype = {};
QuotationAdminWebApi_reqQuotationAccountInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new ReqQuotationAccountInfoOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqQuotationAccountInfo_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqQuotationAccountInfo_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqQuotationAccountInfo_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqQuotationAccountInfo_result.prototype = {};
QuotationAdminWebApi_reqQuotationAccountInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new QuotationAccountInfoPage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqQuotationAccountInfo_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqQuotationAccountInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_updateQuotationAccountInfo_args = function(args) {
  this.platformArgs = null;
  this.quotationAccountInfo = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.quotationAccountInfo !== undefined) {
      this.quotationAccountInfo = args.quotationAccountInfo;
    }
  }
};
QuotationAdminWebApi_updateQuotationAccountInfo_args.prototype = {};
QuotationAdminWebApi_updateQuotationAccountInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.quotationAccountInfo = new QuotationAccountInfo();
        this.quotationAccountInfo.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_updateQuotationAccountInfo_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_updateQuotationAccountInfo_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.quotationAccountInfo !== null && this.quotationAccountInfo !== undefined) {
    output.writeFieldBegin('quotationAccountInfo', Thrift.Type.STRUCT, 2);
    this.quotationAccountInfo.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_updateQuotationAccountInfo_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_updateQuotationAccountInfo_result.prototype = {};
QuotationAdminWebApi_updateQuotationAccountInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new QuotationAccountInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_updateQuotationAccountInfo_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_updateQuotationAccountInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_addQuotationAccountInfo_args = function(args) {
  this.platformArgs = null;
  this.quotationAccountInfo = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.quotationAccountInfo !== undefined) {
      this.quotationAccountInfo = args.quotationAccountInfo;
    }
  }
};
QuotationAdminWebApi_addQuotationAccountInfo_args.prototype = {};
QuotationAdminWebApi_addQuotationAccountInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.quotationAccountInfo = new QuotationAccountInfo();
        this.quotationAccountInfo.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_addQuotationAccountInfo_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_addQuotationAccountInfo_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.quotationAccountInfo !== null && this.quotationAccountInfo !== undefined) {
    output.writeFieldBegin('quotationAccountInfo', Thrift.Type.STRUCT, 2);
    this.quotationAccountInfo.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_addQuotationAccountInfo_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_addQuotationAccountInfo_result.prototype = {};
QuotationAdminWebApi_addQuotationAccountInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new QuotationAccountInfo();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_addQuotationAccountInfo_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_addQuotationAccountInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteQuotationAccount_args = function(args) {
  this.platformArgs = null;
  this.accountId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
  }
};
QuotationAdminWebApi_deleteQuotationAccount_args.prototype = {};
QuotationAdminWebApi_deleteQuotationAccount_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.accountId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteQuotationAccount_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteQuotationAccount_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.I64, 2);
    output.writeI64(this.accountId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteQuotationAccount_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_deleteQuotationAccount_result.prototype = {};
QuotationAdminWebApi_deleteQuotationAccount_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteQuotationAccount_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteQuotationAccount_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqExchangeRegisterAbility_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
  }
};
QuotationAdminWebApi_reqExchangeRegisterAbility_args.prototype = {};
QuotationAdminWebApi_reqExchangeRegisterAbility_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new ReqAccountRegisterAbilityOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqExchangeRegisterAbility_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqExchangeRegisterAbility_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqExchangeRegisterAbility_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqExchangeRegisterAbility_result.prototype = {};
QuotationAdminWebApi_reqExchangeRegisterAbility_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size106 = 0;
        var _rtmp3110;
        this.success = [];
        var _etype109 = 0;
        _rtmp3110 = input.readListBegin();
        _etype109 = _rtmp3110.etype;
        _size106 = _rtmp3110.size;
        for (var _i111 = 0; _i111 < _size106; ++_i111)
        {
          var elem112 = null;
          elem112 = new ExchangeRegisterAbility();
          elem112.read(input);
          this.success.push(elem112);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqExchangeRegisterAbility_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqExchangeRegisterAbility_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter113 in this.success)
    {
      if (this.success.hasOwnProperty(iter113))
      {
        iter113 = this.success[iter113];
        iter113.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_batAddAccountRegisterAbility_args = function(args) {
  this.platformArgs = null;
  this.abilities = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.abilities !== undefined) {
      this.abilities = args.abilities;
    }
  }
};
QuotationAdminWebApi_batAddAccountRegisterAbility_args.prototype = {};
QuotationAdminWebApi_batAddAccountRegisterAbility_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.LIST) {
        var _size114 = 0;
        var _rtmp3118;
        this.abilities = [];
        var _etype117 = 0;
        _rtmp3118 = input.readListBegin();
        _etype117 = _rtmp3118.etype;
        _size114 = _rtmp3118.size;
        for (var _i119 = 0; _i119 < _size114; ++_i119)
        {
          var elem120 = null;
          elem120 = new AccountRegisterAbility();
          elem120.read(input);
          this.abilities.push(elem120);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_batAddAccountRegisterAbility_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_batAddAccountRegisterAbility_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.abilities !== null && this.abilities !== undefined) {
    output.writeFieldBegin('abilities', Thrift.Type.LIST, 2);
    output.writeListBegin(Thrift.Type.STRUCT, this.abilities.length);
    for (var iter121 in this.abilities)
    {
      if (this.abilities.hasOwnProperty(iter121))
      {
        iter121 = this.abilities[iter121];
        iter121.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_batAddAccountRegisterAbility_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_batAddAccountRegisterAbility_result.prototype = {};
QuotationAdminWebApi_batAddAccountRegisterAbility_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_batAddAccountRegisterAbility_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_batAddAccountRegisterAbility_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbility_args = function(args) {
  this.platformArgs = null;
  this.abilityId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.abilityId !== undefined) {
      this.abilityId = args.abilityId;
    }
  }
};
QuotationAdminWebApi_deleteAccountRegisterAbility_args.prototype = {};
QuotationAdminWebApi_deleteAccountRegisterAbility_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.abilityId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbility_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteAccountRegisterAbility_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.abilityId !== null && this.abilityId !== undefined) {
    output.writeFieldBegin('abilityId', Thrift.Type.I64, 2);
    output.writeI64(this.abilityId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbility_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_deleteAccountRegisterAbility_result.prototype = {};
QuotationAdminWebApi_deleteAccountRegisterAbility_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbility_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteAccountRegisterAbility_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_args = function(args) {
  this.platformArgs = null;
  this.accountId = null;
  this.exchangeId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.accountId !== undefined) {
      this.accountId = args.accountId;
    }
    if (args.exchangeId !== undefined) {
      this.exchangeId = args.exchangeId;
    }
  }
};
QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_args.prototype = {};
QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.accountId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.exchangeId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.accountId !== null && this.accountId !== undefined) {
    output.writeFieldBegin('accountId', Thrift.Type.I64, 2);
    output.writeI64(this.accountId);
    output.writeFieldEnd();
  }
  if (this.exchangeId !== null && this.exchangeId !== undefined) {
    output.writeFieldBegin('exchangeId', Thrift.Type.I32, 3);
    output.writeI32(this.exchangeId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_result.prototype = {};
QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqSubscribedContract_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
QuotationAdminWebApi_reqSubscribedContract_args.prototype = {};
QuotationAdminWebApi_reqSubscribedContract_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new ReqSubscribedContractOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqSubscribedContract_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqSubscribedContract_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqSubscribedContract_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqSubscribedContract_result.prototype = {};
QuotationAdminWebApi_reqSubscribedContract_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new SubscribedContractPage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqSubscribedContract_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqSubscribedContract_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_replanSubscribe_args = function(args) {
  this.platformArgs = null;
  this.platformEnv = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
  }
};
QuotationAdminWebApi_replanSubscribe_args.prototype = {};
QuotationAdminWebApi_replanSubscribe_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_replanSubscribe_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_replanSubscribe_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 2);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_replanSubscribe_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_replanSubscribe_result.prototype = {};
QuotationAdminWebApi_replanSubscribe_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_replanSubscribe_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_replanSubscribe_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqPreviewSubscribedContract_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
QuotationAdminWebApi_reqPreviewSubscribedContract_args.prototype = {};
QuotationAdminWebApi_reqPreviewSubscribedContract_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new ReqRePlanSubscribedInfoPreviewOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqPreviewSubscribedContract_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqPreviewSubscribedContract_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqPreviewSubscribedContract_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqPreviewSubscribedContract_result.prototype = {};
QuotationAdminWebApi_reqPreviewSubscribedContract_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new RePlanSubscribedInfoPreviewPage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqPreviewSubscribedContract_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqPreviewSubscribedContract_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_submitSubscribeInfo_args = function(args) {
  this.platformArgs = null;
  this.platformEnv = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
  }
};
QuotationAdminWebApi_submitSubscribeInfo_args.prototype = {};
QuotationAdminWebApi_submitSubscribeInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_submitSubscribeInfo_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_submitSubscribeInfo_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 2);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_submitSubscribeInfo_result = function(args) {
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_submitSubscribeInfo_result.prototype = {};
QuotationAdminWebApi_submitSubscribeInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_submitSubscribeInfo_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_submitSubscribeInfo_result');
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqPlanningSubscribedInfo_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
  }
};
QuotationAdminWebApi_reqPlanningSubscribedInfo_args.prototype = {};
QuotationAdminWebApi_reqPlanningSubscribedInfo_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new ReqPlanningSubscribedInfoOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqPlanningSubscribedInfo_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqPlanningSubscribedInfo_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqPlanningSubscribedInfo_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqPlanningSubscribedInfo_result.prototype = {};
QuotationAdminWebApi_reqPlanningSubscribedInfo_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size122 = 0;
        var _rtmp3126;
        this.success = [];
        var _etype125 = 0;
        _rtmp3126 = input.readListBegin();
        _etype125 = _rtmp3126.etype;
        _size122 = _rtmp3126.size;
        for (var _i127 = 0; _i127 < _size122; ++_i127)
        {
          var elem128 = null;
          elem128 = new PlanningSubscribedInfo();
          elem128.read(input);
          this.success.push(elem128);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqPlanningSubscribedInfo_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqPlanningSubscribedInfo_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter129 in this.success)
    {
      if (this.success.hasOwnProperty(iter129))
      {
        iter129 = this.success[iter129];
        iter129.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTree_args = function(args) {
  this.platformArgs = null;
  this.platformEnv = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
  }
};
QuotationAdminWebApi_reqCommodityTree_args.prototype = {};
QuotationAdminWebApi_reqCommodityTree_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTree_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityTree_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 2);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTree_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqCommodityTree_result.prototype = {};
QuotationAdminWebApi_reqCommodityTree_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Tree();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTree_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityTree_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTypeTree_args = function(args) {
  this.platformArgs = null;
  this.platformEnv = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
  }
};
QuotationAdminWebApi_reqCommodityTypeTree_args.prototype = {};
QuotationAdminWebApi_reqCommodityTypeTree_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTypeTree_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityTypeTree_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 2);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTypeTree_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqCommodityTypeTree_result.prototype = {};
QuotationAdminWebApi_reqCommodityTypeTree_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Tree();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqCommodityTypeTree_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqCommodityTypeTree_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqContractTreeCommodityNodes_args = function(args) {
  this.platformArgs = null;
  this.sledExchangeId = null;
  this.commodityType = null;
  this.platformEnv = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.sledExchangeId !== undefined) {
      this.sledExchangeId = args.sledExchangeId;
    }
    if (args.commodityType !== undefined) {
      this.commodityType = args.commodityType;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
  }
};
QuotationAdminWebApi_reqContractTreeCommodityNodes_args.prototype = {};
QuotationAdminWebApi_reqContractTreeCommodityNodes_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.sledExchangeId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.commodityType = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 4:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqContractTreeCommodityNodes_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqContractTreeCommodityNodes_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.sledExchangeId !== null && this.sledExchangeId !== undefined) {
    output.writeFieldBegin('sledExchangeId', Thrift.Type.I32, 2);
    output.writeI32(this.sledExchangeId);
    output.writeFieldEnd();
  }
  if (this.commodityType !== null && this.commodityType !== undefined) {
    output.writeFieldBegin('commodityType', Thrift.Type.I32, 3);
    output.writeI32(this.commodityType);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 4);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqContractTreeCommodityNodes_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqContractTreeCommodityNodes_result.prototype = {};
QuotationAdminWebApi_reqContractTreeCommodityNodes_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size130 = 0;
        var _rtmp3134;
        this.success = [];
        var _etype133 = 0;
        _rtmp3134 = input.readListBegin();
        _etype133 = _rtmp3134.etype;
        _size130 = _rtmp3134.size;
        for (var _i135 = 0; _i135 < _size130; ++_i135)
        {
          var elem136 = null;
          elem136 = new ContractTreeNode();
          elem136.read(input);
          this.success.push(elem136);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqContractTreeCommodityNodes_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqContractTreeCommodityNodes_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter137 in this.success)
    {
      if (this.success.hasOwnProperty(iter137))
      {
        iter137 = this.success[iter137];
        iter137.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqContractNodes_args = function(args) {
  this.platformArgs = null;
  this.sledCommodityId = null;
  this.platformEnv = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.sledCommodityId !== undefined) {
      this.sledCommodityId = args.sledCommodityId;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
  }
};
QuotationAdminWebApi_reqContractNodes_args.prototype = {};
QuotationAdminWebApi_reqContractNodes_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.sledCommodityId = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqContractNodes_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqContractNodes_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.sledCommodityId !== null && this.sledCommodityId !== undefined) {
    output.writeFieldBegin('sledCommodityId', Thrift.Type.I32, 2);
    output.writeI32(this.sledCommodityId);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 3);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqContractNodes_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqContractNodes_result.prototype = {};
QuotationAdminWebApi_reqContractNodes_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size138 = 0;
        var _rtmp3142;
        this.success = [];
        var _etype141 = 0;
        _rtmp3142 = input.readListBegin();
        _etype141 = _rtmp3142.etype;
        _size138 = _rtmp3142.size;
        for (var _i143 = 0; _i143 < _size138; ++_i143)
        {
          var elem144 = null;
          elem144 = new ContractTreeNode();
          elem144.read(input);
          this.success.push(elem144);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqContractNodes_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqContractNodes_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter145 in this.success)
    {
      if (this.success.hasOwnProperty(iter145))
      {
        iter145 = this.success[iter145];
        iter145.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqBrokerTree_args = function(args) {
  this.platformArgs = null;
  this.platformEnv = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.platformEnv !== undefined) {
      this.platformEnv = args.platformEnv;
    }
  }
};
QuotationAdminWebApi_reqBrokerTree_args.prototype = {};
QuotationAdminWebApi_reqBrokerTree_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I32) {
        this.platformEnv = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqBrokerTree_args.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqBrokerTree_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.platformEnv !== null && this.platformEnv !== undefined) {
    output.writeFieldBegin('platformEnv', Thrift.Type.I32, 2);
    output.writeI32(this.platformEnv);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApi_reqBrokerTree_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
QuotationAdminWebApi_reqBrokerTree_result.prototype = {};
QuotationAdminWebApi_reqBrokerTree_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new Tree();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

QuotationAdminWebApi_reqBrokerTree_result.prototype.write = function(output) {
  output.writeStructBegin('QuotationAdminWebApi_reqBrokerTree_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

QuotationAdminWebApiClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
QuotationAdminWebApiClient.prototype = {};
QuotationAdminWebApiClient.prototype.reqCommodityActiveConfig = function(platformArgs, option, pageOption) {
  this.send_reqCommodityActiveConfig(platformArgs, option, pageOption);
  return this.recv_reqCommodityActiveConfig();
};

QuotationAdminWebApiClient.prototype.send_reqCommodityActiveConfig = function(platformArgs, option, pageOption) {
  this.output.writeMessageBegin('reqCommodityActiveConfig', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqCommodityActiveConfig_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqCommodityActiveConfig = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqCommodityActiveConfig_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCommodityActiveConfig failed: unknown result';
};
QuotationAdminWebApiClient.prototype.updateCommodityActiveConfig = function(platformArgs, activeConfig) {
  this.send_updateCommodityActiveConfig(platformArgs, activeConfig);
  return this.recv_updateCommodityActiveConfig();
};

QuotationAdminWebApiClient.prototype.send_updateCommodityActiveConfig = function(platformArgs, activeConfig) {
  this.output.writeMessageBegin('updateCommodityActiveConfig', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_updateCommodityActiveConfig_args();
  args.platformArgs = platformArgs;
  args.activeConfig = activeConfig;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_updateCommodityActiveConfig = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_updateCommodityActiveConfig_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'updateCommodityActiveConfig failed: unknown result';
};
QuotationAdminWebApiClient.prototype.addCommodityActiveConfig = function(platformArgs, activeConfig) {
  this.send_addCommodityActiveConfig(platformArgs, activeConfig);
  return this.recv_addCommodityActiveConfig();
};

QuotationAdminWebApiClient.prototype.send_addCommodityActiveConfig = function(platformArgs, activeConfig) {
  this.output.writeMessageBegin('addCommodityActiveConfig', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_addCommodityActiveConfig_args();
  args.platformArgs = platformArgs;
  args.activeConfig = activeConfig;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_addCommodityActiveConfig = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_addCommodityActiveConfig_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'addCommodityActiveConfig failed: unknown result';
};
QuotationAdminWebApiClient.prototype.deleteCommodityActiveConfig = function(platformArgs, sledCommodityId, activeType, fixedCode) {
  this.send_deleteCommodityActiveConfig(platformArgs, sledCommodityId, activeType, fixedCode);
  this.recv_deleteCommodityActiveConfig();
};

QuotationAdminWebApiClient.prototype.send_deleteCommodityActiveConfig = function(platformArgs, sledCommodityId, activeType, fixedCode) {
  this.output.writeMessageBegin('deleteCommodityActiveConfig', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_deleteCommodityActiveConfig_args();
  args.platformArgs = platformArgs;
  args.sledCommodityId = sledCommodityId;
  args.activeType = activeType;
  args.fixedCode = fixedCode;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_deleteCommodityActiveConfig = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_deleteCommodityActiveConfig_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.reqCommodityRegister = function(platformArgs, option, pageOption) {
  this.send_reqCommodityRegister(platformArgs, option, pageOption);
  return this.recv_reqCommodityRegister();
};

QuotationAdminWebApiClient.prototype.send_reqCommodityRegister = function(platformArgs, option, pageOption) {
  this.output.writeMessageBegin('reqCommodityRegister', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqCommodityRegister_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqCommodityRegister = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqCommodityRegister_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCommodityRegister failed: unknown result';
};
QuotationAdminWebApiClient.prototype.updateCommodityRegister = function(platformArgs, commodityRegister) {
  this.send_updateCommodityRegister(platformArgs, commodityRegister);
  return this.recv_updateCommodityRegister();
};

QuotationAdminWebApiClient.prototype.send_updateCommodityRegister = function(platformArgs, commodityRegister) {
  this.output.writeMessageBegin('updateCommodityRegister', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_updateCommodityRegister_args();
  args.platformArgs = platformArgs;
  args.commodityRegister = commodityRegister;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_updateCommodityRegister = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_updateCommodityRegister_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'updateCommodityRegister failed: unknown result';
};
QuotationAdminWebApiClient.prototype.addCommodityRegister = function(platformArgs, commodityRegister) {
  this.send_addCommodityRegister(platformArgs, commodityRegister);
  return this.recv_addCommodityRegister();
};

QuotationAdminWebApiClient.prototype.send_addCommodityRegister = function(platformArgs, commodityRegister) {
  this.output.writeMessageBegin('addCommodityRegister', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_addCommodityRegister_args();
  args.platformArgs = platformArgs;
  args.commodityRegister = commodityRegister;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_addCommodityRegister = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_addCommodityRegister_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'addCommodityRegister failed: unknown result';
};
QuotationAdminWebApiClient.prototype.deleteCommodityRegister = function(platformArgs, sledCommodityId, platformEnv, activeType, fixedCode) {
  this.send_deleteCommodityRegister(platformArgs, sledCommodityId, platformEnv, activeType, fixedCode);
  this.recv_deleteCommodityRegister();
};

QuotationAdminWebApiClient.prototype.send_deleteCommodityRegister = function(platformArgs, sledCommodityId, platformEnv, activeType, fixedCode) {
  this.output.writeMessageBegin('deleteCommodityRegister', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_deleteCommodityRegister_args();
  args.platformArgs = platformArgs;
  args.sledCommodityId = sledCommodityId;
  args.platformEnv = platformEnv;
  args.activeType = activeType;
  args.fixedCode = fixedCode;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_deleteCommodityRegister = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_deleteCommodityRegister_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.setCommodityRegisterOrderIndex = function(platformArgs, sledCommodityId, platformEnv, orderIndex, activeType, fixedCode) {
  this.send_setCommodityRegisterOrderIndex(platformArgs, sledCommodityId, platformEnv, orderIndex, activeType, fixedCode);
  this.recv_setCommodityRegisterOrderIndex();
};

QuotationAdminWebApiClient.prototype.send_setCommodityRegisterOrderIndex = function(platformArgs, sledCommodityId, platformEnv, orderIndex, activeType, fixedCode) {
  this.output.writeMessageBegin('setCommodityRegisterOrderIndex', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_setCommodityRegisterOrderIndex_args();
  args.platformArgs = platformArgs;
  args.sledCommodityId = sledCommodityId;
  args.platformEnv = platformEnv;
  args.orderIndex = orderIndex;
  args.activeType = activeType;
  args.fixedCode = fixedCode;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_setCommodityRegisterOrderIndex = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_setCommodityRegisterOrderIndex_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.reqQuotationAccountInfo = function(platformArgs, option, pageOption) {
  this.send_reqQuotationAccountInfo(platformArgs, option, pageOption);
  return this.recv_reqQuotationAccountInfo();
};

QuotationAdminWebApiClient.prototype.send_reqQuotationAccountInfo = function(platformArgs, option, pageOption) {
  this.output.writeMessageBegin('reqQuotationAccountInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqQuotationAccountInfo_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqQuotationAccountInfo = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqQuotationAccountInfo_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqQuotationAccountInfo failed: unknown result';
};
QuotationAdminWebApiClient.prototype.updateQuotationAccountInfo = function(platformArgs, quotationAccountInfo) {
  this.send_updateQuotationAccountInfo(platformArgs, quotationAccountInfo);
  return this.recv_updateQuotationAccountInfo();
};

QuotationAdminWebApiClient.prototype.send_updateQuotationAccountInfo = function(platformArgs, quotationAccountInfo) {
  this.output.writeMessageBegin('updateQuotationAccountInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_updateQuotationAccountInfo_args();
  args.platformArgs = platformArgs;
  args.quotationAccountInfo = quotationAccountInfo;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_updateQuotationAccountInfo = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_updateQuotationAccountInfo_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'updateQuotationAccountInfo failed: unknown result';
};
QuotationAdminWebApiClient.prototype.addQuotationAccountInfo = function(platformArgs, quotationAccountInfo) {
  this.send_addQuotationAccountInfo(platformArgs, quotationAccountInfo);
  return this.recv_addQuotationAccountInfo();
};

QuotationAdminWebApiClient.prototype.send_addQuotationAccountInfo = function(platformArgs, quotationAccountInfo) {
  this.output.writeMessageBegin('addQuotationAccountInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_addQuotationAccountInfo_args();
  args.platformArgs = platformArgs;
  args.quotationAccountInfo = quotationAccountInfo;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_addQuotationAccountInfo = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_addQuotationAccountInfo_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'addQuotationAccountInfo failed: unknown result';
};
QuotationAdminWebApiClient.prototype.deleteQuotationAccount = function(platformArgs, accountId) {
  this.send_deleteQuotationAccount(platformArgs, accountId);
  this.recv_deleteQuotationAccount();
};

QuotationAdminWebApiClient.prototype.send_deleteQuotationAccount = function(platformArgs, accountId) {
  this.output.writeMessageBegin('deleteQuotationAccount', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_deleteQuotationAccount_args();
  args.platformArgs = platformArgs;
  args.accountId = accountId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_deleteQuotationAccount = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_deleteQuotationAccount_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.reqExchangeRegisterAbility = function(platformArgs, option) {
  this.send_reqExchangeRegisterAbility(platformArgs, option);
  return this.recv_reqExchangeRegisterAbility();
};

QuotationAdminWebApiClient.prototype.send_reqExchangeRegisterAbility = function(platformArgs, option) {
  this.output.writeMessageBegin('reqExchangeRegisterAbility', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqExchangeRegisterAbility_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqExchangeRegisterAbility = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqExchangeRegisterAbility_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqExchangeRegisterAbility failed: unknown result';
};
QuotationAdminWebApiClient.prototype.batAddAccountRegisterAbility = function(platformArgs, abilities) {
  this.send_batAddAccountRegisterAbility(platformArgs, abilities);
  this.recv_batAddAccountRegisterAbility();
};

QuotationAdminWebApiClient.prototype.send_batAddAccountRegisterAbility = function(platformArgs, abilities) {
  this.output.writeMessageBegin('batAddAccountRegisterAbility', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_batAddAccountRegisterAbility_args();
  args.platformArgs = platformArgs;
  args.abilities = abilities;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_batAddAccountRegisterAbility = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_batAddAccountRegisterAbility_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.deleteAccountRegisterAbility = function(platformArgs, abilityId) {
  this.send_deleteAccountRegisterAbility(platformArgs, abilityId);
  this.recv_deleteAccountRegisterAbility();
};

QuotationAdminWebApiClient.prototype.send_deleteAccountRegisterAbility = function(platformArgs, abilityId) {
  this.output.writeMessageBegin('deleteAccountRegisterAbility', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_deleteAccountRegisterAbility_args();
  args.platformArgs = platformArgs;
  args.abilityId = abilityId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_deleteAccountRegisterAbility = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_deleteAccountRegisterAbility_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.deleteAccountRegisterAbilityByExchange = function(platformArgs, accountId, exchangeId) {
  this.send_deleteAccountRegisterAbilityByExchange(platformArgs, accountId, exchangeId);
  this.recv_deleteAccountRegisterAbilityByExchange();
};

QuotationAdminWebApiClient.prototype.send_deleteAccountRegisterAbilityByExchange = function(platformArgs, accountId, exchangeId) {
  this.output.writeMessageBegin('deleteAccountRegisterAbilityByExchange', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_args();
  args.platformArgs = platformArgs;
  args.accountId = accountId;
  args.exchangeId = exchangeId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_deleteAccountRegisterAbilityByExchange = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_deleteAccountRegisterAbilityByExchange_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.reqSubscribedContract = function(platformArgs, option, pageOption) {
  this.send_reqSubscribedContract(platformArgs, option, pageOption);
  return this.recv_reqSubscribedContract();
};

QuotationAdminWebApiClient.prototype.send_reqSubscribedContract = function(platformArgs, option, pageOption) {
  this.output.writeMessageBegin('reqSubscribedContract', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqSubscribedContract_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqSubscribedContract = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqSubscribedContract_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqSubscribedContract failed: unknown result';
};
QuotationAdminWebApiClient.prototype.replanSubscribe = function(platformArgs, platformEnv) {
  this.send_replanSubscribe(platformArgs, platformEnv);
  this.recv_replanSubscribe();
};

QuotationAdminWebApiClient.prototype.send_replanSubscribe = function(platformArgs, platformEnv) {
  this.output.writeMessageBegin('replanSubscribe', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_replanSubscribe_args();
  args.platformArgs = platformArgs;
  args.platformEnv = platformEnv;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_replanSubscribe = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_replanSubscribe_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.reqPreviewSubscribedContract = function(platformArgs, option, pageOption) {
  this.send_reqPreviewSubscribedContract(platformArgs, option, pageOption);
  return this.recv_reqPreviewSubscribedContract();
};

QuotationAdminWebApiClient.prototype.send_reqPreviewSubscribedContract = function(platformArgs, option, pageOption) {
  this.output.writeMessageBegin('reqPreviewSubscribedContract', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqPreviewSubscribedContract_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqPreviewSubscribedContract = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqPreviewSubscribedContract_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqPreviewSubscribedContract failed: unknown result';
};
QuotationAdminWebApiClient.prototype.submitSubscribeInfo = function(platformArgs, platformEnv) {
  this.send_submitSubscribeInfo(platformArgs, platformEnv);
  this.recv_submitSubscribeInfo();
};

QuotationAdminWebApiClient.prototype.send_submitSubscribeInfo = function(platformArgs, platformEnv) {
  this.output.writeMessageBegin('submitSubscribeInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_submitSubscribeInfo_args();
  args.platformArgs = platformArgs;
  args.platformEnv = platformEnv;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_submitSubscribeInfo = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_submitSubscribeInfo_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  return;
};
QuotationAdminWebApiClient.prototype.reqPlanningSubscribedInfo = function(platformArgs, option) {
  this.send_reqPlanningSubscribedInfo(platformArgs, option);
  return this.recv_reqPlanningSubscribedInfo();
};

QuotationAdminWebApiClient.prototype.send_reqPlanningSubscribedInfo = function(platformArgs, option) {
  this.output.writeMessageBegin('reqPlanningSubscribedInfo', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqPlanningSubscribedInfo_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqPlanningSubscribedInfo = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqPlanningSubscribedInfo_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqPlanningSubscribedInfo failed: unknown result';
};
QuotationAdminWebApiClient.prototype.reqCommodityTree = function(platformArgs, platformEnv) {
  this.send_reqCommodityTree(platformArgs, platformEnv);
  return this.recv_reqCommodityTree();
};

QuotationAdminWebApiClient.prototype.send_reqCommodityTree = function(platformArgs, platformEnv) {
  this.output.writeMessageBegin('reqCommodityTree', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqCommodityTree_args();
  args.platformArgs = platformArgs;
  args.platformEnv = platformEnv;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqCommodityTree = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqCommodityTree_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCommodityTree failed: unknown result';
};
QuotationAdminWebApiClient.prototype.reqCommodityTypeTree = function(platformArgs, platformEnv) {
  this.send_reqCommodityTypeTree(platformArgs, platformEnv);
  return this.recv_reqCommodityTypeTree();
};

QuotationAdminWebApiClient.prototype.send_reqCommodityTypeTree = function(platformArgs, platformEnv) {
  this.output.writeMessageBegin('reqCommodityTypeTree', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqCommodityTypeTree_args();
  args.platformArgs = platformArgs;
  args.platformEnv = platformEnv;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqCommodityTypeTree = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqCommodityTypeTree_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCommodityTypeTree failed: unknown result';
};
QuotationAdminWebApiClient.prototype.reqContractTreeCommodityNodes = function(platformArgs, sledExchangeId, commodityType, platformEnv) {
  this.send_reqContractTreeCommodityNodes(platformArgs, sledExchangeId, commodityType, platformEnv);
  return this.recv_reqContractTreeCommodityNodes();
};

QuotationAdminWebApiClient.prototype.send_reqContractTreeCommodityNodes = function(platformArgs, sledExchangeId, commodityType, platformEnv) {
  this.output.writeMessageBegin('reqContractTreeCommodityNodes', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqContractTreeCommodityNodes_args();
  args.platformArgs = platformArgs;
  args.sledExchangeId = sledExchangeId;
  args.commodityType = commodityType;
  args.platformEnv = platformEnv;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqContractTreeCommodityNodes = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqContractTreeCommodityNodes_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqContractTreeCommodityNodes failed: unknown result';
};
QuotationAdminWebApiClient.prototype.reqContractNodes = function(platformArgs, sledCommodityId, platformEnv) {
  this.send_reqContractNodes(platformArgs, sledCommodityId, platformEnv);
  return this.recv_reqContractNodes();
};

QuotationAdminWebApiClient.prototype.send_reqContractNodes = function(platformArgs, sledCommodityId, platformEnv) {
  this.output.writeMessageBegin('reqContractNodes', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqContractNodes_args();
  args.platformArgs = platformArgs;
  args.sledCommodityId = sledCommodityId;
  args.platformEnv = platformEnv;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqContractNodes = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqContractNodes_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqContractNodes failed: unknown result';
};
QuotationAdminWebApiClient.prototype.reqBrokerTree = function(platformArgs, platformEnv) {
  this.send_reqBrokerTree(platformArgs, platformEnv);
  return this.recv_reqBrokerTree();
};

QuotationAdminWebApiClient.prototype.send_reqBrokerTree = function(platformArgs, platformEnv) {
  this.output.writeMessageBegin('reqBrokerTree', Thrift.MessageType.CALL, this.seqid);
  var args = new QuotationAdminWebApi_reqBrokerTree_args();
  args.platformArgs = platformArgs;
  args.platformEnv = platformEnv;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

QuotationAdminWebApiClient.prototype.recv_reqBrokerTree = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new QuotationAdminWebApi_reqBrokerTree_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqBrokerTree failed: unknown result';
};
