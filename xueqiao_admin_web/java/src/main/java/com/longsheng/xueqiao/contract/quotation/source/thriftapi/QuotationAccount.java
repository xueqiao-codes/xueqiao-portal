/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.contract.quotation.source.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 行情账号基本登录信息
 */
public class QuotationAccount implements org.apache.thrift.TBase<QuotationAccount, QuotationAccount._Fields>, java.io.Serializable, Cloneable, Comparable<QuotationAccount> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QuotationAccount");

  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("accountName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField ACCOUNT_PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("accountPassword", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField BROKER_ENTRY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerEntryId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField BROKER_ACCESS_ENTRY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerAccessEntryId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("properties", org.apache.thrift.protocol.TType.MAP, (short)6);
  private static final org.apache.thrift.protocol.TField LOGIN_STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("loginState", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField PLATFORM_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("platformName", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I64, (short)21);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimestamp", org.apache.thrift.protocol.TType.I64, (short)22);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QuotationAccountStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QuotationAccountTupleSchemeFactory());
  }

  public long accountId; // optional
  public String accountName; // optional
  public String accountPassword; // optional
  public int brokerEntryId; // optional
  public int brokerAccessEntryId; // optional
  public Map<String,String> properties; // optional
  /**
   * 
   * @see LoginState
   */
  public LoginState loginState; // optional
  /**
   * 
   * @see ActiveState
   */
  public ActiveState status; // optional
  public String platformName; // optional
  public long createTimestamp; // optional
  public long lastModifyTimestamp; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_ID((short)1, "accountId"),
    ACCOUNT_NAME((short)2, "accountName"),
    ACCOUNT_PASSWORD((short)3, "accountPassword"),
    BROKER_ENTRY_ID((short)4, "brokerEntryId"),
    BROKER_ACCESS_ENTRY_ID((short)5, "brokerAccessEntryId"),
    PROPERTIES((short)6, "properties"),
    /**
     * 
     * @see LoginState
     */
    LOGIN_STATE((short)7, "loginState"),
    /**
     * 
     * @see ActiveState
     */
    STATUS((short)8, "status"),
    PLATFORM_NAME((short)9, "platformName"),
    CREATE_TIMESTAMP((short)21, "createTimestamp"),
    LAST_MODIFY_TIMESTAMP((short)22, "lastModifyTimestamp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 2: // ACCOUNT_NAME
          return ACCOUNT_NAME;
        case 3: // ACCOUNT_PASSWORD
          return ACCOUNT_PASSWORD;
        case 4: // BROKER_ENTRY_ID
          return BROKER_ENTRY_ID;
        case 5: // BROKER_ACCESS_ENTRY_ID
          return BROKER_ACCESS_ENTRY_ID;
        case 6: // PROPERTIES
          return PROPERTIES;
        case 7: // LOGIN_STATE
          return LOGIN_STATE;
        case 8: // STATUS
          return STATUS;
        case 9: // PLATFORM_NAME
          return PLATFORM_NAME;
        case 21: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 22: // LAST_MODIFY_TIMESTAMP
          return LAST_MODIFY_TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACCOUNTID_ISSET_ID = 0;
  private static final int __BROKERENTRYID_ISSET_ID = 1;
  private static final int __BROKERACCESSENTRYID_ISSET_ID = 2;
  private static final int __CREATETIMESTAMP_ISSET_ID = 3;
  private static final int __LASTMODIFYTIMESTAMP_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ACCOUNT_ID,_Fields.ACCOUNT_NAME,_Fields.ACCOUNT_PASSWORD,_Fields.BROKER_ENTRY_ID,_Fields.BROKER_ACCESS_ENTRY_ID,_Fields.PROPERTIES,_Fields.LOGIN_STATE,_Fields.STATUS,_Fields.PLATFORM_NAME,_Fields.CREATE_TIMESTAMP,_Fields.LAST_MODIFY_TIMESTAMP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.ACCOUNT_NAME, new org.apache.thrift.meta_data.FieldMetaData("accountName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("accountPassword", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BROKER_ENTRY_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerEntryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BROKER_ACCESS_ENTRY_ID, new org.apache.thrift.meta_data.FieldMetaData("brokerAccessEntryId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("properties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.LOGIN_STATE, new org.apache.thrift.meta_data.FieldMetaData("loginState", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, LoginState.class)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, ActiveState.class)));
    tmpMap.put(_Fields.PLATFORM_NAME, new org.apache.thrift.meta_data.FieldMetaData("platformName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QuotationAccount.class, metaDataMap);
  }

  public QuotationAccount() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QuotationAccount(QuotationAccount other) {
    __isset_bitfield = other.__isset_bitfield;
    this.accountId = other.accountId;
    if (other.isSetAccountName()) {
      this.accountName = other.accountName;
    }
    if (other.isSetAccountPassword()) {
      this.accountPassword = other.accountPassword;
    }
    this.brokerEntryId = other.brokerEntryId;
    this.brokerAccessEntryId = other.brokerAccessEntryId;
    if (other.isSetProperties()) {
      Map<String,String> __this__properties = new HashMap<String,String>(other.properties);
      this.properties = __this__properties;
    }
    if (other.isSetLoginState()) {
      this.loginState = other.loginState;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetPlatformName()) {
      this.platformName = other.platformName;
    }
    this.createTimestamp = other.createTimestamp;
    this.lastModifyTimestamp = other.lastModifyTimestamp;
  }

  public QuotationAccount deepCopy() {
    return new QuotationAccount(this);
  }

  @Override
  public void clear() {
    setAccountIdIsSet(false);
    this.accountId = 0;
    this.accountName = null;
    this.accountPassword = null;
    setBrokerEntryIdIsSet(false);
    this.brokerEntryId = 0;
    setBrokerAccessEntryIdIsSet(false);
    this.brokerAccessEntryId = 0;
    this.properties = null;
    this.loginState = null;
    this.status = null;
    this.platformName = null;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    setLastModifyTimestampIsSet(false);
    this.lastModifyTimestamp = 0;
  }

  public long getAccountId() {
    return this.accountId;
  }

  public QuotationAccount setAccountId(long accountId) {
    this.accountId = accountId;
    setAccountIdIsSet(true);
    return this;
  }

  public void unsetAccountId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  public String getAccountName() {
    return this.accountName;
  }

  public QuotationAccount setAccountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

  public void unsetAccountName() {
    this.accountName = null;
  }

  /** Returns true if field accountName is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountName() {
    return this.accountName != null;
  }

  public void setAccountNameIsSet(boolean value) {
    if (!value) {
      this.accountName = null;
    }
  }

  public String getAccountPassword() {
    return this.accountPassword;
  }

  public QuotationAccount setAccountPassword(String accountPassword) {
    this.accountPassword = accountPassword;
    return this;
  }

  public void unsetAccountPassword() {
    this.accountPassword = null;
  }

  /** Returns true if field accountPassword is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountPassword() {
    return this.accountPassword != null;
  }

  public void setAccountPasswordIsSet(boolean value) {
    if (!value) {
      this.accountPassword = null;
    }
  }

  public int getBrokerEntryId() {
    return this.brokerEntryId;
  }

  public QuotationAccount setBrokerEntryId(int brokerEntryId) {
    this.brokerEntryId = brokerEntryId;
    setBrokerEntryIdIsSet(true);
    return this;
  }

  public void unsetBrokerEntryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID);
  }

  /** Returns true if field brokerEntryId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerEntryId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID);
  }

  public void setBrokerEntryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERENTRYID_ISSET_ID, value);
  }

  public int getBrokerAccessEntryId() {
    return this.brokerAccessEntryId;
  }

  public QuotationAccount setBrokerAccessEntryId(int brokerAccessEntryId) {
    this.brokerAccessEntryId = brokerAccessEntryId;
    setBrokerAccessEntryIdIsSet(true);
    return this;
  }

  public void unsetBrokerAccessEntryId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BROKERACCESSENTRYID_ISSET_ID);
  }

  /** Returns true if field brokerAccessEntryId is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerAccessEntryId() {
    return EncodingUtils.testBit(__isset_bitfield, __BROKERACCESSENTRYID_ISSET_ID);
  }

  public void setBrokerAccessEntryIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BROKERACCESSENTRYID_ISSET_ID, value);
  }

  public int getPropertiesSize() {
    return (this.properties == null) ? 0 : this.properties.size();
  }

  public void putToProperties(String key, String val) {
    if (this.properties == null) {
      this.properties = new HashMap<String,String>();
    }
    this.properties.put(key, val);
  }

  public Map<String,String> getProperties() {
    return this.properties;
  }

  public QuotationAccount setProperties(Map<String,String> properties) {
    this.properties = properties;
    return this;
  }

  public void unsetProperties() {
    this.properties = null;
  }

  /** Returns true if field properties is set (has been assigned a value) and false otherwise */
  public boolean isSetProperties() {
    return this.properties != null;
  }

  public void setPropertiesIsSet(boolean value) {
    if (!value) {
      this.properties = null;
    }
  }

  /**
   * 
   * @see LoginState
   */
  public LoginState getLoginState() {
    return this.loginState;
  }

  /**
   * 
   * @see LoginState
   */
  public QuotationAccount setLoginState(LoginState loginState) {
    this.loginState = loginState;
    return this;
  }

  public void unsetLoginState() {
    this.loginState = null;
  }

  /** Returns true if field loginState is set (has been assigned a value) and false otherwise */
  public boolean isSetLoginState() {
    return this.loginState != null;
  }

  public void setLoginStateIsSet(boolean value) {
    if (!value) {
      this.loginState = null;
    }
  }

  /**
   * 
   * @see ActiveState
   */
  public ActiveState getStatus() {
    return this.status;
  }

  /**
   * 
   * @see ActiveState
   */
  public QuotationAccount setStatus(ActiveState status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getPlatformName() {
    return this.platformName;
  }

  public QuotationAccount setPlatformName(String platformName) {
    this.platformName = platformName;
    return this;
  }

  public void unsetPlatformName() {
    this.platformName = null;
  }

  /** Returns true if field platformName is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatformName() {
    return this.platformName != null;
  }

  public void setPlatformNameIsSet(boolean value) {
    if (!value) {
      this.platformName = null;
    }
  }

  public long getCreateTimestamp() {
    return this.createTimestamp;
  }

  public QuotationAccount setCreateTimestamp(long createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  public long getLastModifyTimestamp() {
    return this.lastModifyTimestamp;
  }

  public QuotationAccount setLastModifyTimestamp(long lastModifyTimestamp) {
    this.lastModifyTimestamp = lastModifyTimestamp;
    setLastModifyTimestampIsSet(true);
    return this;
  }

  public void unsetLastModifyTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastModifyTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  public void setLastModifyTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountId();
      } else {
        setAccountId((Long)value);
      }
      break;

    case ACCOUNT_NAME:
      if (value == null) {
        unsetAccountName();
      } else {
        setAccountName((String)value);
      }
      break;

    case ACCOUNT_PASSWORD:
      if (value == null) {
        unsetAccountPassword();
      } else {
        setAccountPassword((String)value);
      }
      break;

    case BROKER_ENTRY_ID:
      if (value == null) {
        unsetBrokerEntryId();
      } else {
        setBrokerEntryId((Integer)value);
      }
      break;

    case BROKER_ACCESS_ENTRY_ID:
      if (value == null) {
        unsetBrokerAccessEntryId();
      } else {
        setBrokerAccessEntryId((Integer)value);
      }
      break;

    case PROPERTIES:
      if (value == null) {
        unsetProperties();
      } else {
        setProperties((Map<String,String>)value);
      }
      break;

    case LOGIN_STATE:
      if (value == null) {
        unsetLoginState();
      } else {
        setLoginState((LoginState)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((ActiveState)value);
      }
      break;

    case PLATFORM_NAME:
      if (value == null) {
        unsetPlatformName();
      } else {
        setPlatformName((String)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Long)value);
      }
      break;

    case LAST_MODIFY_TIMESTAMP:
      if (value == null) {
        unsetLastModifyTimestamp();
      } else {
        setLastModifyTimestamp((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_ID:
      return Long.valueOf(getAccountId());

    case ACCOUNT_NAME:
      return getAccountName();

    case ACCOUNT_PASSWORD:
      return getAccountPassword();

    case BROKER_ENTRY_ID:
      return Integer.valueOf(getBrokerEntryId());

    case BROKER_ACCESS_ENTRY_ID:
      return Integer.valueOf(getBrokerAccessEntryId());

    case PROPERTIES:
      return getProperties();

    case LOGIN_STATE:
      return getLoginState();

    case STATUS:
      return getStatus();

    case PLATFORM_NAME:
      return getPlatformName();

    case CREATE_TIMESTAMP:
      return Long.valueOf(getCreateTimestamp());

    case LAST_MODIFY_TIMESTAMP:
      return Long.valueOf(getLastModifyTimestamp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_ID:
      return isSetAccountId();
    case ACCOUNT_NAME:
      return isSetAccountName();
    case ACCOUNT_PASSWORD:
      return isSetAccountPassword();
    case BROKER_ENTRY_ID:
      return isSetBrokerEntryId();
    case BROKER_ACCESS_ENTRY_ID:
      return isSetBrokerAccessEntryId();
    case PROPERTIES:
      return isSetProperties();
    case LOGIN_STATE:
      return isSetLoginState();
    case STATUS:
      return isSetStatus();
    case PLATFORM_NAME:
      return isSetPlatformName();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case LAST_MODIFY_TIMESTAMP:
      return isSetLastModifyTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QuotationAccount)
      return this.equals((QuotationAccount)that);
    return false;
  }

  public boolean equals(QuotationAccount that) {
    if (that == null)
      return false;

    boolean this_present_accountId = true && this.isSetAccountId();
    boolean that_present_accountId = true && that.isSetAccountId();
    if (this_present_accountId || that_present_accountId) {
      if (!(this_present_accountId && that_present_accountId))
        return false;
      if (this.accountId != that.accountId)
        return false;
    }

    boolean this_present_accountName = true && this.isSetAccountName();
    boolean that_present_accountName = true && that.isSetAccountName();
    if (this_present_accountName || that_present_accountName) {
      if (!(this_present_accountName && that_present_accountName))
        return false;
      if (!this.accountName.equals(that.accountName))
        return false;
    }

    boolean this_present_accountPassword = true && this.isSetAccountPassword();
    boolean that_present_accountPassword = true && that.isSetAccountPassword();
    if (this_present_accountPassword || that_present_accountPassword) {
      if (!(this_present_accountPassword && that_present_accountPassword))
        return false;
      if (!this.accountPassword.equals(that.accountPassword))
        return false;
    }

    boolean this_present_brokerEntryId = true && this.isSetBrokerEntryId();
    boolean that_present_brokerEntryId = true && that.isSetBrokerEntryId();
    if (this_present_brokerEntryId || that_present_brokerEntryId) {
      if (!(this_present_brokerEntryId && that_present_brokerEntryId))
        return false;
      if (this.brokerEntryId != that.brokerEntryId)
        return false;
    }

    boolean this_present_brokerAccessEntryId = true && this.isSetBrokerAccessEntryId();
    boolean that_present_brokerAccessEntryId = true && that.isSetBrokerAccessEntryId();
    if (this_present_brokerAccessEntryId || that_present_brokerAccessEntryId) {
      if (!(this_present_brokerAccessEntryId && that_present_brokerAccessEntryId))
        return false;
      if (this.brokerAccessEntryId != that.brokerAccessEntryId)
        return false;
    }

    boolean this_present_properties = true && this.isSetProperties();
    boolean that_present_properties = true && that.isSetProperties();
    if (this_present_properties || that_present_properties) {
      if (!(this_present_properties && that_present_properties))
        return false;
      if (!this.properties.equals(that.properties))
        return false;
    }

    boolean this_present_loginState = true && this.isSetLoginState();
    boolean that_present_loginState = true && that.isSetLoginState();
    if (this_present_loginState || that_present_loginState) {
      if (!(this_present_loginState && that_present_loginState))
        return false;
      if (!this.loginState.equals(that.loginState))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_platformName = true && this.isSetPlatformName();
    boolean that_present_platformName = true && that.isSetPlatformName();
    if (this_present_platformName || that_present_platformName) {
      if (!(this_present_platformName && that_present_platformName))
        return false;
      if (!this.platformName.equals(that.platformName))
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_lastModifyTimestamp = true && this.isSetLastModifyTimestamp();
    boolean that_present_lastModifyTimestamp = true && that.isSetLastModifyTimestamp();
    if (this_present_lastModifyTimestamp || that_present_lastModifyTimestamp) {
      if (!(this_present_lastModifyTimestamp && that_present_lastModifyTimestamp))
        return false;
      if (this.lastModifyTimestamp != that.lastModifyTimestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(QuotationAccount other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAccountId()).compareTo(other.isSetAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountName()).compareTo(other.isSetAccountName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountName, other.accountName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountPassword()).compareTo(other.isSetAccountPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountPassword, other.accountPassword);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerEntryId()).compareTo(other.isSetBrokerEntryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerEntryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerEntryId, other.brokerEntryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerAccessEntryId()).compareTo(other.isSetBrokerAccessEntryId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerAccessEntryId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerAccessEntryId, other.brokerAccessEntryId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProperties()).compareTo(other.isSetProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.properties, other.properties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLoginState()).compareTo(other.isSetLoginState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLoginState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.loginState, other.loginState);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatformName()).compareTo(other.isSetPlatformName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatformName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformName, other.platformName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimestamp()).compareTo(other.isSetLastModifyTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimestamp, other.lastModifyTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QuotationAccount(");
    boolean first = true;

    if (isSetAccountId()) {
      sb.append("accountId:");
      sb.append(this.accountId);
      first = false;
    }
    if (isSetAccountName()) {
      if (!first) sb.append(", ");
      sb.append("accountName:");
      if (this.accountName == null) {
        sb.append("null");
      } else {
        sb.append(this.accountName);
      }
      first = false;
    }
    if (isSetAccountPassword()) {
      if (!first) sb.append(", ");
      sb.append("accountPassword:");
      if (this.accountPassword == null) {
        sb.append("null");
      } else {
        sb.append(this.accountPassword);
      }
      first = false;
    }
    if (isSetBrokerEntryId()) {
      if (!first) sb.append(", ");
      sb.append("brokerEntryId:");
      sb.append(this.brokerEntryId);
      first = false;
    }
    if (isSetBrokerAccessEntryId()) {
      if (!first) sb.append(", ");
      sb.append("brokerAccessEntryId:");
      sb.append(this.brokerAccessEntryId);
      first = false;
    }
    if (isSetProperties()) {
      if (!first) sb.append(", ");
      sb.append("properties:");
      if (this.properties == null) {
        sb.append("null");
      } else {
        sb.append(this.properties);
      }
      first = false;
    }
    if (isSetLoginState()) {
      if (!first) sb.append(", ");
      sb.append("loginState:");
      if (this.loginState == null) {
        sb.append("null");
      } else {
        sb.append(this.loginState);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      if (this.status == null) {
        sb.append("null");
      } else {
        sb.append(this.status);
      }
      first = false;
    }
    if (isSetPlatformName()) {
      if (!first) sb.append(", ");
      sb.append("platformName:");
      if (this.platformName == null) {
        sb.append("null");
      } else {
        sb.append(this.platformName);
      }
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetLastModifyTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastModifyTimestamp:");
      sb.append(this.lastModifyTimestamp);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QuotationAccountStandardSchemeFactory implements SchemeFactory {
    public QuotationAccountStandardScheme getScheme() {
      return new QuotationAccountStandardScheme();
    }
  }

  private static class QuotationAccountStandardScheme extends StandardScheme<QuotationAccount> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QuotationAccount struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.accountId = iprot.readI64();
              struct.setAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // ACCOUNT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountName = iprot.readString();
              struct.setAccountNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCOUNT_PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountPassword = iprot.readString();
              struct.setAccountPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // BROKER_ENTRY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerEntryId = iprot.readI32();
              struct.setBrokerEntryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BROKER_ACCESS_ENTRY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.brokerAccessEntryId = iprot.readI32();
              struct.setBrokerAccessEntryIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.properties = new HashMap<String,String>(2*_map0.size);
                for (int _i1 = 0; _i1 < _map0.size; ++_i1)
                {
                  String _key2;
                  String _val3;
                  _key2 = iprot.readString();
                  _val3 = iprot.readString();
                  struct.properties.put(_key2, _val3);
                }
                iprot.readMapEnd();
              }
              struct.setPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // LOGIN_STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.loginState = LoginState.findByValue(iprot.readI32());
              struct.setLoginStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = ActiveState.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PLATFORM_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.platformName = iprot.readString();
              struct.setPlatformNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimestamp = iprot.readI64();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // LAST_MODIFY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimestamp = iprot.readI64();
              struct.setLastModifyTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QuotationAccount struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAccountId()) {
        oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
        oprot.writeI64(struct.accountId);
        oprot.writeFieldEnd();
      }
      if (struct.accountName != null) {
        if (struct.isSetAccountName()) {
          oprot.writeFieldBegin(ACCOUNT_NAME_FIELD_DESC);
          oprot.writeString(struct.accountName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountPassword != null) {
        if (struct.isSetAccountPassword()) {
          oprot.writeFieldBegin(ACCOUNT_PASSWORD_FIELD_DESC);
          oprot.writeString(struct.accountPassword);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetBrokerEntryId()) {
        oprot.writeFieldBegin(BROKER_ENTRY_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerEntryId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetBrokerAccessEntryId()) {
        oprot.writeFieldBegin(BROKER_ACCESS_ENTRY_ID_FIELD_DESC);
        oprot.writeI32(struct.brokerAccessEntryId);
        oprot.writeFieldEnd();
      }
      if (struct.properties != null) {
        if (struct.isSetProperties()) {
          oprot.writeFieldBegin(PROPERTIES_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.properties.size()));
            for (Map.Entry<String, String> _iter4 : struct.properties.entrySet())
            {
              oprot.writeString(_iter4.getKey());
              oprot.writeString(_iter4.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.loginState != null) {
        if (struct.isSetLoginState()) {
          oprot.writeFieldBegin(LOGIN_STATE_FIELD_DESC);
          oprot.writeI32(struct.loginState.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.status != null) {
        if (struct.isSetStatus()) {
          oprot.writeFieldBegin(STATUS_FIELD_DESC);
          oprot.writeI32(struct.status.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.platformName != null) {
        if (struct.isSetPlatformName()) {
          oprot.writeFieldBegin(PLATFORM_NAME_FIELD_DESC);
          oprot.writeString(struct.platformName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeFieldBegin(LAST_MODIFY_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.lastModifyTimestamp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QuotationAccountTupleSchemeFactory implements SchemeFactory {
    public QuotationAccountTupleScheme getScheme() {
      return new QuotationAccountTupleScheme();
    }
  }

  private static class QuotationAccountTupleScheme extends TupleScheme<QuotationAccount> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QuotationAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAccountId()) {
        optionals.set(0);
      }
      if (struct.isSetAccountName()) {
        optionals.set(1);
      }
      if (struct.isSetAccountPassword()) {
        optionals.set(2);
      }
      if (struct.isSetBrokerEntryId()) {
        optionals.set(3);
      }
      if (struct.isSetBrokerAccessEntryId()) {
        optionals.set(4);
      }
      if (struct.isSetProperties()) {
        optionals.set(5);
      }
      if (struct.isSetLoginState()) {
        optionals.set(6);
      }
      if (struct.isSetStatus()) {
        optionals.set(7);
      }
      if (struct.isSetPlatformName()) {
        optionals.set(8);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(9);
      }
      if (struct.isSetLastModifyTimestamp()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetAccountId()) {
        oprot.writeI64(struct.accountId);
      }
      if (struct.isSetAccountName()) {
        oprot.writeString(struct.accountName);
      }
      if (struct.isSetAccountPassword()) {
        oprot.writeString(struct.accountPassword);
      }
      if (struct.isSetBrokerEntryId()) {
        oprot.writeI32(struct.brokerEntryId);
      }
      if (struct.isSetBrokerAccessEntryId()) {
        oprot.writeI32(struct.brokerAccessEntryId);
      }
      if (struct.isSetProperties()) {
        {
          oprot.writeI32(struct.properties.size());
          for (Map.Entry<String, String> _iter5 : struct.properties.entrySet())
          {
            oprot.writeString(_iter5.getKey());
            oprot.writeString(_iter5.getValue());
          }
        }
      }
      if (struct.isSetLoginState()) {
        oprot.writeI32(struct.loginState.getValue());
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status.getValue());
      }
      if (struct.isSetPlatformName()) {
        oprot.writeString(struct.platformName);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI64(struct.createTimestamp);
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeI64(struct.lastModifyTimestamp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QuotationAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.accountId = iprot.readI64();
        struct.setAccountIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.accountName = iprot.readString();
        struct.setAccountNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.accountPassword = iprot.readString();
        struct.setAccountPasswordIsSet(true);
      }
      if (incoming.get(3)) {
        struct.brokerEntryId = iprot.readI32();
        struct.setBrokerEntryIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.brokerAccessEntryId = iprot.readI32();
        struct.setBrokerAccessEntryIdIsSet(true);
      }
      if (incoming.get(5)) {
        {
          org.apache.thrift.protocol.TMap _map6 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.properties = new HashMap<String,String>(2*_map6.size);
          for (int _i7 = 0; _i7 < _map6.size; ++_i7)
          {
            String _key8;
            String _val9;
            _key8 = iprot.readString();
            _val9 = iprot.readString();
            struct.properties.put(_key8, _val9);
          }
        }
        struct.setPropertiesIsSet(true);
      }
      if (incoming.get(6)) {
        struct.loginState = LoginState.findByValue(iprot.readI32());
        struct.setLoginStateIsSet(true);
      }
      if (incoming.get(7)) {
        struct.status = ActiveState.findByValue(iprot.readI32());
        struct.setStatusIsSet(true);
      }
      if (incoming.get(8)) {
        struct.platformName = iprot.readString();
        struct.setPlatformNameIsSet(true);
      }
      if (incoming.get(9)) {
        struct.createTimestamp = iprot.readI64();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(10)) {
        struct.lastModifyTimestamp = iprot.readI64();
        struct.setLastModifyTimestampIsSet(true);
      }
    }
  }

}

