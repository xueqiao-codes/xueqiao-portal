/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.contract.quotation.source.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * 行情账号可支持订阅的商品信息和合约数量额度
 */
public class QuotationAccountSubscribeQuota implements org.apache.thrift.TBase<QuotationAccountSubscribeQuota, QuotationAccountSubscribeQuota._Fields>, java.io.Serializable, Cloneable, Comparable<QuotationAccountSubscribeQuota> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("QuotationAccountSubscribeQuota");

  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField SLED_COMMODITY_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("sledCommodityIds", org.apache.thrift.protocol.TType.LIST, (short)2);
  private static final org.apache.thrift.protocol.TField MAX_SUPPORT_CONTRACT_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("maxSupportContractCount", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField CONTRACT_COUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("contractCount", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I64, (short)21);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimestamp", org.apache.thrift.protocol.TType.I64, (short)22);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new QuotationAccountSubscribeQuotaStandardSchemeFactory());
    schemes.put(TupleScheme.class, new QuotationAccountSubscribeQuotaTupleSchemeFactory());
  }

  public long accountId; // optional
  public List<Integer> sledCommodityIds; // optional
  public int maxSupportContractCount; // optional
  public int contractCount; // optional
  public long createTimestamp; // optional
  public long lastModifyTimestamp; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_ID((short)1, "accountId"),
    SLED_COMMODITY_IDS((short)2, "sledCommodityIds"),
    MAX_SUPPORT_CONTRACT_COUNT((short)3, "maxSupportContractCount"),
    CONTRACT_COUNT((short)4, "contractCount"),
    CREATE_TIMESTAMP((short)21, "createTimestamp"),
    LAST_MODIFY_TIMESTAMP((short)22, "lastModifyTimestamp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 2: // SLED_COMMODITY_IDS
          return SLED_COMMODITY_IDS;
        case 3: // MAX_SUPPORT_CONTRACT_COUNT
          return MAX_SUPPORT_CONTRACT_COUNT;
        case 4: // CONTRACT_COUNT
          return CONTRACT_COUNT;
        case 21: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 22: // LAST_MODIFY_TIMESTAMP
          return LAST_MODIFY_TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACCOUNTID_ISSET_ID = 0;
  private static final int __MAXSUPPORTCONTRACTCOUNT_ISSET_ID = 1;
  private static final int __CONTRACTCOUNT_ISSET_ID = 2;
  private static final int __CREATETIMESTAMP_ISSET_ID = 3;
  private static final int __LASTMODIFYTIMESTAMP_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ACCOUNT_ID,_Fields.SLED_COMMODITY_IDS,_Fields.MAX_SUPPORT_CONTRACT_COUNT,_Fields.CONTRACT_COUNT,_Fields.CREATE_TIMESTAMP,_Fields.LAST_MODIFY_TIMESTAMP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.SLED_COMMODITY_IDS, new org.apache.thrift.meta_data.FieldMetaData("sledCommodityIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.MAX_SUPPORT_CONTRACT_COUNT, new org.apache.thrift.meta_data.FieldMetaData("maxSupportContractCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CONTRACT_COUNT, new org.apache.thrift.meta_data.FieldMetaData("contractCount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(QuotationAccountSubscribeQuota.class, metaDataMap);
  }

  public QuotationAccountSubscribeQuota() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public QuotationAccountSubscribeQuota(QuotationAccountSubscribeQuota other) {
    __isset_bitfield = other.__isset_bitfield;
    this.accountId = other.accountId;
    if (other.isSetSledCommodityIds()) {
      List<Integer> __this__sledCommodityIds = new ArrayList<Integer>(other.sledCommodityIds);
      this.sledCommodityIds = __this__sledCommodityIds;
    }
    this.maxSupportContractCount = other.maxSupportContractCount;
    this.contractCount = other.contractCount;
    this.createTimestamp = other.createTimestamp;
    this.lastModifyTimestamp = other.lastModifyTimestamp;
  }

  public QuotationAccountSubscribeQuota deepCopy() {
    return new QuotationAccountSubscribeQuota(this);
  }

  @Override
  public void clear() {
    setAccountIdIsSet(false);
    this.accountId = 0;
    this.sledCommodityIds = null;
    setMaxSupportContractCountIsSet(false);
    this.maxSupportContractCount = 0;
    setContractCountIsSet(false);
    this.contractCount = 0;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    setLastModifyTimestampIsSet(false);
    this.lastModifyTimestamp = 0;
  }

  public long getAccountId() {
    return this.accountId;
  }

  public QuotationAccountSubscribeQuota setAccountId(long accountId) {
    this.accountId = accountId;
    setAccountIdIsSet(true);
    return this;
  }

  public void unsetAccountId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  public int getSledCommodityIdsSize() {
    return (this.sledCommodityIds == null) ? 0 : this.sledCommodityIds.size();
  }

  public java.util.Iterator<Integer> getSledCommodityIdsIterator() {
    return (this.sledCommodityIds == null) ? null : this.sledCommodityIds.iterator();
  }

  public void addToSledCommodityIds(int elem) {
    if (this.sledCommodityIds == null) {
      this.sledCommodityIds = new ArrayList<Integer>();
    }
    this.sledCommodityIds.add(elem);
  }

  public List<Integer> getSledCommodityIds() {
    return this.sledCommodityIds;
  }

  public QuotationAccountSubscribeQuota setSledCommodityIds(List<Integer> sledCommodityIds) {
    this.sledCommodityIds = sledCommodityIds;
    return this;
  }

  public void unsetSledCommodityIds() {
    this.sledCommodityIds = null;
  }

  /** Returns true if field sledCommodityIds is set (has been assigned a value) and false otherwise */
  public boolean isSetSledCommodityIds() {
    return this.sledCommodityIds != null;
  }

  public void setSledCommodityIdsIsSet(boolean value) {
    if (!value) {
      this.sledCommodityIds = null;
    }
  }

  public int getMaxSupportContractCount() {
    return this.maxSupportContractCount;
  }

  public QuotationAccountSubscribeQuota setMaxSupportContractCount(int maxSupportContractCount) {
    this.maxSupportContractCount = maxSupportContractCount;
    setMaxSupportContractCountIsSet(true);
    return this;
  }

  public void unsetMaxSupportContractCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __MAXSUPPORTCONTRACTCOUNT_ISSET_ID);
  }

  /** Returns true if field maxSupportContractCount is set (has been assigned a value) and false otherwise */
  public boolean isSetMaxSupportContractCount() {
    return EncodingUtils.testBit(__isset_bitfield, __MAXSUPPORTCONTRACTCOUNT_ISSET_ID);
  }

  public void setMaxSupportContractCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __MAXSUPPORTCONTRACTCOUNT_ISSET_ID, value);
  }

  public int getContractCount() {
    return this.contractCount;
  }

  public QuotationAccountSubscribeQuota setContractCount(int contractCount) {
    this.contractCount = contractCount;
    setContractCountIsSet(true);
    return this;
  }

  public void unsetContractCount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CONTRACTCOUNT_ISSET_ID);
  }

  /** Returns true if field contractCount is set (has been assigned a value) and false otherwise */
  public boolean isSetContractCount() {
    return EncodingUtils.testBit(__isset_bitfield, __CONTRACTCOUNT_ISSET_ID);
  }

  public void setContractCountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CONTRACTCOUNT_ISSET_ID, value);
  }

  public long getCreateTimestamp() {
    return this.createTimestamp;
  }

  public QuotationAccountSubscribeQuota setCreateTimestamp(long createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  public long getLastModifyTimestamp() {
    return this.lastModifyTimestamp;
  }

  public QuotationAccountSubscribeQuota setLastModifyTimestamp(long lastModifyTimestamp) {
    this.lastModifyTimestamp = lastModifyTimestamp;
    setLastModifyTimestampIsSet(true);
    return this;
  }

  public void unsetLastModifyTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastModifyTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  public void setLastModifyTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountId();
      } else {
        setAccountId((Long)value);
      }
      break;

    case SLED_COMMODITY_IDS:
      if (value == null) {
        unsetSledCommodityIds();
      } else {
        setSledCommodityIds((List<Integer>)value);
      }
      break;

    case MAX_SUPPORT_CONTRACT_COUNT:
      if (value == null) {
        unsetMaxSupportContractCount();
      } else {
        setMaxSupportContractCount((Integer)value);
      }
      break;

    case CONTRACT_COUNT:
      if (value == null) {
        unsetContractCount();
      } else {
        setContractCount((Integer)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Long)value);
      }
      break;

    case LAST_MODIFY_TIMESTAMP:
      if (value == null) {
        unsetLastModifyTimestamp();
      } else {
        setLastModifyTimestamp((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_ID:
      return Long.valueOf(getAccountId());

    case SLED_COMMODITY_IDS:
      return getSledCommodityIds();

    case MAX_SUPPORT_CONTRACT_COUNT:
      return Integer.valueOf(getMaxSupportContractCount());

    case CONTRACT_COUNT:
      return Integer.valueOf(getContractCount());

    case CREATE_TIMESTAMP:
      return Long.valueOf(getCreateTimestamp());

    case LAST_MODIFY_TIMESTAMP:
      return Long.valueOf(getLastModifyTimestamp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_ID:
      return isSetAccountId();
    case SLED_COMMODITY_IDS:
      return isSetSledCommodityIds();
    case MAX_SUPPORT_CONTRACT_COUNT:
      return isSetMaxSupportContractCount();
    case CONTRACT_COUNT:
      return isSetContractCount();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case LAST_MODIFY_TIMESTAMP:
      return isSetLastModifyTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof QuotationAccountSubscribeQuota)
      return this.equals((QuotationAccountSubscribeQuota)that);
    return false;
  }

  public boolean equals(QuotationAccountSubscribeQuota that) {
    if (that == null)
      return false;

    boolean this_present_accountId = true && this.isSetAccountId();
    boolean that_present_accountId = true && that.isSetAccountId();
    if (this_present_accountId || that_present_accountId) {
      if (!(this_present_accountId && that_present_accountId))
        return false;
      if (this.accountId != that.accountId)
        return false;
    }

    boolean this_present_sledCommodityIds = true && this.isSetSledCommodityIds();
    boolean that_present_sledCommodityIds = true && that.isSetSledCommodityIds();
    if (this_present_sledCommodityIds || that_present_sledCommodityIds) {
      if (!(this_present_sledCommodityIds && that_present_sledCommodityIds))
        return false;
      if (!this.sledCommodityIds.equals(that.sledCommodityIds))
        return false;
    }

    boolean this_present_maxSupportContractCount = true && this.isSetMaxSupportContractCount();
    boolean that_present_maxSupportContractCount = true && that.isSetMaxSupportContractCount();
    if (this_present_maxSupportContractCount || that_present_maxSupportContractCount) {
      if (!(this_present_maxSupportContractCount && that_present_maxSupportContractCount))
        return false;
      if (this.maxSupportContractCount != that.maxSupportContractCount)
        return false;
    }

    boolean this_present_contractCount = true && this.isSetContractCount();
    boolean that_present_contractCount = true && that.isSetContractCount();
    if (this_present_contractCount || that_present_contractCount) {
      if (!(this_present_contractCount && that_present_contractCount))
        return false;
      if (this.contractCount != that.contractCount)
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_lastModifyTimestamp = true && this.isSetLastModifyTimestamp();
    boolean that_present_lastModifyTimestamp = true && that.isSetLastModifyTimestamp();
    if (this_present_lastModifyTimestamp || that_present_lastModifyTimestamp) {
      if (!(this_present_lastModifyTimestamp && that_present_lastModifyTimestamp))
        return false;
      if (this.lastModifyTimestamp != that.lastModifyTimestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(QuotationAccountSubscribeQuota other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAccountId()).compareTo(other.isSetAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSledCommodityIds()).compareTo(other.isSetSledCommodityIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSledCommodityIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sledCommodityIds, other.sledCommodityIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMaxSupportContractCount()).compareTo(other.isSetMaxSupportContractCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMaxSupportContractCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.maxSupportContractCount, other.maxSupportContractCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetContractCount()).compareTo(other.isSetContractCount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetContractCount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.contractCount, other.contractCount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimestamp()).compareTo(other.isSetLastModifyTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimestamp, other.lastModifyTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("QuotationAccountSubscribeQuota(");
    boolean first = true;

    if (isSetAccountId()) {
      sb.append("accountId:");
      sb.append(this.accountId);
      first = false;
    }
    if (isSetSledCommodityIds()) {
      if (!first) sb.append(", ");
      sb.append("sledCommodityIds:");
      if (this.sledCommodityIds == null) {
        sb.append("null");
      } else {
        sb.append(this.sledCommodityIds);
      }
      first = false;
    }
    if (isSetMaxSupportContractCount()) {
      if (!first) sb.append(", ");
      sb.append("maxSupportContractCount:");
      sb.append(this.maxSupportContractCount);
      first = false;
    }
    if (isSetContractCount()) {
      if (!first) sb.append(", ");
      sb.append("contractCount:");
      sb.append(this.contractCount);
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetLastModifyTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastModifyTimestamp:");
      sb.append(this.lastModifyTimestamp);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class QuotationAccountSubscribeQuotaStandardSchemeFactory implements SchemeFactory {
    public QuotationAccountSubscribeQuotaStandardScheme getScheme() {
      return new QuotationAccountSubscribeQuotaStandardScheme();
    }
  }

  private static class QuotationAccountSubscribeQuotaStandardScheme extends StandardScheme<QuotationAccountSubscribeQuota> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, QuotationAccountSubscribeQuota struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.accountId = iprot.readI64();
              struct.setAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SLED_COMMODITY_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list20 = iprot.readListBegin();
                struct.sledCommodityIds = new ArrayList<Integer>(_list20.size);
                for (int _i21 = 0; _i21 < _list20.size; ++_i21)
                {
                  int _elem22;
                  _elem22 = iprot.readI32();
                  struct.sledCommodityIds.add(_elem22);
                }
                iprot.readListEnd();
              }
              struct.setSledCommodityIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // MAX_SUPPORT_CONTRACT_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.maxSupportContractCount = iprot.readI32();
              struct.setMaxSupportContractCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // CONTRACT_COUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.contractCount = iprot.readI32();
              struct.setContractCountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimestamp = iprot.readI64();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // LAST_MODIFY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimestamp = iprot.readI64();
              struct.setLastModifyTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, QuotationAccountSubscribeQuota struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAccountId()) {
        oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
        oprot.writeI64(struct.accountId);
        oprot.writeFieldEnd();
      }
      if (struct.sledCommodityIds != null) {
        if (struct.isSetSledCommodityIds()) {
          oprot.writeFieldBegin(SLED_COMMODITY_IDS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.sledCommodityIds.size()));
            for (int _iter23 : struct.sledCommodityIds)
            {
              oprot.writeI32(_iter23);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetMaxSupportContractCount()) {
        oprot.writeFieldBegin(MAX_SUPPORT_CONTRACT_COUNT_FIELD_DESC);
        oprot.writeI32(struct.maxSupportContractCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetContractCount()) {
        oprot.writeFieldBegin(CONTRACT_COUNT_FIELD_DESC);
        oprot.writeI32(struct.contractCount);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeFieldBegin(LAST_MODIFY_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.lastModifyTimestamp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class QuotationAccountSubscribeQuotaTupleSchemeFactory implements SchemeFactory {
    public QuotationAccountSubscribeQuotaTupleScheme getScheme() {
      return new QuotationAccountSubscribeQuotaTupleScheme();
    }
  }

  private static class QuotationAccountSubscribeQuotaTupleScheme extends TupleScheme<QuotationAccountSubscribeQuota> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, QuotationAccountSubscribeQuota struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAccountId()) {
        optionals.set(0);
      }
      if (struct.isSetSledCommodityIds()) {
        optionals.set(1);
      }
      if (struct.isSetMaxSupportContractCount()) {
        optionals.set(2);
      }
      if (struct.isSetContractCount()) {
        optionals.set(3);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(4);
      }
      if (struct.isSetLastModifyTimestamp()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetAccountId()) {
        oprot.writeI64(struct.accountId);
      }
      if (struct.isSetSledCommodityIds()) {
        {
          oprot.writeI32(struct.sledCommodityIds.size());
          for (int _iter24 : struct.sledCommodityIds)
          {
            oprot.writeI32(_iter24);
          }
        }
      }
      if (struct.isSetMaxSupportContractCount()) {
        oprot.writeI32(struct.maxSupportContractCount);
      }
      if (struct.isSetContractCount()) {
        oprot.writeI32(struct.contractCount);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI64(struct.createTimestamp);
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeI64(struct.lastModifyTimestamp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, QuotationAccountSubscribeQuota struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.accountId = iprot.readI64();
        struct.setAccountIdIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TList _list25 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.sledCommodityIds = new ArrayList<Integer>(_list25.size);
          for (int _i26 = 0; _i26 < _list25.size; ++_i26)
          {
            int _elem27;
            _elem27 = iprot.readI32();
            struct.sledCommodityIds.add(_elem27);
          }
        }
        struct.setSledCommodityIdsIsSet(true);
      }
      if (incoming.get(2)) {
        struct.maxSupportContractCount = iprot.readI32();
        struct.setMaxSupportContractCountIsSet(true);
      }
      if (incoming.get(3)) {
        struct.contractCount = iprot.readI32();
        struct.setContractCountIsSet(true);
      }
      if (incoming.get(4)) {
        struct.createTimestamp = iprot.readI64();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(5)) {
        struct.lastModifyTimestamp = iprot.readI64();
        struct.setLastModifyTimestampIsSet(true);
      }
    }
  }

}

