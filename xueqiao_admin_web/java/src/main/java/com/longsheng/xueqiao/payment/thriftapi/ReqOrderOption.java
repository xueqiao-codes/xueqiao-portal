/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.payment.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ReqOrderOption implements org.apache.thrift.TBase<ReqOrderOption, ReqOrderOption._Fields>, java.io.Serializable, Cloneable, Comparable<ReqOrderOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReqOrderOption");

  private static final org.apache.thrift.protocol.TField ORDER_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("orderIds", org.apache.thrift.protocol.TType.SET, (short)1);
  private static final org.apache.thrift.protocol.TField PRODUCT_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("productIds", org.apache.thrift.protocol.TType.SET, (short)2);
  private static final org.apache.thrift.protocol.TField COMPANY_IDS_FIELD_DESC = new org.apache.thrift.protocol.TField("companyIds", org.apache.thrift.protocol.TType.SET, (short)3);
  private static final org.apache.thrift.protocol.TField THIRD_PARTY_ORDER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdPartyOrderNo", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PAY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("payType", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("groupId", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField PAGE_OPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("pageOption", org.apache.thrift.protocol.TType.STRUCT, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReqOrderOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReqOrderOptionTupleSchemeFactory());
  }

  public Set<Integer> orderIds; // optional
  public Set<Integer> productIds; // optional
  public Set<Integer> companyIds; // optional
  public String thirdPartyOrderNo; // optional
  /**
   * 
   * @see OrderStatus
   */
  public OrderStatus status; // optional
  /**
   * 
   * @see PayType
   */
  public PayType payType; // optional
  public int groupId; // optional
  public org.soldier.platform.page.IndexedPageOption pageOption; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORDER_IDS((short)1, "orderIds"),
    PRODUCT_IDS((short)2, "productIds"),
    COMPANY_IDS((short)3, "companyIds"),
    THIRD_PARTY_ORDER_NO((short)4, "thirdPartyOrderNo"),
    /**
     * 
     * @see OrderStatus
     */
    STATUS((short)5, "status"),
    /**
     * 
     * @see PayType
     */
    PAY_TYPE((short)6, "payType"),
    GROUP_ID((short)7, "groupId"),
    PAGE_OPTION((short)10, "pageOption");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_IDS
          return ORDER_IDS;
        case 2: // PRODUCT_IDS
          return PRODUCT_IDS;
        case 3: // COMPANY_IDS
          return COMPANY_IDS;
        case 4: // THIRD_PARTY_ORDER_NO
          return THIRD_PARTY_ORDER_NO;
        case 5: // STATUS
          return STATUS;
        case 6: // PAY_TYPE
          return PAY_TYPE;
        case 7: // GROUP_ID
          return GROUP_ID;
        case 10: // PAGE_OPTION
          return PAGE_OPTION;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __GROUPID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ORDER_IDS,_Fields.PRODUCT_IDS,_Fields.COMPANY_IDS,_Fields.THIRD_PARTY_ORDER_NO,_Fields.STATUS,_Fields.PAY_TYPE,_Fields.GROUP_ID,_Fields.PAGE_OPTION};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_IDS, new org.apache.thrift.meta_data.FieldMetaData("orderIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.PRODUCT_IDS, new org.apache.thrift.meta_data.FieldMetaData("productIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.COMPANY_IDS, new org.apache.thrift.meta_data.FieldMetaData("companyIds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.SetMetaData(org.apache.thrift.protocol.TType.SET, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.THIRD_PARTY_ORDER_NO, new org.apache.thrift.meta_data.FieldMetaData("thirdPartyOrderNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, OrderStatus.class)));
    tmpMap.put(_Fields.PAY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("payType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PayType.class)));
    tmpMap.put(_Fields.GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("groupId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PAGE_OPTION, new org.apache.thrift.meta_data.FieldMetaData("pageOption", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, org.soldier.platform.page.IndexedPageOption.class)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReqOrderOption.class, metaDataMap);
  }

  public ReqOrderOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReqOrderOption(ReqOrderOption other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetOrderIds()) {
      Set<Integer> __this__orderIds = new HashSet<Integer>(other.orderIds);
      this.orderIds = __this__orderIds;
    }
    if (other.isSetProductIds()) {
      Set<Integer> __this__productIds = new HashSet<Integer>(other.productIds);
      this.productIds = __this__productIds;
    }
    if (other.isSetCompanyIds()) {
      Set<Integer> __this__companyIds = new HashSet<Integer>(other.companyIds);
      this.companyIds = __this__companyIds;
    }
    if (other.isSetThirdPartyOrderNo()) {
      this.thirdPartyOrderNo = other.thirdPartyOrderNo;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetPayType()) {
      this.payType = other.payType;
    }
    this.groupId = other.groupId;
    if (other.isSetPageOption()) {
      this.pageOption = new org.soldier.platform.page.IndexedPageOption(other.pageOption);
    }
  }

  public ReqOrderOption deepCopy() {
    return new ReqOrderOption(this);
  }

  @Override
  public void clear() {
    this.orderIds = null;
    this.productIds = null;
    this.companyIds = null;
    this.thirdPartyOrderNo = null;
    this.status = null;
    this.payType = null;
    setGroupIdIsSet(false);
    this.groupId = 0;
    this.pageOption = null;
  }

  public int getOrderIdsSize() {
    return (this.orderIds == null) ? 0 : this.orderIds.size();
  }

  public java.util.Iterator<Integer> getOrderIdsIterator() {
    return (this.orderIds == null) ? null : this.orderIds.iterator();
  }

  public void addToOrderIds(int elem) {
    if (this.orderIds == null) {
      this.orderIds = new HashSet<Integer>();
    }
    this.orderIds.add(elem);
  }

  public Set<Integer> getOrderIds() {
    return this.orderIds;
  }

  public ReqOrderOption setOrderIds(Set<Integer> orderIds) {
    this.orderIds = orderIds;
    return this;
  }

  public void unsetOrderIds() {
    this.orderIds = null;
  }

  /** Returns true if field orderIds is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderIds() {
    return this.orderIds != null;
  }

  public void setOrderIdsIsSet(boolean value) {
    if (!value) {
      this.orderIds = null;
    }
  }

  public int getProductIdsSize() {
    return (this.productIds == null) ? 0 : this.productIds.size();
  }

  public java.util.Iterator<Integer> getProductIdsIterator() {
    return (this.productIds == null) ? null : this.productIds.iterator();
  }

  public void addToProductIds(int elem) {
    if (this.productIds == null) {
      this.productIds = new HashSet<Integer>();
    }
    this.productIds.add(elem);
  }

  public Set<Integer> getProductIds() {
    return this.productIds;
  }

  public ReqOrderOption setProductIds(Set<Integer> productIds) {
    this.productIds = productIds;
    return this;
  }

  public void unsetProductIds() {
    this.productIds = null;
  }

  /** Returns true if field productIds is set (has been assigned a value) and false otherwise */
  public boolean isSetProductIds() {
    return this.productIds != null;
  }

  public void setProductIdsIsSet(boolean value) {
    if (!value) {
      this.productIds = null;
    }
  }

  public int getCompanyIdsSize() {
    return (this.companyIds == null) ? 0 : this.companyIds.size();
  }

  public java.util.Iterator<Integer> getCompanyIdsIterator() {
    return (this.companyIds == null) ? null : this.companyIds.iterator();
  }

  public void addToCompanyIds(int elem) {
    if (this.companyIds == null) {
      this.companyIds = new HashSet<Integer>();
    }
    this.companyIds.add(elem);
  }

  public Set<Integer> getCompanyIds() {
    return this.companyIds;
  }

  public ReqOrderOption setCompanyIds(Set<Integer> companyIds) {
    this.companyIds = companyIds;
    return this;
  }

  public void unsetCompanyIds() {
    this.companyIds = null;
  }

  /** Returns true if field companyIds is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyIds() {
    return this.companyIds != null;
  }

  public void setCompanyIdsIsSet(boolean value) {
    if (!value) {
      this.companyIds = null;
    }
  }

  public String getThirdPartyOrderNo() {
    return this.thirdPartyOrderNo;
  }

  public ReqOrderOption setThirdPartyOrderNo(String thirdPartyOrderNo) {
    this.thirdPartyOrderNo = thirdPartyOrderNo;
    return this;
  }

  public void unsetThirdPartyOrderNo() {
    this.thirdPartyOrderNo = null;
  }

  /** Returns true if field thirdPartyOrderNo is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdPartyOrderNo() {
    return this.thirdPartyOrderNo != null;
  }

  public void setThirdPartyOrderNoIsSet(boolean value) {
    if (!value) {
      this.thirdPartyOrderNo = null;
    }
  }

  /**
   * 
   * @see OrderStatus
   */
  public OrderStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see OrderStatus
   */
  public ReqOrderOption setStatus(OrderStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  /**
   * 
   * @see PayType
   */
  public PayType getPayType() {
    return this.payType;
  }

  /**
   * 
   * @see PayType
   */
  public ReqOrderOption setPayType(PayType payType) {
    this.payType = payType;
    return this;
  }

  public void unsetPayType() {
    this.payType = null;
  }

  /** Returns true if field payType is set (has been assigned a value) and false otherwise */
  public boolean isSetPayType() {
    return this.payType != null;
  }

  public void setPayTypeIsSet(boolean value) {
    if (!value) {
      this.payType = null;
    }
  }

  public int getGroupId() {
    return this.groupId;
  }

  public ReqOrderOption setGroupId(int groupId) {
    this.groupId = groupId;
    setGroupIdIsSet(true);
    return this;
  }

  public void unsetGroupId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __GROUPID_ISSET_ID);
  }

  /** Returns true if field groupId is set (has been assigned a value) and false otherwise */
  public boolean isSetGroupId() {
    return EncodingUtils.testBit(__isset_bitfield, __GROUPID_ISSET_ID);
  }

  public void setGroupIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __GROUPID_ISSET_ID, value);
  }

  public org.soldier.platform.page.IndexedPageOption getPageOption() {
    return this.pageOption;
  }

  public ReqOrderOption setPageOption(org.soldier.platform.page.IndexedPageOption pageOption) {
    this.pageOption = pageOption;
    return this;
  }

  public void unsetPageOption() {
    this.pageOption = null;
  }

  /** Returns true if field pageOption is set (has been assigned a value) and false otherwise */
  public boolean isSetPageOption() {
    return this.pageOption != null;
  }

  public void setPageOptionIsSet(boolean value) {
    if (!value) {
      this.pageOption = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_IDS:
      if (value == null) {
        unsetOrderIds();
      } else {
        setOrderIds((Set<Integer>)value);
      }
      break;

    case PRODUCT_IDS:
      if (value == null) {
        unsetProductIds();
      } else {
        setProductIds((Set<Integer>)value);
      }
      break;

    case COMPANY_IDS:
      if (value == null) {
        unsetCompanyIds();
      } else {
        setCompanyIds((Set<Integer>)value);
      }
      break;

    case THIRD_PARTY_ORDER_NO:
      if (value == null) {
        unsetThirdPartyOrderNo();
      } else {
        setThirdPartyOrderNo((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((OrderStatus)value);
      }
      break;

    case PAY_TYPE:
      if (value == null) {
        unsetPayType();
      } else {
        setPayType((PayType)value);
      }
      break;

    case GROUP_ID:
      if (value == null) {
        unsetGroupId();
      } else {
        setGroupId((Integer)value);
      }
      break;

    case PAGE_OPTION:
      if (value == null) {
        unsetPageOption();
      } else {
        setPageOption((org.soldier.platform.page.IndexedPageOption)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_IDS:
      return getOrderIds();

    case PRODUCT_IDS:
      return getProductIds();

    case COMPANY_IDS:
      return getCompanyIds();

    case THIRD_PARTY_ORDER_NO:
      return getThirdPartyOrderNo();

    case STATUS:
      return getStatus();

    case PAY_TYPE:
      return getPayType();

    case GROUP_ID:
      return Integer.valueOf(getGroupId());

    case PAGE_OPTION:
      return getPageOption();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_IDS:
      return isSetOrderIds();
    case PRODUCT_IDS:
      return isSetProductIds();
    case COMPANY_IDS:
      return isSetCompanyIds();
    case THIRD_PARTY_ORDER_NO:
      return isSetThirdPartyOrderNo();
    case STATUS:
      return isSetStatus();
    case PAY_TYPE:
      return isSetPayType();
    case GROUP_ID:
      return isSetGroupId();
    case PAGE_OPTION:
      return isSetPageOption();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReqOrderOption)
      return this.equals((ReqOrderOption)that);
    return false;
  }

  public boolean equals(ReqOrderOption that) {
    if (that == null)
      return false;

    boolean this_present_orderIds = true && this.isSetOrderIds();
    boolean that_present_orderIds = true && that.isSetOrderIds();
    if (this_present_orderIds || that_present_orderIds) {
      if (!(this_present_orderIds && that_present_orderIds))
        return false;
      if (!this.orderIds.equals(that.orderIds))
        return false;
    }

    boolean this_present_productIds = true && this.isSetProductIds();
    boolean that_present_productIds = true && that.isSetProductIds();
    if (this_present_productIds || that_present_productIds) {
      if (!(this_present_productIds && that_present_productIds))
        return false;
      if (!this.productIds.equals(that.productIds))
        return false;
    }

    boolean this_present_companyIds = true && this.isSetCompanyIds();
    boolean that_present_companyIds = true && that.isSetCompanyIds();
    if (this_present_companyIds || that_present_companyIds) {
      if (!(this_present_companyIds && that_present_companyIds))
        return false;
      if (!this.companyIds.equals(that.companyIds))
        return false;
    }

    boolean this_present_thirdPartyOrderNo = true && this.isSetThirdPartyOrderNo();
    boolean that_present_thirdPartyOrderNo = true && that.isSetThirdPartyOrderNo();
    if (this_present_thirdPartyOrderNo || that_present_thirdPartyOrderNo) {
      if (!(this_present_thirdPartyOrderNo && that_present_thirdPartyOrderNo))
        return false;
      if (!this.thirdPartyOrderNo.equals(that.thirdPartyOrderNo))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_payType = true && this.isSetPayType();
    boolean that_present_payType = true && that.isSetPayType();
    if (this_present_payType || that_present_payType) {
      if (!(this_present_payType && that_present_payType))
        return false;
      if (!this.payType.equals(that.payType))
        return false;
    }

    boolean this_present_groupId = true && this.isSetGroupId();
    boolean that_present_groupId = true && that.isSetGroupId();
    if (this_present_groupId || that_present_groupId) {
      if (!(this_present_groupId && that_present_groupId))
        return false;
      if (this.groupId != that.groupId)
        return false;
    }

    boolean this_present_pageOption = true && this.isSetPageOption();
    boolean that_present_pageOption = true && that.isSetPageOption();
    if (this_present_pageOption || that_present_pageOption) {
      if (!(this_present_pageOption && that_present_pageOption))
        return false;
      if (!this.pageOption.equals(that.pageOption))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ReqOrderOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderIds()).compareTo(other.isSetOrderIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderIds, other.orderIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductIds()).compareTo(other.isSetProductIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productIds, other.productIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyIds()).compareTo(other.isSetCompanyIds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyIds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyIds, other.companyIds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdPartyOrderNo()).compareTo(other.isSetThirdPartyOrderNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdPartyOrderNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdPartyOrderNo, other.thirdPartyOrderNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayType()).compareTo(other.isSetPayType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payType, other.payType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGroupId()).compareTo(other.isSetGroupId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGroupId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.groupId, other.groupId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPageOption()).compareTo(other.isSetPageOption());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageOption()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pageOption, other.pageOption);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReqOrderOption(");
    boolean first = true;

    if (isSetOrderIds()) {
      sb.append("orderIds:");
      if (this.orderIds == null) {
        sb.append("null");
      } else {
        sb.append(this.orderIds);
      }
      first = false;
    }
    if (isSetProductIds()) {
      if (!first) sb.append(", ");
      sb.append("productIds:");
      if (this.productIds == null) {
        sb.append("null");
      } else {
        sb.append(this.productIds);
      }
      first = false;
    }
    if (isSetCompanyIds()) {
      if (!first) sb.append(", ");
      sb.append("companyIds:");
      if (this.companyIds == null) {
        sb.append("null");
      } else {
        sb.append(this.companyIds);
      }
      first = false;
    }
    if (isSetThirdPartyOrderNo()) {
      if (!first) sb.append(", ");
      sb.append("thirdPartyOrderNo:");
      if (this.thirdPartyOrderNo == null) {
        sb.append("null");
      } else {
        sb.append(this.thirdPartyOrderNo);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      if (this.status == null) {
        sb.append("null");
      } else {
        sb.append(this.status);
      }
      first = false;
    }
    if (isSetPayType()) {
      if (!first) sb.append(", ");
      sb.append("payType:");
      if (this.payType == null) {
        sb.append("null");
      } else {
        sb.append(this.payType);
      }
      first = false;
    }
    if (isSetGroupId()) {
      if (!first) sb.append(", ");
      sb.append("groupId:");
      sb.append(this.groupId);
      first = false;
    }
    if (isSetPageOption()) {
      if (!first) sb.append(", ");
      sb.append("pageOption:");
      if (this.pageOption == null) {
        sb.append("null");
      } else {
        sb.append(this.pageOption);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (pageOption != null) {
      pageOption.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReqOrderOptionStandardSchemeFactory implements SchemeFactory {
    public ReqOrderOptionStandardScheme getScheme() {
      return new ReqOrderOptionStandardScheme();
    }
  }

  private static class ReqOrderOptionStandardScheme extends StandardScheme<ReqOrderOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReqOrderOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set56 = iprot.readSetBegin();
                struct.orderIds = new HashSet<Integer>(2*_set56.size);
                for (int _i57 = 0; _i57 < _set56.size; ++_i57)
                {
                  int _elem58;
                  _elem58 = iprot.readI32();
                  struct.orderIds.add(_elem58);
                }
                iprot.readSetEnd();
              }
              struct.setOrderIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PRODUCT_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set59 = iprot.readSetBegin();
                struct.productIds = new HashSet<Integer>(2*_set59.size);
                for (int _i60 = 0; _i60 < _set59.size; ++_i60)
                {
                  int _elem61;
                  _elem61 = iprot.readI32();
                  struct.productIds.add(_elem61);
                }
                iprot.readSetEnd();
              }
              struct.setProductIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // COMPANY_IDS
            if (schemeField.type == org.apache.thrift.protocol.TType.SET) {
              {
                org.apache.thrift.protocol.TSet _set62 = iprot.readSetBegin();
                struct.companyIds = new HashSet<Integer>(2*_set62.size);
                for (int _i63 = 0; _i63 < _set62.size; ++_i63)
                {
                  int _elem64;
                  _elem64 = iprot.readI32();
                  struct.companyIds.add(_elem64);
                }
                iprot.readSetEnd();
              }
              struct.setCompanyIdsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // THIRD_PARTY_ORDER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdPartyOrderNo = iprot.readString();
              struct.setThirdPartyOrderNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = OrderStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PAY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.payType = PayType.findByValue(iprot.readI32());
              struct.setPayTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.groupId = iprot.readI32();
              struct.setGroupIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // PAGE_OPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
              struct.pageOption.read(iprot);
              struct.setPageOptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReqOrderOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.orderIds != null) {
        if (struct.isSetOrderIds()) {
          oprot.writeFieldBegin(ORDER_IDS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.orderIds.size()));
            for (int _iter65 : struct.orderIds)
            {
              oprot.writeI32(_iter65);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.productIds != null) {
        if (struct.isSetProductIds()) {
          oprot.writeFieldBegin(PRODUCT_IDS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.productIds.size()));
            for (int _iter66 : struct.productIds)
            {
              oprot.writeI32(_iter66);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyIds != null) {
        if (struct.isSetCompanyIds()) {
          oprot.writeFieldBegin(COMPANY_IDS_FIELD_DESC);
          {
            oprot.writeSetBegin(new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, struct.companyIds.size()));
            for (int _iter67 : struct.companyIds)
            {
              oprot.writeI32(_iter67);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.thirdPartyOrderNo != null) {
        if (struct.isSetThirdPartyOrderNo()) {
          oprot.writeFieldBegin(THIRD_PARTY_ORDER_NO_FIELD_DESC);
          oprot.writeString(struct.thirdPartyOrderNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.status != null) {
        if (struct.isSetStatus()) {
          oprot.writeFieldBegin(STATUS_FIELD_DESC);
          oprot.writeI32(struct.status.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.payType != null) {
        if (struct.isSetPayType()) {
          oprot.writeFieldBegin(PAY_TYPE_FIELD_DESC);
          oprot.writeI32(struct.payType.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetGroupId()) {
        oprot.writeFieldBegin(GROUP_ID_FIELD_DESC);
        oprot.writeI32(struct.groupId);
        oprot.writeFieldEnd();
      }
      if (struct.pageOption != null) {
        if (struct.isSetPageOption()) {
          oprot.writeFieldBegin(PAGE_OPTION_FIELD_DESC);
          struct.pageOption.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReqOrderOptionTupleSchemeFactory implements SchemeFactory {
    public ReqOrderOptionTupleScheme getScheme() {
      return new ReqOrderOptionTupleScheme();
    }
  }

  private static class ReqOrderOptionTupleScheme extends TupleScheme<ReqOrderOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReqOrderOption struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderIds()) {
        optionals.set(0);
      }
      if (struct.isSetProductIds()) {
        optionals.set(1);
      }
      if (struct.isSetCompanyIds()) {
        optionals.set(2);
      }
      if (struct.isSetThirdPartyOrderNo()) {
        optionals.set(3);
      }
      if (struct.isSetStatus()) {
        optionals.set(4);
      }
      if (struct.isSetPayType()) {
        optionals.set(5);
      }
      if (struct.isSetGroupId()) {
        optionals.set(6);
      }
      if (struct.isSetPageOption()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetOrderIds()) {
        {
          oprot.writeI32(struct.orderIds.size());
          for (int _iter68 : struct.orderIds)
          {
            oprot.writeI32(_iter68);
          }
        }
      }
      if (struct.isSetProductIds()) {
        {
          oprot.writeI32(struct.productIds.size());
          for (int _iter69 : struct.productIds)
          {
            oprot.writeI32(_iter69);
          }
        }
      }
      if (struct.isSetCompanyIds()) {
        {
          oprot.writeI32(struct.companyIds.size());
          for (int _iter70 : struct.companyIds)
          {
            oprot.writeI32(_iter70);
          }
        }
      }
      if (struct.isSetThirdPartyOrderNo()) {
        oprot.writeString(struct.thirdPartyOrderNo);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status.getValue());
      }
      if (struct.isSetPayType()) {
        oprot.writeI32(struct.payType.getValue());
      }
      if (struct.isSetGroupId()) {
        oprot.writeI32(struct.groupId);
      }
      if (struct.isSetPageOption()) {
        struct.pageOption.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReqOrderOption struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TSet _set71 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.orderIds = new HashSet<Integer>(2*_set71.size);
          for (int _i72 = 0; _i72 < _set71.size; ++_i72)
          {
            int _elem73;
            _elem73 = iprot.readI32();
            struct.orderIds.add(_elem73);
          }
        }
        struct.setOrderIdsIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TSet _set74 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.productIds = new HashSet<Integer>(2*_set74.size);
          for (int _i75 = 0; _i75 < _set74.size; ++_i75)
          {
            int _elem76;
            _elem76 = iprot.readI32();
            struct.productIds.add(_elem76);
          }
        }
        struct.setProductIdsIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TSet _set77 = new org.apache.thrift.protocol.TSet(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.companyIds = new HashSet<Integer>(2*_set77.size);
          for (int _i78 = 0; _i78 < _set77.size; ++_i78)
          {
            int _elem79;
            _elem79 = iprot.readI32();
            struct.companyIds.add(_elem79);
          }
        }
        struct.setCompanyIdsIsSet(true);
      }
      if (incoming.get(3)) {
        struct.thirdPartyOrderNo = iprot.readString();
        struct.setThirdPartyOrderNoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.status = OrderStatus.findByValue(iprot.readI32());
        struct.setStatusIsSet(true);
      }
      if (incoming.get(5)) {
        struct.payType = PayType.findByValue(iprot.readI32());
        struct.setPayTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.groupId = iprot.readI32();
        struct.setGroupIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.pageOption = new org.soldier.platform.page.IndexedPageOption();
        struct.pageOption.read(iprot);
        struct.setPageOptionIsSet(true);
      }
    }
  }

}

