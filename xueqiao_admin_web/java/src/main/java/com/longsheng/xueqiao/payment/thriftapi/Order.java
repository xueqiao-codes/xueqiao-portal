/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.longsheng.xueqiao.payment.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class Order implements org.apache.thrift.TBase<Order, Order._Fields>, java.io.Serializable, Cloneable, Comparable<Order> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Order");

  private static final org.apache.thrift.protocol.TField ORDER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("orderId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField SOURCE_FIELD_DESC = new org.apache.thrift.protocol.TField("source", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField PRODUCT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("productId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyId", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField COMPANY_GROUP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("companyGroupId", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField PRODUCT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("productName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PRODUCT_DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("productDescription", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField PRODUCT_QUANTITY_FIELD_DESC = new org.apache.thrift.protocol.TField("productQuantity", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField PRICE_FIELD_DESC = new org.apache.thrift.protocol.TField("price", org.apache.thrift.protocol.TType.DOUBLE, (short)9);
  private static final org.apache.thrift.protocol.TField CURRENCY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("currencyType", org.apache.thrift.protocol.TType.I32, (short)10);
  private static final org.apache.thrift.protocol.TField TOTAL_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("totalAmount", org.apache.thrift.protocol.TType.DOUBLE, (short)11);
  private static final org.apache.thrift.protocol.TField PAY_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("payType", org.apache.thrift.protocol.TType.I32, (short)12);
  private static final org.apache.thrift.protocol.TField THIRD_PARTY_ORDER_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("thirdPartyOrderNo", org.apache.thrift.protocol.TType.STRING, (short)13);
  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.I32, (short)14);
  private static final org.apache.thrift.protocol.TField TRADE_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("tradeInfo", org.apache.thrift.protocol.TType.STRING, (short)15);
  private static final org.apache.thrift.protocol.TField NEED_OPERATOR_FIELD_DESC = new org.apache.thrift.protocol.TField("needOperator", org.apache.thrift.protocol.TType.BOOL, (short)16);
  private static final org.apache.thrift.protocol.TField OPERATOR_FIELD_DESC = new org.apache.thrift.protocol.TField("operator", org.apache.thrift.protocol.TType.STRING, (short)17);
  private static final org.apache.thrift.protocol.TField OPERATION_FIELD_DESC = new org.apache.thrift.protocol.TField("operation", org.apache.thrift.protocol.TType.I32, (short)18);
  private static final org.apache.thrift.protocol.TField COMPANY_GROUP_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("companyGroupName", org.apache.thrift.protocol.TType.STRING, (short)19);
  private static final org.apache.thrift.protocol.TField EXTRA_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("extraInfo", org.apache.thrift.protocol.TType.STRING, (short)20);
  private static final org.apache.thrift.protocol.TField CREATE_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("createTimestamp", org.apache.thrift.protocol.TType.I64, (short)30);
  private static final org.apache.thrift.protocol.TField LAST_MODIFY_TIMESTAMP_FIELD_DESC = new org.apache.thrift.protocol.TField("lastModifyTimestamp", org.apache.thrift.protocol.TType.I64, (short)31);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new OrderStandardSchemeFactory());
    schemes.put(TupleScheme.class, new OrderTupleSchemeFactory());
  }

  public int orderId; // optional
  /**
   * 
   * @see OrderSource
   */
  public OrderSource source; // optional
  public int productId; // optional
  public int companyId; // optional
  public int companyGroupId; // optional
  public String productName; // optional
  public String productDescription; // optional
  public int productQuantity; // optional
  public double price; // optional
  /**
   * 
   * @see com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType
   */
  public com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType currencyType; // optional
  public double totalAmount; // optional
  /**
   * 
   * @see PayType
   */
  public PayType payType; // optional
  public String thirdPartyOrderNo; // optional
  /**
   * 
   * @see OrderStatus
   */
  public OrderStatus status; // optional
  public String tradeInfo; // optional
  public boolean needOperator; // optional
  public String operator; // optional
  /**
   * 
   * @see com.longsheng.xueqiao.payment.product.thriftapi.Operation
   */
  public com.longsheng.xueqiao.payment.product.thriftapi.Operation operation; // optional
  public String companyGroupName; // optional
  public String extraInfo; // optional
  public long createTimestamp; // optional
  public long lastModifyTimestamp; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ORDER_ID((short)1, "orderId"),
    /**
     * 
     * @see OrderSource
     */
    SOURCE((short)2, "source"),
    PRODUCT_ID((short)3, "productId"),
    COMPANY_ID((short)4, "companyId"),
    COMPANY_GROUP_ID((short)5, "companyGroupId"),
    PRODUCT_NAME((short)6, "productName"),
    PRODUCT_DESCRIPTION((short)7, "productDescription"),
    PRODUCT_QUANTITY((short)8, "productQuantity"),
    PRICE((short)9, "price"),
    /**
     * 
     * @see com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType
     */
    CURRENCY_TYPE((short)10, "currencyType"),
    TOTAL_AMOUNT((short)11, "totalAmount"),
    /**
     * 
     * @see PayType
     */
    PAY_TYPE((short)12, "payType"),
    THIRD_PARTY_ORDER_NO((short)13, "thirdPartyOrderNo"),
    /**
     * 
     * @see OrderStatus
     */
    STATUS((short)14, "status"),
    TRADE_INFO((short)15, "tradeInfo"),
    NEED_OPERATOR((short)16, "needOperator"),
    OPERATOR((short)17, "operator"),
    /**
     * 
     * @see com.longsheng.xueqiao.payment.product.thriftapi.Operation
     */
    OPERATION((short)18, "operation"),
    COMPANY_GROUP_NAME((short)19, "companyGroupName"),
    EXTRA_INFO((short)20, "extraInfo"),
    CREATE_TIMESTAMP((short)30, "createTimestamp"),
    LAST_MODIFY_TIMESTAMP((short)31, "lastModifyTimestamp");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ORDER_ID
          return ORDER_ID;
        case 2: // SOURCE
          return SOURCE;
        case 3: // PRODUCT_ID
          return PRODUCT_ID;
        case 4: // COMPANY_ID
          return COMPANY_ID;
        case 5: // COMPANY_GROUP_ID
          return COMPANY_GROUP_ID;
        case 6: // PRODUCT_NAME
          return PRODUCT_NAME;
        case 7: // PRODUCT_DESCRIPTION
          return PRODUCT_DESCRIPTION;
        case 8: // PRODUCT_QUANTITY
          return PRODUCT_QUANTITY;
        case 9: // PRICE
          return PRICE;
        case 10: // CURRENCY_TYPE
          return CURRENCY_TYPE;
        case 11: // TOTAL_AMOUNT
          return TOTAL_AMOUNT;
        case 12: // PAY_TYPE
          return PAY_TYPE;
        case 13: // THIRD_PARTY_ORDER_NO
          return THIRD_PARTY_ORDER_NO;
        case 14: // STATUS
          return STATUS;
        case 15: // TRADE_INFO
          return TRADE_INFO;
        case 16: // NEED_OPERATOR
          return NEED_OPERATOR;
        case 17: // OPERATOR
          return OPERATOR;
        case 18: // OPERATION
          return OPERATION;
        case 19: // COMPANY_GROUP_NAME
          return COMPANY_GROUP_NAME;
        case 20: // EXTRA_INFO
          return EXTRA_INFO;
        case 30: // CREATE_TIMESTAMP
          return CREATE_TIMESTAMP;
        case 31: // LAST_MODIFY_TIMESTAMP
          return LAST_MODIFY_TIMESTAMP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ORDERID_ISSET_ID = 0;
  private static final int __PRODUCTID_ISSET_ID = 1;
  private static final int __COMPANYID_ISSET_ID = 2;
  private static final int __COMPANYGROUPID_ISSET_ID = 3;
  private static final int __PRODUCTQUANTITY_ISSET_ID = 4;
  private static final int __PRICE_ISSET_ID = 5;
  private static final int __TOTALAMOUNT_ISSET_ID = 6;
  private static final int __NEEDOPERATOR_ISSET_ID = 7;
  private static final int __CREATETIMESTAMP_ISSET_ID = 8;
  private static final int __LASTMODIFYTIMESTAMP_ISSET_ID = 9;
  private short __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ORDER_ID,_Fields.SOURCE,_Fields.PRODUCT_ID,_Fields.COMPANY_ID,_Fields.COMPANY_GROUP_ID,_Fields.PRODUCT_NAME,_Fields.PRODUCT_DESCRIPTION,_Fields.PRODUCT_QUANTITY,_Fields.PRICE,_Fields.CURRENCY_TYPE,_Fields.TOTAL_AMOUNT,_Fields.PAY_TYPE,_Fields.THIRD_PARTY_ORDER_NO,_Fields.STATUS,_Fields.TRADE_INFO,_Fields.NEED_OPERATOR,_Fields.OPERATOR,_Fields.OPERATION,_Fields.COMPANY_GROUP_NAME,_Fields.EXTRA_INFO,_Fields.CREATE_TIMESTAMP,_Fields.LAST_MODIFY_TIMESTAMP};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ORDER_ID, new org.apache.thrift.meta_data.FieldMetaData("orderId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SOURCE, new org.apache.thrift.meta_data.FieldMetaData("source", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, OrderSource.class)));
    tmpMap.put(_Fields.PRODUCT_ID, new org.apache.thrift.meta_data.FieldMetaData("productId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("companyId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_GROUP_ID, new org.apache.thrift.meta_data.FieldMetaData("companyGroupId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRODUCT_NAME, new org.apache.thrift.meta_data.FieldMetaData("productName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("productDescription", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PRODUCT_QUANTITY, new org.apache.thrift.meta_data.FieldMetaData("productQuantity", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PRICE, new org.apache.thrift.meta_data.FieldMetaData("price", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.CURRENCY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("currencyType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType.class)));
    tmpMap.put(_Fields.TOTAL_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("totalAmount", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.PAY_TYPE, new org.apache.thrift.meta_data.FieldMetaData("payType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, PayType.class)));
    tmpMap.put(_Fields.THIRD_PARTY_ORDER_NO, new org.apache.thrift.meta_data.FieldMetaData("thirdPartyOrderNo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, OrderStatus.class)));
    tmpMap.put(_Fields.TRADE_INFO, new org.apache.thrift.meta_data.FieldMetaData("tradeInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.NEED_OPERATOR, new org.apache.thrift.meta_data.FieldMetaData("needOperator", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.OPERATOR, new org.apache.thrift.meta_data.FieldMetaData("operator", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.OPERATION, new org.apache.thrift.meta_data.FieldMetaData("operation", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.longsheng.xueqiao.payment.product.thriftapi.Operation.class)));
    tmpMap.put(_Fields.COMPANY_GROUP_NAME, new org.apache.thrift.meta_data.FieldMetaData("companyGroupName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_INFO, new org.apache.thrift.meta_data.FieldMetaData("extraInfo", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("createTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_MODIFY_TIMESTAMP, new org.apache.thrift.meta_data.FieldMetaData("lastModifyTimestamp", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Order.class, metaDataMap);
  }

  public Order() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Order(Order other) {
    __isset_bitfield = other.__isset_bitfield;
    this.orderId = other.orderId;
    if (other.isSetSource()) {
      this.source = other.source;
    }
    this.productId = other.productId;
    this.companyId = other.companyId;
    this.companyGroupId = other.companyGroupId;
    if (other.isSetProductName()) {
      this.productName = other.productName;
    }
    if (other.isSetProductDescription()) {
      this.productDescription = other.productDescription;
    }
    this.productQuantity = other.productQuantity;
    this.price = other.price;
    if (other.isSetCurrencyType()) {
      this.currencyType = other.currencyType;
    }
    this.totalAmount = other.totalAmount;
    if (other.isSetPayType()) {
      this.payType = other.payType;
    }
    if (other.isSetThirdPartyOrderNo()) {
      this.thirdPartyOrderNo = other.thirdPartyOrderNo;
    }
    if (other.isSetStatus()) {
      this.status = other.status;
    }
    if (other.isSetTradeInfo()) {
      this.tradeInfo = other.tradeInfo;
    }
    this.needOperator = other.needOperator;
    if (other.isSetOperator()) {
      this.operator = other.operator;
    }
    if (other.isSetOperation()) {
      this.operation = other.operation;
    }
    if (other.isSetCompanyGroupName()) {
      this.companyGroupName = other.companyGroupName;
    }
    if (other.isSetExtraInfo()) {
      this.extraInfo = other.extraInfo;
    }
    this.createTimestamp = other.createTimestamp;
    this.lastModifyTimestamp = other.lastModifyTimestamp;
  }

  public Order deepCopy() {
    return new Order(this);
  }

  @Override
  public void clear() {
    setOrderIdIsSet(false);
    this.orderId = 0;
    this.source = null;
    setProductIdIsSet(false);
    this.productId = 0;
    setCompanyIdIsSet(false);
    this.companyId = 0;
    setCompanyGroupIdIsSet(false);
    this.companyGroupId = 0;
    this.productName = null;
    this.productDescription = null;
    setProductQuantityIsSet(false);
    this.productQuantity = 0;
    setPriceIsSet(false);
    this.price = 0.0;
    this.currencyType = null;
    setTotalAmountIsSet(false);
    this.totalAmount = 0.0;
    this.payType = null;
    this.thirdPartyOrderNo = null;
    this.status = null;
    this.tradeInfo = null;
    setNeedOperatorIsSet(false);
    this.needOperator = false;
    this.operator = null;
    this.operation = null;
    this.companyGroupName = null;
    this.extraInfo = null;
    setCreateTimestampIsSet(false);
    this.createTimestamp = 0;
    setLastModifyTimestampIsSet(false);
    this.lastModifyTimestamp = 0;
  }

  public int getOrderId() {
    return this.orderId;
  }

  public Order setOrderId(int orderId) {
    this.orderId = orderId;
    setOrderIdIsSet(true);
    return this;
  }

  public void unsetOrderId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ORDERID_ISSET_ID);
  }

  /** Returns true if field orderId is set (has been assigned a value) and false otherwise */
  public boolean isSetOrderId() {
    return EncodingUtils.testBit(__isset_bitfield, __ORDERID_ISSET_ID);
  }

  public void setOrderIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ORDERID_ISSET_ID, value);
  }

  /**
   * 
   * @see OrderSource
   */
  public OrderSource getSource() {
    return this.source;
  }

  /**
   * 
   * @see OrderSource
   */
  public Order setSource(OrderSource source) {
    this.source = source;
    return this;
  }

  public void unsetSource() {
    this.source = null;
  }

  /** Returns true if field source is set (has been assigned a value) and false otherwise */
  public boolean isSetSource() {
    return this.source != null;
  }

  public void setSourceIsSet(boolean value) {
    if (!value) {
      this.source = null;
    }
  }

  public int getProductId() {
    return this.productId;
  }

  public Order setProductId(int productId) {
    this.productId = productId;
    setProductIdIsSet(true);
    return this;
  }

  public void unsetProductId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  /** Returns true if field productId is set (has been assigned a value) and false otherwise */
  public boolean isSetProductId() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCTID_ISSET_ID);
  }

  public void setProductIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCTID_ISSET_ID, value);
  }

  public int getCompanyId() {
    return this.companyId;
  }

  public Order setCompanyId(int companyId) {
    this.companyId = companyId;
    setCompanyIdIsSet(true);
    return this;
  }

  public void unsetCompanyId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  /** Returns true if field companyId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyId() {
    return EncodingUtils.testBit(__isset_bitfield, __COMPANYID_ISSET_ID);
  }

  public void setCompanyIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMPANYID_ISSET_ID, value);
  }

  public int getCompanyGroupId() {
    return this.companyGroupId;
  }

  public Order setCompanyGroupId(int companyGroupId) {
    this.companyGroupId = companyGroupId;
    setCompanyGroupIdIsSet(true);
    return this;
  }

  public void unsetCompanyGroupId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMPANYGROUPID_ISSET_ID);
  }

  /** Returns true if field companyGroupId is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyGroupId() {
    return EncodingUtils.testBit(__isset_bitfield, __COMPANYGROUPID_ISSET_ID);
  }

  public void setCompanyGroupIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMPANYGROUPID_ISSET_ID, value);
  }

  public String getProductName() {
    return this.productName;
  }

  public Order setProductName(String productName) {
    this.productName = productName;
    return this;
  }

  public void unsetProductName() {
    this.productName = null;
  }

  /** Returns true if field productName is set (has been assigned a value) and false otherwise */
  public boolean isSetProductName() {
    return this.productName != null;
  }

  public void setProductNameIsSet(boolean value) {
    if (!value) {
      this.productName = null;
    }
  }

  public String getProductDescription() {
    return this.productDescription;
  }

  public Order setProductDescription(String productDescription) {
    this.productDescription = productDescription;
    return this;
  }

  public void unsetProductDescription() {
    this.productDescription = null;
  }

  /** Returns true if field productDescription is set (has been assigned a value) and false otherwise */
  public boolean isSetProductDescription() {
    return this.productDescription != null;
  }

  public void setProductDescriptionIsSet(boolean value) {
    if (!value) {
      this.productDescription = null;
    }
  }

  public int getProductQuantity() {
    return this.productQuantity;
  }

  public Order setProductQuantity(int productQuantity) {
    this.productQuantity = productQuantity;
    setProductQuantityIsSet(true);
    return this;
  }

  public void unsetProductQuantity() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRODUCTQUANTITY_ISSET_ID);
  }

  /** Returns true if field productQuantity is set (has been assigned a value) and false otherwise */
  public boolean isSetProductQuantity() {
    return EncodingUtils.testBit(__isset_bitfield, __PRODUCTQUANTITY_ISSET_ID);
  }

  public void setProductQuantityIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRODUCTQUANTITY_ISSET_ID, value);
  }

  public double getPrice() {
    return this.price;
  }

  public Order setPrice(double price) {
    this.price = price;
    setPriceIsSet(true);
    return this;
  }

  public void unsetPrice() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  /** Returns true if field price is set (has been assigned a value) and false otherwise */
  public boolean isSetPrice() {
    return EncodingUtils.testBit(__isset_bitfield, __PRICE_ISSET_ID);
  }

  public void setPriceIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __PRICE_ISSET_ID, value);
  }

  /**
   * 
   * @see com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType
   */
  public com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType getCurrencyType() {
    return this.currencyType;
  }

  /**
   * 
   * @see com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType
   */
  public Order setCurrencyType(com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType currencyType) {
    this.currencyType = currencyType;
    return this;
  }

  public void unsetCurrencyType() {
    this.currencyType = null;
  }

  /** Returns true if field currencyType is set (has been assigned a value) and false otherwise */
  public boolean isSetCurrencyType() {
    return this.currencyType != null;
  }

  public void setCurrencyTypeIsSet(boolean value) {
    if (!value) {
      this.currencyType = null;
    }
  }

  public double getTotalAmount() {
    return this.totalAmount;
  }

  public Order setTotalAmount(double totalAmount) {
    this.totalAmount = totalAmount;
    setTotalAmountIsSet(true);
    return this;
  }

  public void unsetTotalAmount() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __TOTALAMOUNT_ISSET_ID);
  }

  /** Returns true if field totalAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetTotalAmount() {
    return EncodingUtils.testBit(__isset_bitfield, __TOTALAMOUNT_ISSET_ID);
  }

  public void setTotalAmountIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __TOTALAMOUNT_ISSET_ID, value);
  }

  /**
   * 
   * @see PayType
   */
  public PayType getPayType() {
    return this.payType;
  }

  /**
   * 
   * @see PayType
   */
  public Order setPayType(PayType payType) {
    this.payType = payType;
    return this;
  }

  public void unsetPayType() {
    this.payType = null;
  }

  /** Returns true if field payType is set (has been assigned a value) and false otherwise */
  public boolean isSetPayType() {
    return this.payType != null;
  }

  public void setPayTypeIsSet(boolean value) {
    if (!value) {
      this.payType = null;
    }
  }

  public String getThirdPartyOrderNo() {
    return this.thirdPartyOrderNo;
  }

  public Order setThirdPartyOrderNo(String thirdPartyOrderNo) {
    this.thirdPartyOrderNo = thirdPartyOrderNo;
    return this;
  }

  public void unsetThirdPartyOrderNo() {
    this.thirdPartyOrderNo = null;
  }

  /** Returns true if field thirdPartyOrderNo is set (has been assigned a value) and false otherwise */
  public boolean isSetThirdPartyOrderNo() {
    return this.thirdPartyOrderNo != null;
  }

  public void setThirdPartyOrderNoIsSet(boolean value) {
    if (!value) {
      this.thirdPartyOrderNo = null;
    }
  }

  /**
   * 
   * @see OrderStatus
   */
  public OrderStatus getStatus() {
    return this.status;
  }

  /**
   * 
   * @see OrderStatus
   */
  public Order setStatus(OrderStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public String getTradeInfo() {
    return this.tradeInfo;
  }

  public Order setTradeInfo(String tradeInfo) {
    this.tradeInfo = tradeInfo;
    return this;
  }

  public void unsetTradeInfo() {
    this.tradeInfo = null;
  }

  /** Returns true if field tradeInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetTradeInfo() {
    return this.tradeInfo != null;
  }

  public void setTradeInfoIsSet(boolean value) {
    if (!value) {
      this.tradeInfo = null;
    }
  }

  public boolean isNeedOperator() {
    return this.needOperator;
  }

  public Order setNeedOperator(boolean needOperator) {
    this.needOperator = needOperator;
    setNeedOperatorIsSet(true);
    return this;
  }

  public void unsetNeedOperator() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __NEEDOPERATOR_ISSET_ID);
  }

  /** Returns true if field needOperator is set (has been assigned a value) and false otherwise */
  public boolean isSetNeedOperator() {
    return EncodingUtils.testBit(__isset_bitfield, __NEEDOPERATOR_ISSET_ID);
  }

  public void setNeedOperatorIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __NEEDOPERATOR_ISSET_ID, value);
  }

  public String getOperator() {
    return this.operator;
  }

  public Order setOperator(String operator) {
    this.operator = operator;
    return this;
  }

  public void unsetOperator() {
    this.operator = null;
  }

  /** Returns true if field operator is set (has been assigned a value) and false otherwise */
  public boolean isSetOperator() {
    return this.operator != null;
  }

  public void setOperatorIsSet(boolean value) {
    if (!value) {
      this.operator = null;
    }
  }

  /**
   * 
   * @see com.longsheng.xueqiao.payment.product.thriftapi.Operation
   */
  public com.longsheng.xueqiao.payment.product.thriftapi.Operation getOperation() {
    return this.operation;
  }

  /**
   * 
   * @see com.longsheng.xueqiao.payment.product.thriftapi.Operation
   */
  public Order setOperation(com.longsheng.xueqiao.payment.product.thriftapi.Operation operation) {
    this.operation = operation;
    return this;
  }

  public void unsetOperation() {
    this.operation = null;
  }

  /** Returns true if field operation is set (has been assigned a value) and false otherwise */
  public boolean isSetOperation() {
    return this.operation != null;
  }

  public void setOperationIsSet(boolean value) {
    if (!value) {
      this.operation = null;
    }
  }

  public String getCompanyGroupName() {
    return this.companyGroupName;
  }

  public Order setCompanyGroupName(String companyGroupName) {
    this.companyGroupName = companyGroupName;
    return this;
  }

  public void unsetCompanyGroupName() {
    this.companyGroupName = null;
  }

  /** Returns true if field companyGroupName is set (has been assigned a value) and false otherwise */
  public boolean isSetCompanyGroupName() {
    return this.companyGroupName != null;
  }

  public void setCompanyGroupNameIsSet(boolean value) {
    if (!value) {
      this.companyGroupName = null;
    }
  }

  public String getExtraInfo() {
    return this.extraInfo;
  }

  public Order setExtraInfo(String extraInfo) {
    this.extraInfo = extraInfo;
    return this;
  }

  public void unsetExtraInfo() {
    this.extraInfo = null;
  }

  /** Returns true if field extraInfo is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraInfo() {
    return this.extraInfo != null;
  }

  public void setExtraInfoIsSet(boolean value) {
    if (!value) {
      this.extraInfo = null;
    }
  }

  public long getCreateTimestamp() {
    return this.createTimestamp;
  }

  public Order setCreateTimestamp(long createTimestamp) {
    this.createTimestamp = createTimestamp;
    setCreateTimestampIsSet(true);
    return this;
  }

  public void unsetCreateTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  /** Returns true if field createTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID);
  }

  public void setCreateTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CREATETIMESTAMP_ISSET_ID, value);
  }

  public long getLastModifyTimestamp() {
    return this.lastModifyTimestamp;
  }

  public Order setLastModifyTimestamp(long lastModifyTimestamp) {
    this.lastModifyTimestamp = lastModifyTimestamp;
    setLastModifyTimestampIsSet(true);
    return this;
  }

  public void unsetLastModifyTimestamp() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  /** Returns true if field lastModifyTimestamp is set (has been assigned a value) and false otherwise */
  public boolean isSetLastModifyTimestamp() {
    return EncodingUtils.testBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID);
  }

  public void setLastModifyTimestampIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __LASTMODIFYTIMESTAMP_ISSET_ID, value);
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ORDER_ID:
      if (value == null) {
        unsetOrderId();
      } else {
        setOrderId((Integer)value);
      }
      break;

    case SOURCE:
      if (value == null) {
        unsetSource();
      } else {
        setSource((OrderSource)value);
      }
      break;

    case PRODUCT_ID:
      if (value == null) {
        unsetProductId();
      } else {
        setProductId((Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompanyId();
      } else {
        setCompanyId((Integer)value);
      }
      break;

    case COMPANY_GROUP_ID:
      if (value == null) {
        unsetCompanyGroupId();
      } else {
        setCompanyGroupId((Integer)value);
      }
      break;

    case PRODUCT_NAME:
      if (value == null) {
        unsetProductName();
      } else {
        setProductName((String)value);
      }
      break;

    case PRODUCT_DESCRIPTION:
      if (value == null) {
        unsetProductDescription();
      } else {
        setProductDescription((String)value);
      }
      break;

    case PRODUCT_QUANTITY:
      if (value == null) {
        unsetProductQuantity();
      } else {
        setProductQuantity((Integer)value);
      }
      break;

    case PRICE:
      if (value == null) {
        unsetPrice();
      } else {
        setPrice((Double)value);
      }
      break;

    case CURRENCY_TYPE:
      if (value == null) {
        unsetCurrencyType();
      } else {
        setCurrencyType((com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType)value);
      }
      break;

    case TOTAL_AMOUNT:
      if (value == null) {
        unsetTotalAmount();
      } else {
        setTotalAmount((Double)value);
      }
      break;

    case PAY_TYPE:
      if (value == null) {
        unsetPayType();
      } else {
        setPayType((PayType)value);
      }
      break;

    case THIRD_PARTY_ORDER_NO:
      if (value == null) {
        unsetThirdPartyOrderNo();
      } else {
        setThirdPartyOrderNo((String)value);
      }
      break;

    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((OrderStatus)value);
      }
      break;

    case TRADE_INFO:
      if (value == null) {
        unsetTradeInfo();
      } else {
        setTradeInfo((String)value);
      }
      break;

    case NEED_OPERATOR:
      if (value == null) {
        unsetNeedOperator();
      } else {
        setNeedOperator((Boolean)value);
      }
      break;

    case OPERATOR:
      if (value == null) {
        unsetOperator();
      } else {
        setOperator((String)value);
      }
      break;

    case OPERATION:
      if (value == null) {
        unsetOperation();
      } else {
        setOperation((com.longsheng.xueqiao.payment.product.thriftapi.Operation)value);
      }
      break;

    case COMPANY_GROUP_NAME:
      if (value == null) {
        unsetCompanyGroupName();
      } else {
        setCompanyGroupName((String)value);
      }
      break;

    case EXTRA_INFO:
      if (value == null) {
        unsetExtraInfo();
      } else {
        setExtraInfo((String)value);
      }
      break;

    case CREATE_TIMESTAMP:
      if (value == null) {
        unsetCreateTimestamp();
      } else {
        setCreateTimestamp((Long)value);
      }
      break;

    case LAST_MODIFY_TIMESTAMP:
      if (value == null) {
        unsetLastModifyTimestamp();
      } else {
        setLastModifyTimestamp((Long)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ORDER_ID:
      return Integer.valueOf(getOrderId());

    case SOURCE:
      return getSource();

    case PRODUCT_ID:
      return Integer.valueOf(getProductId());

    case COMPANY_ID:
      return Integer.valueOf(getCompanyId());

    case COMPANY_GROUP_ID:
      return Integer.valueOf(getCompanyGroupId());

    case PRODUCT_NAME:
      return getProductName();

    case PRODUCT_DESCRIPTION:
      return getProductDescription();

    case PRODUCT_QUANTITY:
      return Integer.valueOf(getProductQuantity());

    case PRICE:
      return Double.valueOf(getPrice());

    case CURRENCY_TYPE:
      return getCurrencyType();

    case TOTAL_AMOUNT:
      return Double.valueOf(getTotalAmount());

    case PAY_TYPE:
      return getPayType();

    case THIRD_PARTY_ORDER_NO:
      return getThirdPartyOrderNo();

    case STATUS:
      return getStatus();

    case TRADE_INFO:
      return getTradeInfo();

    case NEED_OPERATOR:
      return Boolean.valueOf(isNeedOperator());

    case OPERATOR:
      return getOperator();

    case OPERATION:
      return getOperation();

    case COMPANY_GROUP_NAME:
      return getCompanyGroupName();

    case EXTRA_INFO:
      return getExtraInfo();

    case CREATE_TIMESTAMP:
      return Long.valueOf(getCreateTimestamp());

    case LAST_MODIFY_TIMESTAMP:
      return Long.valueOf(getLastModifyTimestamp());

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ORDER_ID:
      return isSetOrderId();
    case SOURCE:
      return isSetSource();
    case PRODUCT_ID:
      return isSetProductId();
    case COMPANY_ID:
      return isSetCompanyId();
    case COMPANY_GROUP_ID:
      return isSetCompanyGroupId();
    case PRODUCT_NAME:
      return isSetProductName();
    case PRODUCT_DESCRIPTION:
      return isSetProductDescription();
    case PRODUCT_QUANTITY:
      return isSetProductQuantity();
    case PRICE:
      return isSetPrice();
    case CURRENCY_TYPE:
      return isSetCurrencyType();
    case TOTAL_AMOUNT:
      return isSetTotalAmount();
    case PAY_TYPE:
      return isSetPayType();
    case THIRD_PARTY_ORDER_NO:
      return isSetThirdPartyOrderNo();
    case STATUS:
      return isSetStatus();
    case TRADE_INFO:
      return isSetTradeInfo();
    case NEED_OPERATOR:
      return isSetNeedOperator();
    case OPERATOR:
      return isSetOperator();
    case OPERATION:
      return isSetOperation();
    case COMPANY_GROUP_NAME:
      return isSetCompanyGroupName();
    case EXTRA_INFO:
      return isSetExtraInfo();
    case CREATE_TIMESTAMP:
      return isSetCreateTimestamp();
    case LAST_MODIFY_TIMESTAMP:
      return isSetLastModifyTimestamp();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Order)
      return this.equals((Order)that);
    return false;
  }

  public boolean equals(Order that) {
    if (that == null)
      return false;

    boolean this_present_orderId = true && this.isSetOrderId();
    boolean that_present_orderId = true && that.isSetOrderId();
    if (this_present_orderId || that_present_orderId) {
      if (!(this_present_orderId && that_present_orderId))
        return false;
      if (this.orderId != that.orderId)
        return false;
    }

    boolean this_present_source = true && this.isSetSource();
    boolean that_present_source = true && that.isSetSource();
    if (this_present_source || that_present_source) {
      if (!(this_present_source && that_present_source))
        return false;
      if (!this.source.equals(that.source))
        return false;
    }

    boolean this_present_productId = true && this.isSetProductId();
    boolean that_present_productId = true && that.isSetProductId();
    if (this_present_productId || that_present_productId) {
      if (!(this_present_productId && that_present_productId))
        return false;
      if (this.productId != that.productId)
        return false;
    }

    boolean this_present_companyId = true && this.isSetCompanyId();
    boolean that_present_companyId = true && that.isSetCompanyId();
    if (this_present_companyId || that_present_companyId) {
      if (!(this_present_companyId && that_present_companyId))
        return false;
      if (this.companyId != that.companyId)
        return false;
    }

    boolean this_present_companyGroupId = true && this.isSetCompanyGroupId();
    boolean that_present_companyGroupId = true && that.isSetCompanyGroupId();
    if (this_present_companyGroupId || that_present_companyGroupId) {
      if (!(this_present_companyGroupId && that_present_companyGroupId))
        return false;
      if (this.companyGroupId != that.companyGroupId)
        return false;
    }

    boolean this_present_productName = true && this.isSetProductName();
    boolean that_present_productName = true && that.isSetProductName();
    if (this_present_productName || that_present_productName) {
      if (!(this_present_productName && that_present_productName))
        return false;
      if (!this.productName.equals(that.productName))
        return false;
    }

    boolean this_present_productDescription = true && this.isSetProductDescription();
    boolean that_present_productDescription = true && that.isSetProductDescription();
    if (this_present_productDescription || that_present_productDescription) {
      if (!(this_present_productDescription && that_present_productDescription))
        return false;
      if (!this.productDescription.equals(that.productDescription))
        return false;
    }

    boolean this_present_productQuantity = true && this.isSetProductQuantity();
    boolean that_present_productQuantity = true && that.isSetProductQuantity();
    if (this_present_productQuantity || that_present_productQuantity) {
      if (!(this_present_productQuantity && that_present_productQuantity))
        return false;
      if (this.productQuantity != that.productQuantity)
        return false;
    }

    boolean this_present_price = true && this.isSetPrice();
    boolean that_present_price = true && that.isSetPrice();
    if (this_present_price || that_present_price) {
      if (!(this_present_price && that_present_price))
        return false;
      if (this.price != that.price)
        return false;
    }

    boolean this_present_currencyType = true && this.isSetCurrencyType();
    boolean that_present_currencyType = true && that.isSetCurrencyType();
    if (this_present_currencyType || that_present_currencyType) {
      if (!(this_present_currencyType && that_present_currencyType))
        return false;
      if (!this.currencyType.equals(that.currencyType))
        return false;
    }

    boolean this_present_totalAmount = true && this.isSetTotalAmount();
    boolean that_present_totalAmount = true && that.isSetTotalAmount();
    if (this_present_totalAmount || that_present_totalAmount) {
      if (!(this_present_totalAmount && that_present_totalAmount))
        return false;
      if (this.totalAmount != that.totalAmount)
        return false;
    }

    boolean this_present_payType = true && this.isSetPayType();
    boolean that_present_payType = true && that.isSetPayType();
    if (this_present_payType || that_present_payType) {
      if (!(this_present_payType && that_present_payType))
        return false;
      if (!this.payType.equals(that.payType))
        return false;
    }

    boolean this_present_thirdPartyOrderNo = true && this.isSetThirdPartyOrderNo();
    boolean that_present_thirdPartyOrderNo = true && that.isSetThirdPartyOrderNo();
    if (this_present_thirdPartyOrderNo || that_present_thirdPartyOrderNo) {
      if (!(this_present_thirdPartyOrderNo && that_present_thirdPartyOrderNo))
        return false;
      if (!this.thirdPartyOrderNo.equals(that.thirdPartyOrderNo))
        return false;
    }

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_tradeInfo = true && this.isSetTradeInfo();
    boolean that_present_tradeInfo = true && that.isSetTradeInfo();
    if (this_present_tradeInfo || that_present_tradeInfo) {
      if (!(this_present_tradeInfo && that_present_tradeInfo))
        return false;
      if (!this.tradeInfo.equals(that.tradeInfo))
        return false;
    }

    boolean this_present_needOperator = true && this.isSetNeedOperator();
    boolean that_present_needOperator = true && that.isSetNeedOperator();
    if (this_present_needOperator || that_present_needOperator) {
      if (!(this_present_needOperator && that_present_needOperator))
        return false;
      if (this.needOperator != that.needOperator)
        return false;
    }

    boolean this_present_operator = true && this.isSetOperator();
    boolean that_present_operator = true && that.isSetOperator();
    if (this_present_operator || that_present_operator) {
      if (!(this_present_operator && that_present_operator))
        return false;
      if (!this.operator.equals(that.operator))
        return false;
    }

    boolean this_present_operation = true && this.isSetOperation();
    boolean that_present_operation = true && that.isSetOperation();
    if (this_present_operation || that_present_operation) {
      if (!(this_present_operation && that_present_operation))
        return false;
      if (!this.operation.equals(that.operation))
        return false;
    }

    boolean this_present_companyGroupName = true && this.isSetCompanyGroupName();
    boolean that_present_companyGroupName = true && that.isSetCompanyGroupName();
    if (this_present_companyGroupName || that_present_companyGroupName) {
      if (!(this_present_companyGroupName && that_present_companyGroupName))
        return false;
      if (!this.companyGroupName.equals(that.companyGroupName))
        return false;
    }

    boolean this_present_extraInfo = true && this.isSetExtraInfo();
    boolean that_present_extraInfo = true && that.isSetExtraInfo();
    if (this_present_extraInfo || that_present_extraInfo) {
      if (!(this_present_extraInfo && that_present_extraInfo))
        return false;
      if (!this.extraInfo.equals(that.extraInfo))
        return false;
    }

    boolean this_present_createTimestamp = true && this.isSetCreateTimestamp();
    boolean that_present_createTimestamp = true && that.isSetCreateTimestamp();
    if (this_present_createTimestamp || that_present_createTimestamp) {
      if (!(this_present_createTimestamp && that_present_createTimestamp))
        return false;
      if (this.createTimestamp != that.createTimestamp)
        return false;
    }

    boolean this_present_lastModifyTimestamp = true && this.isSetLastModifyTimestamp();
    boolean that_present_lastModifyTimestamp = true && that.isSetLastModifyTimestamp();
    if (this_present_lastModifyTimestamp || that_present_lastModifyTimestamp) {
      if (!(this_present_lastModifyTimestamp && that_present_lastModifyTimestamp))
        return false;
      if (this.lastModifyTimestamp != that.lastModifyTimestamp)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(Order other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetOrderId()).compareTo(other.isSetOrderId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOrderId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.orderId, other.orderId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSource()).compareTo(other.isSetSource());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSource()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.source, other.source);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductId()).compareTo(other.isSetProductId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productId, other.productId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyId()).compareTo(other.isSetCompanyId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyId, other.companyId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyGroupId()).compareTo(other.isSetCompanyGroupId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyGroupId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyGroupId, other.companyGroupId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductName()).compareTo(other.isSetProductName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productName, other.productName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductDescription()).compareTo(other.isSetProductDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productDescription, other.productDescription);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetProductQuantity()).compareTo(other.isSetProductQuantity());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProductQuantity()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.productQuantity, other.productQuantity);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPrice()).compareTo(other.isSetPrice());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrice()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.price, other.price);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCurrencyType()).compareTo(other.isSetCurrencyType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCurrencyType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.currencyType, other.currencyType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTotalAmount()).compareTo(other.isSetTotalAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTotalAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.totalAmount, other.totalAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPayType()).compareTo(other.isSetPayType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payType, other.payType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetThirdPartyOrderNo()).compareTo(other.isSetThirdPartyOrderNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetThirdPartyOrderNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.thirdPartyOrderNo, other.thirdPartyOrderNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetStatus()).compareTo(other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetTradeInfo()).compareTo(other.isSetTradeInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTradeInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tradeInfo, other.tradeInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetNeedOperator()).compareTo(other.isSetNeedOperator());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNeedOperator()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.needOperator, other.needOperator);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperator()).compareTo(other.isSetOperator());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperator()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operator, other.operator);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetOperation()).compareTo(other.isSetOperation());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetOperation()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.operation, other.operation);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompanyGroupName()).compareTo(other.isSetCompanyGroupName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompanyGroupName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.companyGroupName, other.companyGroupName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetExtraInfo()).compareTo(other.isSetExtraInfo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraInfo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraInfo, other.extraInfo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTimestamp()).compareTo(other.isSetCreateTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTimestamp, other.createTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastModifyTimestamp()).compareTo(other.isSetLastModifyTimestamp());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastModifyTimestamp()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastModifyTimestamp, other.lastModifyTimestamp);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Order(");
    boolean first = true;

    if (isSetOrderId()) {
      sb.append("orderId:");
      sb.append(this.orderId);
      first = false;
    }
    if (isSetSource()) {
      if (!first) sb.append(", ");
      sb.append("source:");
      if (this.source == null) {
        sb.append("null");
      } else {
        sb.append(this.source);
      }
      first = false;
    }
    if (isSetProductId()) {
      if (!first) sb.append(", ");
      sb.append("productId:");
      sb.append(this.productId);
      first = false;
    }
    if (isSetCompanyId()) {
      if (!first) sb.append(", ");
      sb.append("companyId:");
      sb.append(this.companyId);
      first = false;
    }
    if (isSetCompanyGroupId()) {
      if (!first) sb.append(", ");
      sb.append("companyGroupId:");
      sb.append(this.companyGroupId);
      first = false;
    }
    if (isSetProductName()) {
      if (!first) sb.append(", ");
      sb.append("productName:");
      if (this.productName == null) {
        sb.append("null");
      } else {
        sb.append(this.productName);
      }
      first = false;
    }
    if (isSetProductDescription()) {
      if (!first) sb.append(", ");
      sb.append("productDescription:");
      if (this.productDescription == null) {
        sb.append("null");
      } else {
        sb.append(this.productDescription);
      }
      first = false;
    }
    if (isSetProductQuantity()) {
      if (!first) sb.append(", ");
      sb.append("productQuantity:");
      sb.append(this.productQuantity);
      first = false;
    }
    if (isSetPrice()) {
      if (!first) sb.append(", ");
      sb.append("price:");
      sb.append(this.price);
      first = false;
    }
    if (isSetCurrencyType()) {
      if (!first) sb.append(", ");
      sb.append("currencyType:");
      if (this.currencyType == null) {
        sb.append("null");
      } else {
        sb.append(this.currencyType);
      }
      first = false;
    }
    if (isSetTotalAmount()) {
      if (!first) sb.append(", ");
      sb.append("totalAmount:");
      sb.append(this.totalAmount);
      first = false;
    }
    if (isSetPayType()) {
      if (!first) sb.append(", ");
      sb.append("payType:");
      if (this.payType == null) {
        sb.append("null");
      } else {
        sb.append(this.payType);
      }
      first = false;
    }
    if (isSetThirdPartyOrderNo()) {
      if (!first) sb.append(", ");
      sb.append("thirdPartyOrderNo:");
      if (this.thirdPartyOrderNo == null) {
        sb.append("null");
      } else {
        sb.append(this.thirdPartyOrderNo);
      }
      first = false;
    }
    if (isSetStatus()) {
      if (!first) sb.append(", ");
      sb.append("status:");
      if (this.status == null) {
        sb.append("null");
      } else {
        sb.append(this.status);
      }
      first = false;
    }
    if (isSetTradeInfo()) {
      if (!first) sb.append(", ");
      sb.append("tradeInfo:");
      if (this.tradeInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.tradeInfo);
      }
      first = false;
    }
    if (isSetNeedOperator()) {
      if (!first) sb.append(", ");
      sb.append("needOperator:");
      sb.append(this.needOperator);
      first = false;
    }
    if (isSetOperator()) {
      if (!first) sb.append(", ");
      sb.append("operator:");
      if (this.operator == null) {
        sb.append("null");
      } else {
        sb.append(this.operator);
      }
      first = false;
    }
    if (isSetOperation()) {
      if (!first) sb.append(", ");
      sb.append("operation:");
      if (this.operation == null) {
        sb.append("null");
      } else {
        sb.append(this.operation);
      }
      first = false;
    }
    if (isSetCompanyGroupName()) {
      if (!first) sb.append(", ");
      sb.append("companyGroupName:");
      if (this.companyGroupName == null) {
        sb.append("null");
      } else {
        sb.append(this.companyGroupName);
      }
      first = false;
    }
    if (isSetExtraInfo()) {
      if (!first) sb.append(", ");
      sb.append("extraInfo:");
      if (this.extraInfo == null) {
        sb.append("null");
      } else {
        sb.append(this.extraInfo);
      }
      first = false;
    }
    if (isSetCreateTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("createTimestamp:");
      sb.append(this.createTimestamp);
      first = false;
    }
    if (isSetLastModifyTimestamp()) {
      if (!first) sb.append(", ");
      sb.append("lastModifyTimestamp:");
      sb.append(this.lastModifyTimestamp);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class OrderStandardSchemeFactory implements SchemeFactory {
    public OrderStandardScheme getScheme() {
      return new OrderStandardScheme();
    }
  }

  private static class OrderStandardScheme extends StandardScheme<Order> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Order struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ORDER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.orderId = iprot.readI32();
              struct.setOrderIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SOURCE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.source = OrderSource.findByValue(iprot.readI32());
              struct.setSourceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PRODUCT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productId = iprot.readI32();
              struct.setProductIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyId = iprot.readI32();
              struct.setCompanyIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // COMPANY_GROUP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.companyGroupId = iprot.readI32();
              struct.setCompanyGroupIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PRODUCT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productName = iprot.readString();
              struct.setProductNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PRODUCT_DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.productDescription = iprot.readString();
              struct.setProductDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // PRODUCT_QUANTITY
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.productQuantity = iprot.readI32();
              struct.setProductQuantityIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // PRICE
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.price = iprot.readDouble();
              struct.setPriceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // CURRENCY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.currencyType = com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType.findByValue(iprot.readI32());
              struct.setCurrencyTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // TOTAL_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.totalAmount = iprot.readDouble();
              struct.setTotalAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // PAY_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.payType = PayType.findByValue(iprot.readI32());
              struct.setPayTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // THIRD_PARTY_ORDER_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.thirdPartyOrderNo = iprot.readString();
              struct.setThirdPartyOrderNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.status = OrderStatus.findByValue(iprot.readI32());
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // TRADE_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.tradeInfo = iprot.readString();
              struct.setTradeInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // NEED_OPERATOR
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.needOperator = iprot.readBool();
              struct.setNeedOperatorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // OPERATOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.operator = iprot.readString();
              struct.setOperatorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // OPERATION
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.operation = com.longsheng.xueqiao.payment.product.thriftapi.Operation.findByValue(iprot.readI32());
              struct.setOperationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // COMPANY_GROUP_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.companyGroupName = iprot.readString();
              struct.setCompanyGroupNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // EXTRA_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.extraInfo = iprot.readString();
              struct.setExtraInfoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 30: // CREATE_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTimestamp = iprot.readI64();
              struct.setCreateTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 31: // LAST_MODIFY_TIMESTAMP
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastModifyTimestamp = iprot.readI64();
              struct.setLastModifyTimestampIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Order struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetOrderId()) {
        oprot.writeFieldBegin(ORDER_ID_FIELD_DESC);
        oprot.writeI32(struct.orderId);
        oprot.writeFieldEnd();
      }
      if (struct.source != null) {
        if (struct.isSetSource()) {
          oprot.writeFieldBegin(SOURCE_FIELD_DESC);
          oprot.writeI32(struct.source.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetProductId()) {
        oprot.writeFieldBegin(PRODUCT_ID_FIELD_DESC);
        oprot.writeI32(struct.productId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyId()) {
        oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
        oprot.writeI32(struct.companyId);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCompanyGroupId()) {
        oprot.writeFieldBegin(COMPANY_GROUP_ID_FIELD_DESC);
        oprot.writeI32(struct.companyGroupId);
        oprot.writeFieldEnd();
      }
      if (struct.productName != null) {
        if (struct.isSetProductName()) {
          oprot.writeFieldBegin(PRODUCT_NAME_FIELD_DESC);
          oprot.writeString(struct.productName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.productDescription != null) {
        if (struct.isSetProductDescription()) {
          oprot.writeFieldBegin(PRODUCT_DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.productDescription);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetProductQuantity()) {
        oprot.writeFieldBegin(PRODUCT_QUANTITY_FIELD_DESC);
        oprot.writeI32(struct.productQuantity);
        oprot.writeFieldEnd();
      }
      if (struct.isSetPrice()) {
        oprot.writeFieldBegin(PRICE_FIELD_DESC);
        oprot.writeDouble(struct.price);
        oprot.writeFieldEnd();
      }
      if (struct.currencyType != null) {
        if (struct.isSetCurrencyType()) {
          oprot.writeFieldBegin(CURRENCY_TYPE_FIELD_DESC);
          oprot.writeI32(struct.currencyType.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetTotalAmount()) {
        oprot.writeFieldBegin(TOTAL_AMOUNT_FIELD_DESC);
        oprot.writeDouble(struct.totalAmount);
        oprot.writeFieldEnd();
      }
      if (struct.payType != null) {
        if (struct.isSetPayType()) {
          oprot.writeFieldBegin(PAY_TYPE_FIELD_DESC);
          oprot.writeI32(struct.payType.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.thirdPartyOrderNo != null) {
        if (struct.isSetThirdPartyOrderNo()) {
          oprot.writeFieldBegin(THIRD_PARTY_ORDER_NO_FIELD_DESC);
          oprot.writeString(struct.thirdPartyOrderNo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.status != null) {
        if (struct.isSetStatus()) {
          oprot.writeFieldBegin(STATUS_FIELD_DESC);
          oprot.writeI32(struct.status.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.tradeInfo != null) {
        if (struct.isSetTradeInfo()) {
          oprot.writeFieldBegin(TRADE_INFO_FIELD_DESC);
          oprot.writeString(struct.tradeInfo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetNeedOperator()) {
        oprot.writeFieldBegin(NEED_OPERATOR_FIELD_DESC);
        oprot.writeBool(struct.needOperator);
        oprot.writeFieldEnd();
      }
      if (struct.operator != null) {
        if (struct.isSetOperator()) {
          oprot.writeFieldBegin(OPERATOR_FIELD_DESC);
          oprot.writeString(struct.operator);
          oprot.writeFieldEnd();
        }
      }
      if (struct.operation != null) {
        if (struct.isSetOperation()) {
          oprot.writeFieldBegin(OPERATION_FIELD_DESC);
          oprot.writeI32(struct.operation.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.companyGroupName != null) {
        if (struct.isSetCompanyGroupName()) {
          oprot.writeFieldBegin(COMPANY_GROUP_NAME_FIELD_DESC);
          oprot.writeString(struct.companyGroupName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraInfo != null) {
        if (struct.isSetExtraInfo()) {
          oprot.writeFieldBegin(EXTRA_INFO_FIELD_DESC);
          oprot.writeString(struct.extraInfo);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeFieldBegin(CREATE_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.createTimestamp);
        oprot.writeFieldEnd();
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeFieldBegin(LAST_MODIFY_TIMESTAMP_FIELD_DESC);
        oprot.writeI64(struct.lastModifyTimestamp);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class OrderTupleSchemeFactory implements SchemeFactory {
    public OrderTupleScheme getScheme() {
      return new OrderTupleScheme();
    }
  }

  private static class OrderTupleScheme extends TupleScheme<Order> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Order struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetOrderId()) {
        optionals.set(0);
      }
      if (struct.isSetSource()) {
        optionals.set(1);
      }
      if (struct.isSetProductId()) {
        optionals.set(2);
      }
      if (struct.isSetCompanyId()) {
        optionals.set(3);
      }
      if (struct.isSetCompanyGroupId()) {
        optionals.set(4);
      }
      if (struct.isSetProductName()) {
        optionals.set(5);
      }
      if (struct.isSetProductDescription()) {
        optionals.set(6);
      }
      if (struct.isSetProductQuantity()) {
        optionals.set(7);
      }
      if (struct.isSetPrice()) {
        optionals.set(8);
      }
      if (struct.isSetCurrencyType()) {
        optionals.set(9);
      }
      if (struct.isSetTotalAmount()) {
        optionals.set(10);
      }
      if (struct.isSetPayType()) {
        optionals.set(11);
      }
      if (struct.isSetThirdPartyOrderNo()) {
        optionals.set(12);
      }
      if (struct.isSetStatus()) {
        optionals.set(13);
      }
      if (struct.isSetTradeInfo()) {
        optionals.set(14);
      }
      if (struct.isSetNeedOperator()) {
        optionals.set(15);
      }
      if (struct.isSetOperator()) {
        optionals.set(16);
      }
      if (struct.isSetOperation()) {
        optionals.set(17);
      }
      if (struct.isSetCompanyGroupName()) {
        optionals.set(18);
      }
      if (struct.isSetExtraInfo()) {
        optionals.set(19);
      }
      if (struct.isSetCreateTimestamp()) {
        optionals.set(20);
      }
      if (struct.isSetLastModifyTimestamp()) {
        optionals.set(21);
      }
      oprot.writeBitSet(optionals, 22);
      if (struct.isSetOrderId()) {
        oprot.writeI32(struct.orderId);
      }
      if (struct.isSetSource()) {
        oprot.writeI32(struct.source.getValue());
      }
      if (struct.isSetProductId()) {
        oprot.writeI32(struct.productId);
      }
      if (struct.isSetCompanyId()) {
        oprot.writeI32(struct.companyId);
      }
      if (struct.isSetCompanyGroupId()) {
        oprot.writeI32(struct.companyGroupId);
      }
      if (struct.isSetProductName()) {
        oprot.writeString(struct.productName);
      }
      if (struct.isSetProductDescription()) {
        oprot.writeString(struct.productDescription);
      }
      if (struct.isSetProductQuantity()) {
        oprot.writeI32(struct.productQuantity);
      }
      if (struct.isSetPrice()) {
        oprot.writeDouble(struct.price);
      }
      if (struct.isSetCurrencyType()) {
        oprot.writeI32(struct.currencyType.getValue());
      }
      if (struct.isSetTotalAmount()) {
        oprot.writeDouble(struct.totalAmount);
      }
      if (struct.isSetPayType()) {
        oprot.writeI32(struct.payType.getValue());
      }
      if (struct.isSetThirdPartyOrderNo()) {
        oprot.writeString(struct.thirdPartyOrderNo);
      }
      if (struct.isSetStatus()) {
        oprot.writeI32(struct.status.getValue());
      }
      if (struct.isSetTradeInfo()) {
        oprot.writeString(struct.tradeInfo);
      }
      if (struct.isSetNeedOperator()) {
        oprot.writeBool(struct.needOperator);
      }
      if (struct.isSetOperator()) {
        oprot.writeString(struct.operator);
      }
      if (struct.isSetOperation()) {
        oprot.writeI32(struct.operation.getValue());
      }
      if (struct.isSetCompanyGroupName()) {
        oprot.writeString(struct.companyGroupName);
      }
      if (struct.isSetExtraInfo()) {
        oprot.writeString(struct.extraInfo);
      }
      if (struct.isSetCreateTimestamp()) {
        oprot.writeI64(struct.createTimestamp);
      }
      if (struct.isSetLastModifyTimestamp()) {
        oprot.writeI64(struct.lastModifyTimestamp);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Order struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(22);
      if (incoming.get(0)) {
        struct.orderId = iprot.readI32();
        struct.setOrderIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.source = OrderSource.findByValue(iprot.readI32());
        struct.setSourceIsSet(true);
      }
      if (incoming.get(2)) {
        struct.productId = iprot.readI32();
        struct.setProductIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.companyId = iprot.readI32();
        struct.setCompanyIdIsSet(true);
      }
      if (incoming.get(4)) {
        struct.companyGroupId = iprot.readI32();
        struct.setCompanyGroupIdIsSet(true);
      }
      if (incoming.get(5)) {
        struct.productName = iprot.readString();
        struct.setProductNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.productDescription = iprot.readString();
        struct.setProductDescriptionIsSet(true);
      }
      if (incoming.get(7)) {
        struct.productQuantity = iprot.readI32();
        struct.setProductQuantityIsSet(true);
      }
      if (incoming.get(8)) {
        struct.price = iprot.readDouble();
        struct.setPriceIsSet(true);
      }
      if (incoming.get(9)) {
        struct.currencyType = com.longsheng.xueqiao.payment.product.thriftapi.CurrencyType.findByValue(iprot.readI32());
        struct.setCurrencyTypeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.totalAmount = iprot.readDouble();
        struct.setTotalAmountIsSet(true);
      }
      if (incoming.get(11)) {
        struct.payType = PayType.findByValue(iprot.readI32());
        struct.setPayTypeIsSet(true);
      }
      if (incoming.get(12)) {
        struct.thirdPartyOrderNo = iprot.readString();
        struct.setThirdPartyOrderNoIsSet(true);
      }
      if (incoming.get(13)) {
        struct.status = OrderStatus.findByValue(iprot.readI32());
        struct.setStatusIsSet(true);
      }
      if (incoming.get(14)) {
        struct.tradeInfo = iprot.readString();
        struct.setTradeInfoIsSet(true);
      }
      if (incoming.get(15)) {
        struct.needOperator = iprot.readBool();
        struct.setNeedOperatorIsSet(true);
      }
      if (incoming.get(16)) {
        struct.operator = iprot.readString();
        struct.setOperatorIsSet(true);
      }
      if (incoming.get(17)) {
        struct.operation = com.longsheng.xueqiao.payment.product.thriftapi.Operation.findByValue(iprot.readI32());
        struct.setOperationIsSet(true);
      }
      if (incoming.get(18)) {
        struct.companyGroupName = iprot.readString();
        struct.setCompanyGroupNameIsSet(true);
      }
      if (incoming.get(19)) {
        struct.extraInfo = iprot.readString();
        struct.setExtraInfoIsSet(true);
      }
      if (incoming.get(20)) {
        struct.createTimestamp = iprot.readI64();
        struct.setCreateTimestampIsSet(true);
      }
      if (incoming.get(21)) {
        struct.lastModifyTimestamp = iprot.readI64();
        struct.setLastModifyTimestampIsSet(true);
      }
    }
  }

}

