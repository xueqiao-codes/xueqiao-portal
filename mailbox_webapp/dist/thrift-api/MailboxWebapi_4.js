//
// Autogenerated by Thrift Compiler (0.9.1)
//
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
//


//HELPER FUNCTIONS AND STRUCTURES

MailboxWebapi_reqTemplate_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
MailboxWebapi_reqTemplate_args.prototype = {};
MailboxWebapi_reqTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new QueryMBMessageTemplateOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqTemplate_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqTemplate_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_reqTemplate_result.prototype = {};
MailboxWebapi_reqTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new MBMessageTemplatePage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_addTemplate_args = function(args) {
  this.platformArgs = null;
  this.template = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.template !== undefined) {
      this.template = args.template;
    }
  }
};
MailboxWebapi_addTemplate_args.prototype = {};
MailboxWebapi_addTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.template = new MBMessageTemplate();
        this.template.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_addTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_addTemplate_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.template !== null && this.template !== undefined) {
    output.writeFieldBegin('template', Thrift.Type.STRUCT, 2);
    this.template.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_addTemplate_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_addTemplate_result.prototype = {};
MailboxWebapi_addTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new OperateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_addTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_addTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_updateTemplate_args = function(args) {
  this.platformArgs = null;
  this.template = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.template !== undefined) {
      this.template = args.template;
    }
  }
};
MailboxWebapi_updateTemplate_args.prototype = {};
MailboxWebapi_updateTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.template = new MBMessageTemplate();
        this.template.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_updateTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_updateTemplate_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.template !== null && this.template !== undefined) {
    output.writeFieldBegin('template', Thrift.Type.STRUCT, 2);
    this.template.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_updateTemplate_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_updateTemplate_result.prototype = {};
MailboxWebapi_updateTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new OperateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_updateTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_updateTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_removeTemplate_args = function(args) {
  this.platformArgs = null;
  this.templateId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.templateId !== undefined) {
      this.templateId = args.templateId;
    }
  }
};
MailboxWebapi_removeTemplate_args.prototype = {};
MailboxWebapi_removeTemplate_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.templateId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_removeTemplate_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_removeTemplate_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.templateId !== null && this.templateId !== undefined) {
    output.writeFieldBegin('templateId', Thrift.Type.I64, 2);
    output.writeI64(this.templateId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_removeTemplate_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_removeTemplate_result.prototype = {};
MailboxWebapi_removeTemplate_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new OperateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_removeTemplate_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_removeTemplate_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqMBMessageJob_args = function(args) {
  this.platformArgs = null;
  this.option = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.option !== undefined) {
      this.option = args.option;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
MailboxWebapi_reqMBMessageJob_args.prototype = {};
MailboxWebapi_reqMBMessageJob_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.option = new QueryMBMessageJobOption();
        this.option.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqMBMessageJob_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqMBMessageJob_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.option !== null && this.option !== undefined) {
    output.writeFieldBegin('option', Thrift.Type.STRUCT, 2);
    this.option.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqMBMessageJob_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_reqMBMessageJob_result.prototype = {};
MailboxWebapi_reqMBMessageJob_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new MBMessageJobPage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqMBMessageJob_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqMBMessageJob_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_addMBMessage_args = function(args) {
  this.platformArgs = null;
  this.message = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.message !== undefined) {
      this.message = args.message;
    }
  }
};
MailboxWebapi_addMBMessage_args.prototype = {};
MailboxWebapi_addMBMessage_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.message = new MBMessage();
        this.message.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_addMBMessage_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_addMBMessage_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.message !== null && this.message !== undefined) {
    output.writeFieldBegin('message', Thrift.Type.STRUCT, 2);
    this.message.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_addMBMessage_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_addMBMessage_result.prototype = {};
MailboxWebapi_addMBMessage_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new OperateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_addMBMessage_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_addMBMessage_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqCompanyReceiver_args = function(args) {
  this.platformArgs = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
  }
};
MailboxWebapi_reqCompanyReceiver_args.prototype = {};
MailboxWebapi_reqCompanyReceiver_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqCompanyReceiver_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqCompanyReceiver_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqCompanyReceiver_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_reqCompanyReceiver_result.prototype = {};
MailboxWebapi_reqCompanyReceiver_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size24 = 0;
        var _rtmp328;
        this.success = [];
        var _etype27 = 0;
        _rtmp328 = input.readListBegin();
        _etype27 = _rtmp328.etype;
        _size24 = _rtmp328.size;
        for (var _i29 = 0; _i29 < _size24; ++_i29)
        {
          var elem30 = null;
          elem30 = new CompanyReceiver();
          elem30.read(input);
          this.success.push(elem30);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqCompanyReceiver_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqCompanyReceiver_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter31 in this.success)
    {
      if (this.success.hasOwnProperty(iter31))
      {
        iter31 = this.success[iter31];
        iter31.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqGroupReceiver_args = function(args) {
  this.platformArgs = null;
  this.companyId = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.companyId !== undefined) {
      this.companyId = args.companyId;
    }
  }
};
MailboxWebapi_reqGroupReceiver_args.prototype = {};
MailboxWebapi_reqGroupReceiver_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.companyId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqGroupReceiver_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqGroupReceiver_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.companyId !== null && this.companyId !== undefined) {
    output.writeFieldBegin('companyId', Thrift.Type.I64, 2);
    output.writeI64(this.companyId);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqGroupReceiver_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_reqGroupReceiver_result.prototype = {};
MailboxWebapi_reqGroupReceiver_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size32 = 0;
        var _rtmp336;
        this.success = [];
        var _etype35 = 0;
        _rtmp336 = input.readListBegin();
        _etype35 = _rtmp336.etype;
        _size32 = _rtmp336.size;
        for (var _i37 = 0; _i37 < _size32; ++_i37)
        {
          var elem38 = null;
          elem38 = new GroupReceiver();
          elem38.read(input);
          this.success.push(elem38);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqGroupReceiver_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqGroupReceiver_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter39 in this.success)
    {
      if (this.success.hasOwnProperty(iter39))
      {
        iter39 = this.success[iter39];
        iter39.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqContentText_args = function(args) {
  this.platformArgs = null;
  this.fileName = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.fileName !== undefined) {
      this.fileName = args.fileName;
    }
  }
};
MailboxWebapi_reqContentText_args.prototype = {};
MailboxWebapi_reqContentText_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRING) {
        this.fileName = input.readString().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqContentText_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqContentText_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.fileName !== null && this.fileName !== undefined) {
    output.writeFieldBegin('fileName', Thrift.Type.STRING, 2);
    output.writeString(this.fileName);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqContentText_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_reqContentText_result.prototype = {};
MailboxWebapi_reqContentText_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new ContentText();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqContentText_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqContentText_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqMBMessageTemplateSelector_args = function(args) {
  this.platformArgs = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
  }
};
MailboxWebapi_reqMBMessageTemplateSelector_args.prototype = {};
MailboxWebapi_reqMBMessageTemplateSelector_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 0:
        input.skip(ftype);
        break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqMBMessageTemplateSelector_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqMBMessageTemplateSelector_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqMBMessageTemplateSelector_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_reqMBMessageTemplateSelector_result.prototype = {};
MailboxWebapi_reqMBMessageTemplateSelector_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.LIST) {
        var _size40 = 0;
        var _rtmp344;
        this.success = [];
        var _etype43 = 0;
        _rtmp344 = input.readListBegin();
        _etype43 = _rtmp344.etype;
        _size40 = _rtmp344.size;
        for (var _i45 = 0; _i45 < _size40; ++_i45)
        {
          var elem46 = null;
          elem46 = new MBMessageTemplateSelector();
          elem46.read(input);
          this.success.push(elem46);
        }
        input.readListEnd();
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqMBMessageTemplateSelector_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqMBMessageTemplateSelector_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.LIST, 0);
    output.writeListBegin(Thrift.Type.STRUCT, this.success.length);
    for (var iter47 in this.success)
    {
      if (this.success.hasOwnProperty(iter47))
      {
        iter47 = this.success[iter47];
        iter47.write(output);
      }
    }
    output.writeListEnd();
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqMBMessage_args = function(args) {
  this.platformArgs = null;
  this.queryOption = null;
  this.pageOption = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.queryOption !== undefined) {
      this.queryOption = args.queryOption;
    }
    if (args.pageOption !== undefined) {
      this.pageOption = args.pageOption;
    }
  }
};
MailboxWebapi_reqMBMessage_args.prototype = {};
MailboxWebapi_reqMBMessage_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.STRUCT) {
        this.queryOption = new QueryMBMessageOption();
        this.queryOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.STRUCT) {
        this.pageOption = new IndexedPageOption();
        this.pageOption.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqMBMessage_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqMBMessage_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.queryOption !== null && this.queryOption !== undefined) {
    output.writeFieldBegin('queryOption', Thrift.Type.STRUCT, 2);
    this.queryOption.write(output);
    output.writeFieldEnd();
  }
  if (this.pageOption !== null && this.pageOption !== undefined) {
    output.writeFieldBegin('pageOption', Thrift.Type.STRUCT, 3);
    this.pageOption.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_reqMBMessage_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_reqMBMessage_result.prototype = {};
MailboxWebapi_reqMBMessage_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new MBMessagePage();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_reqMBMessage_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_reqMBMessage_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_updateMessageJobStatus_args = function(args) {
  this.platformArgs = null;
  this.messageJobId = null;
  this.status = null;
  if (args) {
    if (args.platformArgs !== undefined) {
      this.platformArgs = args.platformArgs;
    }
    if (args.messageJobId !== undefined) {
      this.messageJobId = args.messageJobId;
    }
    if (args.status !== undefined) {
      this.status = args.status;
    }
  }
};
MailboxWebapi_updateMessageJobStatus_args.prototype = {};
MailboxWebapi_updateMessageJobStatus_args.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.platformArgs = new PlatformArgs();
        this.platformArgs.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 2:
      if (ftype == Thrift.Type.I64) {
        this.messageJobId = input.readI64().value;
      } else {
        input.skip(ftype);
      }
      break;
      case 3:
      if (ftype == Thrift.Type.I32) {
        this.status = input.readI32().value;
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_updateMessageJobStatus_args.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_updateMessageJobStatus_args');
  if (this.platformArgs !== null && this.platformArgs !== undefined) {
    output.writeFieldBegin('platformArgs', Thrift.Type.STRUCT, 1);
    this.platformArgs.write(output);
    output.writeFieldEnd();
  }
  if (this.messageJobId !== null && this.messageJobId !== undefined) {
    output.writeFieldBegin('messageJobId', Thrift.Type.I64, 2);
    output.writeI64(this.messageJobId);
    output.writeFieldEnd();
  }
  if (this.status !== null && this.status !== undefined) {
    output.writeFieldBegin('status', Thrift.Type.I32, 3);
    output.writeI32(this.status);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapi_updateMessageJobStatus_result = function(args) {
  this.success = null;
  this.err = null;
  if (args instanceof ErrorInfo) {
    this.err = args;
    return;
  }
  if (args) {
    if (args.success !== undefined) {
      this.success = args.success;
    }
    if (args.err !== undefined) {
      this.err = args.err;
    }
  }
};
MailboxWebapi_updateMessageJobStatus_result.prototype = {};
MailboxWebapi_updateMessageJobStatus_result.prototype.read = function(input) {
  input.readStructBegin();
  while (true)
  {
    var ret = input.readFieldBegin();
    var fname = ret.fname;
    var ftype = ret.ftype;
    var fid = ret.fid;
    if (ftype == Thrift.Type.STOP) {
      break;
    }
    switch (fid)
    {
      case 0:
      if (ftype == Thrift.Type.STRUCT) {
        this.success = new OperateResult();
        this.success.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      case 1:
      if (ftype == Thrift.Type.STRUCT) {
        this.err = new ErrorInfo();
        this.err.read(input);
      } else {
        input.skip(ftype);
      }
      break;
      default:
        input.skip(ftype);
    }
    input.readFieldEnd();
  }
  input.readStructEnd();
  return;
};

MailboxWebapi_updateMessageJobStatus_result.prototype.write = function(output) {
  output.writeStructBegin('MailboxWebapi_updateMessageJobStatus_result');
  if (this.success !== null && this.success !== undefined) {
    output.writeFieldBegin('success', Thrift.Type.STRUCT, 0);
    this.success.write(output);
    output.writeFieldEnd();
  }
  if (this.err !== null && this.err !== undefined) {
    output.writeFieldBegin('err', Thrift.Type.STRUCT, 1);
    this.err.write(output);
    output.writeFieldEnd();
  }
  output.writeFieldStop();
  output.writeStructEnd();
  return;
};

MailboxWebapiClient = function(input, output) {
    this.input = input;
    this.output = (!output) ? input : output;
    this.seqid = 0;
};
MailboxWebapiClient.prototype = {};
MailboxWebapiClient.prototype.reqTemplate = function(platformArgs, option, pageOption) {
  this.send_reqTemplate(platformArgs, option, pageOption);
  return this.recv_reqTemplate();
};

MailboxWebapiClient.prototype.send_reqTemplate = function(platformArgs, option, pageOption) {
  this.output.writeMessageBegin('reqTemplate', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_reqTemplate_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_reqTemplate = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_reqTemplate_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqTemplate failed: unknown result';
};
MailboxWebapiClient.prototype.addTemplate = function(platformArgs, template) {
  this.send_addTemplate(platformArgs, template);
  return this.recv_addTemplate();
};

MailboxWebapiClient.prototype.send_addTemplate = function(platformArgs, template) {
  this.output.writeMessageBegin('addTemplate', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_addTemplate_args();
  args.platformArgs = platformArgs;
  args.template = template;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_addTemplate = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_addTemplate_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'addTemplate failed: unknown result';
};
MailboxWebapiClient.prototype.updateTemplate = function(platformArgs, template) {
  this.send_updateTemplate(platformArgs, template);
  return this.recv_updateTemplate();
};

MailboxWebapiClient.prototype.send_updateTemplate = function(platformArgs, template) {
  this.output.writeMessageBegin('updateTemplate', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_updateTemplate_args();
  args.platformArgs = platformArgs;
  args.template = template;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_updateTemplate = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_updateTemplate_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'updateTemplate failed: unknown result';
};
MailboxWebapiClient.prototype.removeTemplate = function(platformArgs, templateId) {
  this.send_removeTemplate(platformArgs, templateId);
  return this.recv_removeTemplate();
};

MailboxWebapiClient.prototype.send_removeTemplate = function(platformArgs, templateId) {
  this.output.writeMessageBegin('removeTemplate', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_removeTemplate_args();
  args.platformArgs = platformArgs;
  args.templateId = templateId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_removeTemplate = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_removeTemplate_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'removeTemplate failed: unknown result';
};
MailboxWebapiClient.prototype.reqMBMessageJob = function(platformArgs, option, pageOption) {
  this.send_reqMBMessageJob(platformArgs, option, pageOption);
  return this.recv_reqMBMessageJob();
};

MailboxWebapiClient.prototype.send_reqMBMessageJob = function(platformArgs, option, pageOption) {
  this.output.writeMessageBegin('reqMBMessageJob', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_reqMBMessageJob_args();
  args.platformArgs = platformArgs;
  args.option = option;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_reqMBMessageJob = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_reqMBMessageJob_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqMBMessageJob failed: unknown result';
};
MailboxWebapiClient.prototype.addMBMessage = function(platformArgs, message) {
  this.send_addMBMessage(platformArgs, message);
  return this.recv_addMBMessage();
};

MailboxWebapiClient.prototype.send_addMBMessage = function(platformArgs, message) {
  this.output.writeMessageBegin('addMBMessage', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_addMBMessage_args();
  args.platformArgs = platformArgs;
  args.message = message;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_addMBMessage = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_addMBMessage_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'addMBMessage failed: unknown result';
};
MailboxWebapiClient.prototype.reqCompanyReceiver = function(platformArgs) {
  this.send_reqCompanyReceiver(platformArgs);
  return this.recv_reqCompanyReceiver();
};

MailboxWebapiClient.prototype.send_reqCompanyReceiver = function(platformArgs) {
  this.output.writeMessageBegin('reqCompanyReceiver', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_reqCompanyReceiver_args();
  args.platformArgs = platformArgs;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_reqCompanyReceiver = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_reqCompanyReceiver_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqCompanyReceiver failed: unknown result';
};
MailboxWebapiClient.prototype.reqGroupReceiver = function(platformArgs, companyId) {
  this.send_reqGroupReceiver(platformArgs, companyId);
  return this.recv_reqGroupReceiver();
};

MailboxWebapiClient.prototype.send_reqGroupReceiver = function(platformArgs, companyId) {
  this.output.writeMessageBegin('reqGroupReceiver', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_reqGroupReceiver_args();
  args.platformArgs = platformArgs;
  args.companyId = companyId;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_reqGroupReceiver = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_reqGroupReceiver_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqGroupReceiver failed: unknown result';
};
MailboxWebapiClient.prototype.reqContentText = function(platformArgs, fileName) {
  this.send_reqContentText(platformArgs, fileName);
  return this.recv_reqContentText();
};

MailboxWebapiClient.prototype.send_reqContentText = function(platformArgs, fileName) {
  this.output.writeMessageBegin('reqContentText', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_reqContentText_args();
  args.platformArgs = platformArgs;
  args.fileName = fileName;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_reqContentText = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_reqContentText_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqContentText failed: unknown result';
};
MailboxWebapiClient.prototype.reqMBMessageTemplateSelector = function(platformArgs) {
  this.send_reqMBMessageTemplateSelector(platformArgs);
  return this.recv_reqMBMessageTemplateSelector();
};

MailboxWebapiClient.prototype.send_reqMBMessageTemplateSelector = function(platformArgs) {
  this.output.writeMessageBegin('reqMBMessageTemplateSelector', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_reqMBMessageTemplateSelector_args();
  args.platformArgs = platformArgs;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_reqMBMessageTemplateSelector = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_reqMBMessageTemplateSelector_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqMBMessageTemplateSelector failed: unknown result';
};
MailboxWebapiClient.prototype.reqMBMessage = function(platformArgs, queryOption, pageOption) {
  this.send_reqMBMessage(platformArgs, queryOption, pageOption);
  return this.recv_reqMBMessage();
};

MailboxWebapiClient.prototype.send_reqMBMessage = function(platformArgs, queryOption, pageOption) {
  this.output.writeMessageBegin('reqMBMessage', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_reqMBMessage_args();
  args.platformArgs = platformArgs;
  args.queryOption = queryOption;
  args.pageOption = pageOption;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_reqMBMessage = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_reqMBMessage_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'reqMBMessage failed: unknown result';
};
MailboxWebapiClient.prototype.updateMessageJobStatus = function(platformArgs, messageJobId, status) {
  this.send_updateMessageJobStatus(platformArgs, messageJobId, status);
  return this.recv_updateMessageJobStatus();
};

MailboxWebapiClient.prototype.send_updateMessageJobStatus = function(platformArgs, messageJobId, status) {
  this.output.writeMessageBegin('updateMessageJobStatus', Thrift.MessageType.CALL, this.seqid);
  var args = new MailboxWebapi_updateMessageJobStatus_args();
  args.platformArgs = platformArgs;
  args.messageJobId = messageJobId;
  args.status = status;
  args.write(this.output);
  this.output.writeMessageEnd();
  return this.output.getTransport().flush();
};

MailboxWebapiClient.prototype.recv_updateMessageJobStatus = function() {
  var ret = this.input.readMessageBegin();
  var fname = ret.fname;
  var mtype = ret.mtype;
  var rseqid = ret.rseqid;
  if (mtype == Thrift.MessageType.EXCEPTION) {
    var x = new Thrift.TApplicationException();
    x.read(this.input);
    this.input.readMessageEnd();
    throw x;
  }
  var result = new MailboxWebapi_updateMessageJobStatus_result();
  result.read(this.input);
  this.input.readMessageEnd();

  if (null !== result.err) {
    throw result.err;
  }
  if (null !== result.success) {
    return result.success;
  }
  throw 'updateMessageJobStatus failed: unknown result';
};
