/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package xueqiao.trade.admin.web.api.thriftapi;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ReqQuotationAccountInfoOption implements org.apache.thrift.TBase<ReqQuotationAccountInfoOption, ReqQuotationAccountInfoOption._Fields>, java.io.Serializable, Cloneable, Comparable<ReqQuotationAccountInfoOption> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ReqQuotationAccountInfoOption");

  private static final org.apache.thrift.protocol.TField ACCOUNT_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("accountId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField PLATFORM_ENV_FIELD_DESC = new org.apache.thrift.protocol.TField("platformEnv", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNamePartical", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField ACCOUNT_NICK_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("accountNickNamePartical", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField BROKER_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("brokerNamePartical", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField COMMODITY_NAME_PARTICAL_FIELD_DESC = new org.apache.thrift.protocol.TField("commodityNamePartical", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ReqQuotationAccountInfoOptionStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ReqQuotationAccountInfoOptionTupleSchemeFactory());
  }

  public long accountId; // optional
  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
   */
  public com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv platformEnv; // optional
  public String accountNamePartical; // optional
  public String accountNickNamePartical; // optional
  public String brokerNamePartical; // optional
  public String commodityNamePartical; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACCOUNT_ID((short)1, "accountId"),
    /**
     * 
     * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
     */
    PLATFORM_ENV((short)2, "platformEnv"),
    ACCOUNT_NAME_PARTICAL((short)3, "accountNamePartical"),
    ACCOUNT_NICK_NAME_PARTICAL((short)4, "accountNickNamePartical"),
    BROKER_NAME_PARTICAL((short)5, "brokerNamePartical"),
    COMMODITY_NAME_PARTICAL((short)6, "commodityNamePartical");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACCOUNT_ID
          return ACCOUNT_ID;
        case 2: // PLATFORM_ENV
          return PLATFORM_ENV;
        case 3: // ACCOUNT_NAME_PARTICAL
          return ACCOUNT_NAME_PARTICAL;
        case 4: // ACCOUNT_NICK_NAME_PARTICAL
          return ACCOUNT_NICK_NAME_PARTICAL;
        case 5: // BROKER_NAME_PARTICAL
          return BROKER_NAME_PARTICAL;
        case 6: // COMMODITY_NAME_PARTICAL
          return COMMODITY_NAME_PARTICAL;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ACCOUNTID_ISSET_ID = 0;
  private byte __isset_bitfield = 0;
  private _Fields optionals[] = {_Fields.ACCOUNT_ID,_Fields.PLATFORM_ENV,_Fields.ACCOUNT_NAME_PARTICAL,_Fields.ACCOUNT_NICK_NAME_PARTICAL,_Fields.BROKER_NAME_PARTICAL,_Fields.COMMODITY_NAME_PARTICAL};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACCOUNT_ID, new org.apache.thrift.meta_data.FieldMetaData("accountId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PLATFORM_ENV, new org.apache.thrift.meta_data.FieldMetaData("platformEnv", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.EnumMetaData(org.apache.thrift.protocol.TType.ENUM, com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv.class)));
    tmpMap.put(_Fields.ACCOUNT_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("accountNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ACCOUNT_NICK_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("accountNickNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BROKER_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("brokerNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMMODITY_NAME_PARTICAL, new org.apache.thrift.meta_data.FieldMetaData("commodityNamePartical", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ReqQuotationAccountInfoOption.class, metaDataMap);
  }

  public ReqQuotationAccountInfoOption() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ReqQuotationAccountInfoOption(ReqQuotationAccountInfoOption other) {
    __isset_bitfield = other.__isset_bitfield;
    this.accountId = other.accountId;
    if (other.isSetPlatformEnv()) {
      this.platformEnv = other.platformEnv;
    }
    if (other.isSetAccountNamePartical()) {
      this.accountNamePartical = other.accountNamePartical;
    }
    if (other.isSetAccountNickNamePartical()) {
      this.accountNickNamePartical = other.accountNickNamePartical;
    }
    if (other.isSetBrokerNamePartical()) {
      this.brokerNamePartical = other.brokerNamePartical;
    }
    if (other.isSetCommodityNamePartical()) {
      this.commodityNamePartical = other.commodityNamePartical;
    }
  }

  public ReqQuotationAccountInfoOption deepCopy() {
    return new ReqQuotationAccountInfoOption(this);
  }

  @Override
  public void clear() {
    setAccountIdIsSet(false);
    this.accountId = 0;
    this.platformEnv = null;
    this.accountNamePartical = null;
    this.accountNickNamePartical = null;
    this.brokerNamePartical = null;
    this.commodityNamePartical = null;
  }

  public long getAccountId() {
    return this.accountId;
  }

  public ReqQuotationAccountInfoOption setAccountId(long accountId) {
    this.accountId = accountId;
    setAccountIdIsSet(true);
    return this;
  }

  public void unsetAccountId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  /** Returns true if field accountId is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountId() {
    return EncodingUtils.testBit(__isset_bitfield, __ACCOUNTID_ISSET_ID);
  }

  public void setAccountIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ACCOUNTID_ISSET_ID, value);
  }

  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
   */
  public com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv getPlatformEnv() {
    return this.platformEnv;
  }

  /**
   * 
   * @see com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv
   */
  public ReqQuotationAccountInfoOption setPlatformEnv(com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv platformEnv) {
    this.platformEnv = platformEnv;
    return this;
  }

  public void unsetPlatformEnv() {
    this.platformEnv = null;
  }

  /** Returns true if field platformEnv is set (has been assigned a value) and false otherwise */
  public boolean isSetPlatformEnv() {
    return this.platformEnv != null;
  }

  public void setPlatformEnvIsSet(boolean value) {
    if (!value) {
      this.platformEnv = null;
    }
  }

  public String getAccountNamePartical() {
    return this.accountNamePartical;
  }

  public ReqQuotationAccountInfoOption setAccountNamePartical(String accountNamePartical) {
    this.accountNamePartical = accountNamePartical;
    return this;
  }

  public void unsetAccountNamePartical() {
    this.accountNamePartical = null;
  }

  /** Returns true if field accountNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNamePartical() {
    return this.accountNamePartical != null;
  }

  public void setAccountNameParticalIsSet(boolean value) {
    if (!value) {
      this.accountNamePartical = null;
    }
  }

  public String getAccountNickNamePartical() {
    return this.accountNickNamePartical;
  }

  public ReqQuotationAccountInfoOption setAccountNickNamePartical(String accountNickNamePartical) {
    this.accountNickNamePartical = accountNickNamePartical;
    return this;
  }

  public void unsetAccountNickNamePartical() {
    this.accountNickNamePartical = null;
  }

  /** Returns true if field accountNickNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetAccountNickNamePartical() {
    return this.accountNickNamePartical != null;
  }

  public void setAccountNickNameParticalIsSet(boolean value) {
    if (!value) {
      this.accountNickNamePartical = null;
    }
  }

  public String getBrokerNamePartical() {
    return this.brokerNamePartical;
  }

  public ReqQuotationAccountInfoOption setBrokerNamePartical(String brokerNamePartical) {
    this.brokerNamePartical = brokerNamePartical;
    return this;
  }

  public void unsetBrokerNamePartical() {
    this.brokerNamePartical = null;
  }

  /** Returns true if field brokerNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetBrokerNamePartical() {
    return this.brokerNamePartical != null;
  }

  public void setBrokerNameParticalIsSet(boolean value) {
    if (!value) {
      this.brokerNamePartical = null;
    }
  }

  public String getCommodityNamePartical() {
    return this.commodityNamePartical;
  }

  public ReqQuotationAccountInfoOption setCommodityNamePartical(String commodityNamePartical) {
    this.commodityNamePartical = commodityNamePartical;
    return this;
  }

  public void unsetCommodityNamePartical() {
    this.commodityNamePartical = null;
  }

  /** Returns true if field commodityNamePartical is set (has been assigned a value) and false otherwise */
  public boolean isSetCommodityNamePartical() {
    return this.commodityNamePartical != null;
  }

  public void setCommodityNameParticalIsSet(boolean value) {
    if (!value) {
      this.commodityNamePartical = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ACCOUNT_ID:
      if (value == null) {
        unsetAccountId();
      } else {
        setAccountId((Long)value);
      }
      break;

    case PLATFORM_ENV:
      if (value == null) {
        unsetPlatformEnv();
      } else {
        setPlatformEnv((com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv)value);
      }
      break;

    case ACCOUNT_NAME_PARTICAL:
      if (value == null) {
        unsetAccountNamePartical();
      } else {
        setAccountNamePartical((String)value);
      }
      break;

    case ACCOUNT_NICK_NAME_PARTICAL:
      if (value == null) {
        unsetAccountNickNamePartical();
      } else {
        setAccountNickNamePartical((String)value);
      }
      break;

    case BROKER_NAME_PARTICAL:
      if (value == null) {
        unsetBrokerNamePartical();
      } else {
        setBrokerNamePartical((String)value);
      }
      break;

    case COMMODITY_NAME_PARTICAL:
      if (value == null) {
        unsetCommodityNamePartical();
      } else {
        setCommodityNamePartical((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ACCOUNT_ID:
      return Long.valueOf(getAccountId());

    case PLATFORM_ENV:
      return getPlatformEnv();

    case ACCOUNT_NAME_PARTICAL:
      return getAccountNamePartical();

    case ACCOUNT_NICK_NAME_PARTICAL:
      return getAccountNickNamePartical();

    case BROKER_NAME_PARTICAL:
      return getBrokerNamePartical();

    case COMMODITY_NAME_PARTICAL:
      return getCommodityNamePartical();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ACCOUNT_ID:
      return isSetAccountId();
    case PLATFORM_ENV:
      return isSetPlatformEnv();
    case ACCOUNT_NAME_PARTICAL:
      return isSetAccountNamePartical();
    case ACCOUNT_NICK_NAME_PARTICAL:
      return isSetAccountNickNamePartical();
    case BROKER_NAME_PARTICAL:
      return isSetBrokerNamePartical();
    case COMMODITY_NAME_PARTICAL:
      return isSetCommodityNamePartical();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ReqQuotationAccountInfoOption)
      return this.equals((ReqQuotationAccountInfoOption)that);
    return false;
  }

  public boolean equals(ReqQuotationAccountInfoOption that) {
    if (that == null)
      return false;

    boolean this_present_accountId = true && this.isSetAccountId();
    boolean that_present_accountId = true && that.isSetAccountId();
    if (this_present_accountId || that_present_accountId) {
      if (!(this_present_accountId && that_present_accountId))
        return false;
      if (this.accountId != that.accountId)
        return false;
    }

    boolean this_present_platformEnv = true && this.isSetPlatformEnv();
    boolean that_present_platformEnv = true && that.isSetPlatformEnv();
    if (this_present_platformEnv || that_present_platformEnv) {
      if (!(this_present_platformEnv && that_present_platformEnv))
        return false;
      if (!this.platformEnv.equals(that.platformEnv))
        return false;
    }

    boolean this_present_accountNamePartical = true && this.isSetAccountNamePartical();
    boolean that_present_accountNamePartical = true && that.isSetAccountNamePartical();
    if (this_present_accountNamePartical || that_present_accountNamePartical) {
      if (!(this_present_accountNamePartical && that_present_accountNamePartical))
        return false;
      if (!this.accountNamePartical.equals(that.accountNamePartical))
        return false;
    }

    boolean this_present_accountNickNamePartical = true && this.isSetAccountNickNamePartical();
    boolean that_present_accountNickNamePartical = true && that.isSetAccountNickNamePartical();
    if (this_present_accountNickNamePartical || that_present_accountNickNamePartical) {
      if (!(this_present_accountNickNamePartical && that_present_accountNickNamePartical))
        return false;
      if (!this.accountNickNamePartical.equals(that.accountNickNamePartical))
        return false;
    }

    boolean this_present_brokerNamePartical = true && this.isSetBrokerNamePartical();
    boolean that_present_brokerNamePartical = true && that.isSetBrokerNamePartical();
    if (this_present_brokerNamePartical || that_present_brokerNamePartical) {
      if (!(this_present_brokerNamePartical && that_present_brokerNamePartical))
        return false;
      if (!this.brokerNamePartical.equals(that.brokerNamePartical))
        return false;
    }

    boolean this_present_commodityNamePartical = true && this.isSetCommodityNamePartical();
    boolean that_present_commodityNamePartical = true && that.isSetCommodityNamePartical();
    if (this_present_commodityNamePartical || that_present_commodityNamePartical) {
      if (!(this_present_commodityNamePartical && that_present_commodityNamePartical))
        return false;
      if (!this.commodityNamePartical.equals(that.commodityNamePartical))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    return 0;
  }

  @Override
  public int compareTo(ReqQuotationAccountInfoOption other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetAccountId()).compareTo(other.isSetAccountId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountId, other.accountId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPlatformEnv()).compareTo(other.isSetPlatformEnv());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlatformEnv()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.platformEnv, other.platformEnv);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountNamePartical()).compareTo(other.isSetAccountNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNamePartical, other.accountNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAccountNickNamePartical()).compareTo(other.isSetAccountNickNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAccountNickNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.accountNickNamePartical, other.accountNickNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBrokerNamePartical()).compareTo(other.isSetBrokerNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBrokerNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.brokerNamePartical, other.brokerNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCommodityNamePartical()).compareTo(other.isSetCommodityNamePartical());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCommodityNamePartical()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.commodityNamePartical, other.commodityNamePartical);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ReqQuotationAccountInfoOption(");
    boolean first = true;

    if (isSetAccountId()) {
      sb.append("accountId:");
      sb.append(this.accountId);
      first = false;
    }
    if (isSetPlatformEnv()) {
      if (!first) sb.append(", ");
      sb.append("platformEnv:");
      if (this.platformEnv == null) {
        sb.append("null");
      } else {
        sb.append(this.platformEnv);
      }
      first = false;
    }
    if (isSetAccountNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("accountNamePartical:");
      if (this.accountNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.accountNamePartical);
      }
      first = false;
    }
    if (isSetAccountNickNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("accountNickNamePartical:");
      if (this.accountNickNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.accountNickNamePartical);
      }
      first = false;
    }
    if (isSetBrokerNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("brokerNamePartical:");
      if (this.brokerNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.brokerNamePartical);
      }
      first = false;
    }
    if (isSetCommodityNamePartical()) {
      if (!first) sb.append(", ");
      sb.append("commodityNamePartical:");
      if (this.commodityNamePartical == null) {
        sb.append("null");
      } else {
        sb.append(this.commodityNamePartical);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ReqQuotationAccountInfoOptionStandardSchemeFactory implements SchemeFactory {
    public ReqQuotationAccountInfoOptionStandardScheme getScheme() {
      return new ReqQuotationAccountInfoOptionStandardScheme();
    }
  }

  private static class ReqQuotationAccountInfoOptionStandardScheme extends StandardScheme<ReqQuotationAccountInfoOption> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ReqQuotationAccountInfoOption struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACCOUNT_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.accountId = iprot.readI64();
              struct.setAccountIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // PLATFORM_ENV
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.platformEnv = com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv.findByValue(iprot.readI32());
              struct.setPlatformEnvIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // ACCOUNT_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountNamePartical = iprot.readString();
              struct.setAccountNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // ACCOUNT_NICK_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.accountNickNamePartical = iprot.readString();
              struct.setAccountNickNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BROKER_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.brokerNamePartical = iprot.readString();
              struct.setBrokerNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // COMMODITY_NAME_PARTICAL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.commodityNamePartical = iprot.readString();
              struct.setCommodityNameParticalIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ReqQuotationAccountInfoOption struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetAccountId()) {
        oprot.writeFieldBegin(ACCOUNT_ID_FIELD_DESC);
        oprot.writeI64(struct.accountId);
        oprot.writeFieldEnd();
      }
      if (struct.platformEnv != null) {
        if (struct.isSetPlatformEnv()) {
          oprot.writeFieldBegin(PLATFORM_ENV_FIELD_DESC);
          oprot.writeI32(struct.platformEnv.getValue());
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountNamePartical != null) {
        if (struct.isSetAccountNamePartical()) {
          oprot.writeFieldBegin(ACCOUNT_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.accountNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.accountNickNamePartical != null) {
        if (struct.isSetAccountNickNamePartical()) {
          oprot.writeFieldBegin(ACCOUNT_NICK_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.accountNickNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.brokerNamePartical != null) {
        if (struct.isSetBrokerNamePartical()) {
          oprot.writeFieldBegin(BROKER_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.brokerNamePartical);
          oprot.writeFieldEnd();
        }
      }
      if (struct.commodityNamePartical != null) {
        if (struct.isSetCommodityNamePartical()) {
          oprot.writeFieldBegin(COMMODITY_NAME_PARTICAL_FIELD_DESC);
          oprot.writeString(struct.commodityNamePartical);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ReqQuotationAccountInfoOptionTupleSchemeFactory implements SchemeFactory {
    public ReqQuotationAccountInfoOptionTupleScheme getScheme() {
      return new ReqQuotationAccountInfoOptionTupleScheme();
    }
  }

  private static class ReqQuotationAccountInfoOptionTupleScheme extends TupleScheme<ReqQuotationAccountInfoOption> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ReqQuotationAccountInfoOption struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetAccountId()) {
        optionals.set(0);
      }
      if (struct.isSetPlatformEnv()) {
        optionals.set(1);
      }
      if (struct.isSetAccountNamePartical()) {
        optionals.set(2);
      }
      if (struct.isSetAccountNickNamePartical()) {
        optionals.set(3);
      }
      if (struct.isSetBrokerNamePartical()) {
        optionals.set(4);
      }
      if (struct.isSetCommodityNamePartical()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetAccountId()) {
        oprot.writeI64(struct.accountId);
      }
      if (struct.isSetPlatformEnv()) {
        oprot.writeI32(struct.platformEnv.getValue());
      }
      if (struct.isSetAccountNamePartical()) {
        oprot.writeString(struct.accountNamePartical);
      }
      if (struct.isSetAccountNickNamePartical()) {
        oprot.writeString(struct.accountNickNamePartical);
      }
      if (struct.isSetBrokerNamePartical()) {
        oprot.writeString(struct.brokerNamePartical);
      }
      if (struct.isSetCommodityNamePartical()) {
        oprot.writeString(struct.commodityNamePartical);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ReqQuotationAccountInfoOption struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.accountId = iprot.readI64();
        struct.setAccountIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.platformEnv = com.longsheng.xueqiao.contract.standard.thriftapi.TechPlatformEnv.findByValue(iprot.readI32());
        struct.setPlatformEnvIsSet(true);
      }
      if (incoming.get(2)) {
        struct.accountNamePartical = iprot.readString();
        struct.setAccountNameParticalIsSet(true);
      }
      if (incoming.get(3)) {
        struct.accountNickNamePartical = iprot.readString();
        struct.setAccountNickNameParticalIsSet(true);
      }
      if (incoming.get(4)) {
        struct.brokerNamePartical = iprot.readString();
        struct.setBrokerNameParticalIsSet(true);
      }
      if (incoming.get(5)) {
        struct.commodityNamePartical = iprot.readString();
        struct.setCommodityNameParticalIsSet(true);
      }
    }
  }

}

